<?xml version="1.0" encoding="utf-8"?>
<api version="1.0" spec="1.0" xmlns:blend="http://schemas.microsoft.com/winjs/Blend/2011" xmlns="http://openajax.org/metadata">
  <author name="Microsoft Corporation" />
  <class name="WinJS.ErrorFromName">
    <ancestor datatype="Array" />
    <constructor>
      <description locid="WinJS.Utilities.QueryCollection" type="text/plain">Represents the result of a query selector, and provides
 various operations that perform actions over the elements of
 the collection.</description>
      <parameter name="items">
        <description locid="WinJS.Utilities.QueryCollection_p:items" type="text/plain">The items resulting from the query.</description>
      </parameter>
      <returnType datatype="*" />
    </constructor>
    <properties>
      <property name="supportedForProcessing" required="false" />
    </properties>
    <events />
    <methods />
  </class>
  <class name="WinJS.UI.HtmlControl">
    <ancestor datatype="BaseInterpreter" />
    <title locid="WinJS.UI.HtmlControl_name" type="text/plain">HtmlControl</title>
    <description locid="WinJS.UI.HtmlControl" type="text/plain">Enables you to include an HTML page dynamically.</description>
    <constructor>
      <description locid="WinJS.UI.HtmlControl.constructor" type="text/plain">Initializes a new instance of HtmlControl to define a new page control.</description>
      <parameter name="element">
        <description locid="WinJS.UI.HtmlControl.constructor_p:element" type="text/plain">The element that hosts the HtmlControl.</description>
      </parameter>
      <parameter name="options">
        <description locid="WinJS.UI.HtmlControl.constructor_p:options" type="text/plain">The options for configuring the page. The uri option is required in order to specify the source
 document for the content of the page.</description>
      </parameter>
      <returnType datatype="*" />
    </constructor>
    <properties />
    <events />
    <methods />
  </class>
  <class name="WinJS.UI.TabContainer">
    <ancestor datatype="WinJS.UI.optionsParser._BaseInterpreter" />
    <constructor>
      <description locid="WinJS.UI.TabContainer.constructor" type="text/plain">Constructs the TabContainer.</description>
      <parameter name="element" datatype="HTMLElement" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.TabContainer.constructor_p:element" type="text/plain">The DOM element to be associated with the TabContainer.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description locid="WinJS.UI.TabContainer.constructor_p:options" type="text/plain">The set of options to be applied initially to the TabContainer.</description>
      </parameter>
      <returnType datatype="WinJS.UI.TabContainer">
        <description locid="WinJS.UI.TabContainer.constructor_returnValue" type="text/plain">A constructed TabContainer.</description>
      </returnType>
    </constructor>
    <properties>
      <property name="childFocus" datatype="HTMLElement" required="false">
        <description locid="WinJS.UI.TabContainer.childFocus" type="text/plain">Gets or sets the child element that has focus.</description>
      </property>
      <property name="tabIndex" datatype="Number" isInteger="true" required="false">
        <description locid="WinJS.UI.TabContainer.tabIndex" type="text/plain">Gets or sets the tab order of the control within its container.</description>
      </property>
      <property name="supportedForProcessing" required="false" />
    </properties>
    <events />
    <methods />
  </class>
  <class name="WinJS.Binding.Template">
    <ancestor datatype="ListBase" />
    <title locid="WinJS.Binding.Template_name" type="text/plain">Template</title>
    <description locid="WinJS.Binding.Template" type="text/plain">Provides a reusable declarative binding element.</description>
    <constructor>
      <description locid="WinJS.Binding.List.constructor" type="text/plain">Creates a WinJS.Binding.List object.</description>
      <parameter name="list" datatype="Array">
        <description locid="WinJS.Binding.List.constructor_p:list" type="text/plain">The array containing the elements to initalize the list.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description locid="WinJS.Binding.List.constructor_p:options" type="text/plain">If options.binding is true, the list will contain the result of calling WinJS.Binding.as() on the element values. If options.proxy is true, the list specified as the first parameter is used as the storage for the WinJS.Binding.List. This option should be used with care because uncoordinated edits to the data storage will result in errors.</description>
      </parameter>
      <returnType datatype="WinJS.Binding.List">
        <description locid="WinJS.Binding.List.constructor_returnValue" type="text/plain">The newly-constructed WinJS.Binding.List instance.</description>
      </returnType>
    </constructor>
    <properties>
      <property name="processTimeout" datatype="Number" isInteger="true" required="false">
        <description locid="WinJS.Binding.Template.processTimeout" type="text/plain">Number of milliseconds to delay instantiating declarative controls. Zero (0) will result in no delay, any negative number
 will result in a setImmediate delay, any positive number will be treated as the number of milliseconds.</description>
      </property>
      <property name="element" datatype="HTMLElement" required="false" hidden="true">
        <description locid="WinJS.Binding.Template.element" type="text/plain">Gets the DOM element that is used as the template.</description>
      </property>
    </properties>
    <events />
    <methods>
      <method name="renderItem">
        <returnType datatype="*" />
      </method>
      <method name="render">
        <description locid="WinJS.Binding.Template.render" type="text/plain">Binds values from the specified data context to elements that are descendents of the specified root element
 and have the declarative binding attributes (data-win-bind).</description>
        <parameter name="dataContext" datatype="Object">
          <description locid="WinJS.Binding.Template.render_p:dataContext" type="text/plain">The object to use for default data binding.</description>
        </parameter>
        <parameter name="container" datatype="DOMElement">
          <description locid="WinJS.Binding.Template.render_p:container" type="text/plain">The element to which to add this rendered template. If this parameter is omitted, a new DIV is created.</description>
        </parameter>
        <returnType datatype="WinJS.Promise">
          <description locid="WinJS.Binding.Template.render_returnValue" type="text/plain">A promise that is completed after binding has finished. The value is
 either the element specified in the container parameter or the created DIV.</description>
        </returnType>
      </method>
    </methods>
  </class><locale messages="base_loc_oam.xml" />
</api>