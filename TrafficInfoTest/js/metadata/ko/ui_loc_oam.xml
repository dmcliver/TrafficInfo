<?xml version="1.0" encoding="utf-8"?>
<messagebundle>
  <msg name="WinJS.UI.StorageDataSource">열거된 IStorageQueryResultBase 데이터 원본을 만듭니다.</msg>
  <msg name="WinJS.UI.StorageDataSource_p:query">열거할 개체입니다. IStorageQueryResultBase를 지원해야 합니다.</msg>
  <msg name="WinJS.UI.StorageDataSource_p:options">데이터 원본에 대한 옵션을 지정하는 개체입니다. 이 매개 변수는 선택적 요소입니다. 이러한 등록 정보를 포함할 수 있습니다: 모드: A Windows.Storage.FileProperties.ThumbnailMode - 축소판 및 축소판 그림 요청 유형을 요청 여부를 지정하는 값입니다. requestedThumbnailSize: 축소판 그림의 크기를 지정하는 숫자입니다. thumbnailOptions: 축소판에 대한 추가 옵션을 지정하는 Windows.Storage.FileProperties.ThumbnailOptions 값입니다. waitForFileLoad: 이 값을 true로 설정하는 경우만 해당 속성과 축소판이 로드된 후 데이터 원본 항목을 반환합니다.</msg>
  <msg name="WinJS.UI.FlipView">한 번에 한 항목씩 일련의 사진같은 컬렉션을 표시합니다.</msg>
  <msg name="WinJS.UI.FlipView_e:datasourcecountchanged">ItemDataSource의 항목 수가 변경되면 발생합니다.</msg>
  <msg name="WinJS.UI.FlipView_e:pagevisibilitychanged">FlipView 페이지가 보이거나 보이지 않을 때 발생합니다.</msg>
  <msg name="WinJS.UI.FlipView_e:pageselected">페이지에 FlipView를 대칭 이동하는 경우 발생합니다.</msg>
  <msg name="WinJS.UI.FlipView_e:pagecompleted">페이지에 FlipView를 대칭 이동 및 렌더러 기능을 완료하는 경우 발생합니다.</msg>
  <msg name="WinJS.UI.FlipView_part:flipView">전체 FlipView 컨트롤입니다.</msg>
  <msg name="WinJS.UI.FlipView_part:navigationButton">모든 FlipView 탐색 단추에 대한 일반 클래스입니다.</msg>
  <msg name="WinJS.UI.FlipView_part:leftNavigationButton">탐색 왼쪽 단추입니다.</msg>
  <msg name="WinJS.UI.FlipView_part:rightNavigationButton">탐색 오른쪽 단추입니다.</msg>
  <msg name="WinJS.UI.FlipView_part:topNavigationButton">탐색 위쪽 단추입니다.</msg>
  <msg name="WinJS.UI.FlipView_part:bottomNavigationButton">탐색 아래쪽 단추입니다.</msg>
  <msg name="WinJS.UI.FlipView.constructor">새 FlipView를 만듭니다.</msg>
  <msg name="WinJS.UI.FlipView.constructor_p:element">컨트롤을 호스팅하는 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.FlipView.constructor_p:options">새 컨트롤에 적용하려면 개체에 하나 이상의 속성/값 쌍이 들어있어야 합니다. 각 옵션 개체의 속성은 컨트롤의 속성 또는 이벤트 중 하나에 해당합니다. 이벤트 이름은 &quot;on&quot;으로 시작해야 합니다. 예를 들어 pageselected에 대한 이벤트 처리기를 제공하고 &quot;onpageselected&quot; 라는 속성을 옵션 개체에 추가하고 이벤트 처리기에 해당 값을 설정합니다. 이 매개 변수는 선택적 요소입니다.</msg>
  <msg name="WinJS.UI.FlipView.constructor_returnValue">새 FlipView 컨트롤입니다.</msg>
  <msg name="WinJS.UI.FlipView.next">다음 항목으로 이동합니다.</msg>
  <msg name="WinJS.UI.FlipView.next_returnValue">FlipView를 다음 페이지로 이동하는 경우 true입니다. FlipView가 마지막 페이지이거나 다른 탐색 애니메이션의 중간이면 false입니다.</msg>
  <msg name="WinJS.UI.FlipView.previous">이전 항목을 탐색합니다.</msg>
  <msg name="WinJS.UI.FlipView.previous_returnValue">FlipView를 이전 페이지로 이동하는 경우 true입니다. FlipView가 이미 첫 페이지이거나 다른 탐색 애니메이션의 중간이면 false입니다.</msg>
  <msg name="WinJS.UI.FlipView.element">FlipView 컨트롤을 호스팅하는 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.FlipView.currentPage">현재 표시된 페이지의 인덱스를 가져오거나 설정합니다. 최소값은 0이며 최대값은 데이터 원본에서 반환되는 항목의 총 개수보다 하나 적습니다.</msg>
  <msg name="WinJS.UI.FlipView.orientation">FlipView의 레이아웃(가로 또는 세로) 방향을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.FlipView.itemDataSource">표시할 항목의 FlipView를 제공하는 데이터 원본을 가져오거나 설정합니다. FlipView는 각각 자체 페이지에서 한 번에 하나의 항목을 표시합니다.</msg>
  <msg name="WinJS.UI.FlipView.itemTemplate">WinJS.Binding.Template 또는 페이지의 각 항목을 정의하는 함수를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.FlipView.itemSpacing">항목 사이의 간격(픽셀)을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.FlipView.count">FlipView 개체의 itemDataSource의 항목 개수를 반환합니다.</msg>
  <msg name="WinJS.UI.FlipView.count_returnValue">카운트를 사용할 수 없는 경우 WinJS.UI.CountResult.unknown 또는 목록 항목의 수를 포함한 약속입니다.</msg>
  <msg name="WinJS.UI.FlipView.setCustomAnimations">페이지 사이를 탐색할 때 사용하는 FlipView에 대한 사용자 지정 애니메이션을 설정합니다.</msg>
  <msg name="WinJS.UI.FlipView.setCustomAnimations_p:animations">각 탐색 동작에 대한 최대 3개의 필드를 포함 하는 개체: 다음, 이전, 점프의 각 필드는 이 시그니처를 사용하는 함수이어야 합니다: 함수(outgoingPage, incomingPage). 이 함수는 애니메이션이 완료된 후 완료되는 WinJS.Promise 개체를 반환합니다. 필드가 null 또는 정의되지 않을 경우 FlipView는 기본 애니메이션이 동작으로 되돌립니다.</msg>
  <msg name="WinJS.UI.FlipView.forceLayout">FlipView가 강제로 레이아웃을 업데이트합니다. Style.display 속성이 &quot;none&quot;으로 설정된 후 FlipView를 다시 볼 수 있게 만들 때 이 함수를 사용합니다.</msg>
  <msg name="WinJS.UI._LayoutCommon.init">이 속성은 Windows Library for JavaScript 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</msg>
  <msg name="WinJS.UI._LayoutCommon.setSite_p:layoutSite"></msg>
  <msg name="WinJS.UI._LayoutCommon.disableBackdrop">레이아웃이 가상화된 목록을 계획하는 동안 빈 영역을 방지하는 밑그림 기능을 비활성화할지 여부를 나타내는 값을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI._LayoutCommon.backdropColor">밑그림에 사용되는 기본 패턴의 채우기 색상을 가져오거나 설정합니다. 기본값은 &quot;rgba(155,155,155,0.23)&quot;입니다.</msg>
  <msg name="WinJS.UI._LayoutCommon.itemInfo">크기 항목, 새 열에 항목 배치 여부를 결정합니다.</msg>
  <msg name="WinJS.UI._LayoutCommon.groupInfo">그룹 가변 크기 항목이 있는지 여부를 나타냅니다.</msg>
  <msg name="WinJS.UI.GridLayout">새 GridLayout을 만듭니다.</msg>
  <msg name="WinJS.UI.GridLayout_p:options">집합 속성 및 새 GridLayout에 적용할 값입니다.</msg>
  <msg name="WinJS.UI.GridLayout_returnValue">새 GridLayout입니다.</msg>
  <msg name="WinJS.UI.GridLayout.horizontal">항목을 가로로 배치할 수 있는지 여부를 나타내는 값을 가져옵니다. GridLayout에 대한 이 속성은 항상 true를 반환합니다.</msg>
  <msg name="WinJS.UI.GridLayout.groupHeaderPosition">해당 항목을 기준으로 그룹 헤더의 위치를 가져오거나 설정합니다. 기본값은 &quot;top&quot;입니다.</msg>
  <msg name="WinJS.UI.GridLayout.maxRows">ListView가 표시하는 행의 최대 개수입니다.</msg>
  <msg name="WinJS.UI.ListLayout">새 ListLayout 개체를 만듭니다.</msg>
  <msg name="WinJS.UI.ListLayout_p:options">집합 속성 및 새 ListLayout에 적용할 값입니다.</msg>
  <msg name="WinJS.UI.ListLayout_returnValue">새 ListLayout 개체입니다.</msg>
  <msg name="WinJS.UI.ListLayout.horizontal">항목을 가로로 배치할 수 있는지 여부를 나타내는 값을 가져옵니다. 이 속성은 ListLayout에 대해 항상 false를 반환합니다.</msg>
  <msg name="WinJS.UI.ListLayout.getKeyboardNavigatedItem">이 API는 Windows Library for JavaScript 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</msg>
  <msg name="WinJS.UI.ListView">사용자 지정 가능한 목록 또는 표로 항목을 표시합니다.</msg>
  <msg name="WinJS.UI.ListView_e:contentanimating">ListView가 입구 또는 전환 애니메이션을 재생할 때 발생합니다.</msg>
  <msg name="WinJS.UI.ListView_e:iteminvoked">사용자가 이벤트를 탭하거나 클릭하면 발생합니다.</msg>
  <msg name="WinJS.UI.ListView_e:selectionchanging">항목을 선택 또는 선택 취소하기 전에 발생합니다.</msg>
  <msg name="WinJS.UI.ListView_e:selectionchanged">항목을 선택 또는 선택 취소한 후에 발생합니다.</msg>
  <msg name="WinJS.UI.ListView_e:loadingstatechanged">로딩 상태가 변경되면 발생합니다.</msg>
  <msg name="WinJS.UI.ListView_e:keyboardnavigating">포커스가 있는 항목이 변경되면 발생합니다.</msg>
  <msg name="WinJS.UI.ListView_part:listView">전체 ListView 컨트롤입니다.</msg>
  <msg name="WinJS.UI.ListView_part:viewport">ListView의 뷰포트입니다.</msg>
  <msg name="WinJS.UI.ListView_part:surface">ListView의 스크롤할 수 있는 영역입니다.</msg>
  <msg name="WinJS.UI.ListView_part:item">ListView의 항목입니다.</msg>
  <msg name="WinJS.UI.ListView_part:selectionbackground">백그라운드의 체크 표시를 선택합니다.</msg>
  <msg name="WinJS.UI.ListView_part:selectioncheckmark">체크 표시에서 선택합니다.</msg>
  <msg name="WinJS.UI.ListView_part:groupHeader">그룹 헤더입니다.</msg>
  <msg name="WinJS.UI.ListView_part:progressbar">ListView의 진행률 표시기입니다.</msg>
  <msg name="WinJS.UI.ListView.constructor">새 ListView를 만듭니다.</msg>
  <msg name="WinJS.UI.ListView.constructor_p:element">ListView 컨트롤을 호스팅하는 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.ListView.constructor_p:options">새 컨트롤에 적용하려면 개체에 하나 이상의 속성/값 쌍이 들어있어야 합니다. 각 옵션 개체의 속성은 컨트롤의 속성 또는 이벤트 중 하나에 해당합니다. 이벤트 이름은 &quot;on&quot;으로 시작해야 합니다. 예를 들어 selectionchanged에 대한 이벤트 처리기를 제공하고 &quot;onselectionchanged&quot; 라는 속성을 옵션 개체에 추가하고 이벤트 처리기에 해당 값을 설정합니다.</msg>
  <msg name="WinJS.UI.ListView.constructor_returnValue">새 ListView입니다.</msg>
  <msg name="WinJS.UI.ListView.element">ListView 컨트롤을 호스팅하는 DOM 요소를 가져옵니다.</msg>
  <msg name="WinJS.UI.ListView.layout">ListView의 레이아웃을 제어하는 개체를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.ListView.pagesToLoad">사용자가 loadingBehavior 속성을 증분으로 설정할 경우 pagesToLoadThreshold 속성에 의해 지정된 임계값을 초과 스크롤하면 로드하는 페이지 수를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.ListView.pagesToLoadThreshold">증분 로드를 시작하기 위한 임계값(페이지)에 가져오거나 설정합니다. 마지막 표시 항목이 목록 끝에 로드된 부분에서 지정된 페이지 수 내에 있거나 automaticallyLoadPages가 true이고 loadingBehavior가 &quot;증분&quot;으로 설정된 경우 ListView는 증분 로드를 시작합니다.</msg>
  <msg name="WinJS.UI.ListView.groupDataSource">itemDataSource에 있는 항목에 대한 그룹을 포함하는 데이터 원본을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.ListView.automaticallyLoadPages">사용자의 pagesToLoadThreshold 속성에 지정된 페이지 수를 넘어 스크롤할 때 다음 페이지 집합을 자동으로 로드할지 여부를 나타내는 값을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.ListView.loadingBehavior">얼마나 많은 데이터 항목을 DOM으로 로드할지 결정하는 값을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.ListView.selectionMode">사용자가 선택할 수 있는 ListView 항목을 지정하는 값을 가져오거나 설정합니다: &quot;none&quot;, &quot;single&quot; 또는 &quot;multi&quot;.</msg>
  <msg name="WinJS.UI.ListView.tapBehavior">사용자가 항목을 탭하거나 클릭할 때 ListView 반응을 가져오거나 설정합니다. 누르거나 클릭하여 항목을 호출할 수 있고, 선택 및 호출하거나 영향을 주지 않을 수 있습니다.</msg>
  <msg name="WinJS.UI.ListView.swipeBehavior">ListView 스와이프 상호 작용에 반응하는 방법을 가져오거나 설정합니다. 스와이프 제스처는 스와이프된 항목을 선택하거나 현재 선택 영역에 영향을 주지 않을 수 있습니다.</msg>
  <msg name="WinJS.UI.ListView.itemDataSource">ListView에 대한 항목을 제공하는 데이터 원본을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.ListView.itemTemplate">DOM 요소의 각 항목에 대한 itemDataSource에서 만드는 템플릿 함수를 가져오거나 설정합니다. 각 항목에 여러 DOM 요소를 포함할 수 있지만 단일 루트 요소를 갖도록 하는 것이 좋습니다.</msg>
  <msg name="WinJS.UI.ListView.resetItem">ListView 항목의 표현 요소를 재활용하는 경우 호출되는 함수를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.ListView.groupHeaderTemplate">DOM 요소의 각 그룹 헤더에 대한 groupDataSource에서 만드는 템플릿 함수를 가져오거나 설정합니다. 각 그룹 헤더에 여러 DOM 요소를 포함할 수 있지만 단일 루트 요소를 갖도록 해야 합니다.</msg>
  <msg name="WinJS.UI.ListView.resetGroupHeader">ListView가 그룹 헤더의 DOM 요소 표현을 재활용하는 경우 호출되는 함수를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.ListView.loadingState">ListView가 로드 중인지 여부를 나타내는 값 또는 로드가 완료되는 여부를 가져옵니다. 이 속성이 다음 값 중 하나를 반환할 수 있습니다: &quot;itemsLoading&quot;, &quot;viewPortLoaded&quot;, &quot;itemsLoaded&quot; 또는 &quot;complete&quot;입니다.</msg>
  <msg name="WinJS.UI.ListView.selection">현재 선택한 항목을 포함한 ISelection 개체를 가져옵니다.</msg>
  <msg name="WinJS.UI.ListView.indexOfFirstVisible">첫 번째로 보이는 항목을 가져오거나 설정합니다. 이 속성을 설정할 때 지정된 인덱스의 항목 목록 상단에 오도록 ListView를 스크롤합니다.</msg>
  <msg name="WinJS.UI.ListView.indexOfLastVisible">마지막으로 보이는 항목의 인덱스를 가져옵니다.</msg>
  <msg name="WinJS.UI.ListView.currentItem">키보드 포커스 및 포커스 상태를 가져와야 하는 항목을 나타내는 개체를 가져오거나 설정합니다. 개체에 이러한 속성이 있습니다: 인덱스: itemDataSource에 있는 항목 인덱스입니다. 키: itemDataSource에 있는 항목 키입니다. hasFocus:이 속성을 가져올 때 항목에 포커스가 이미 있을 경우 이 값은 true이고 그렇지 않은 경우 false입니다. 이 속성을 설정할 때 포커스를 즉시 가져와야 할 경우 이 값을 true로 설정합니다. 그렇지 않은 경우 false로 설정하고 결국 항목이 포커스를 발생합니다. showFocus: 항목이 포커스 사각형을 표시하는 경우 true, 그렇지 않은 경우 false입니다.</msg>
  <msg name="WinJS.UI.ListView.zoomableView">ZoomableView를 가져옵니다. 이 API는 SemanticZoom 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</msg>
  <msg name="WinJS.UI.ListView.elementFromIndex">지정된 인덱스의 항목에 나타나는 DOM 개체를 반환합니다.</msg>
  <msg name="WinJS.UI.ListView.elementFromIndex_p:itemIndex">해당 항목의 인덱스입니다.</msg>
  <msg name="WinJS.UI.ListView.elementFromIndex_returnValue">지정된 항목을 나타내는 DOM 개체입니다.</msg>
  <msg name="WinJS.UI.ListView.indexOfElement">지정된 DOM 요소를 표시하는 항목 인덱스를 반환합니다.</msg>
  <msg name="WinJS.UI.ListView.indexOfElement_p:element">항목을 표시하는 DOM 개체입니다.</msg>
  <msg name="WinJS.UI.ListView.indexOfElement_returnValue">지정된 DOM 요소가 표시하는 항목 인덱스입니다.</msg>
  <msg name="WinJS.UI.ListView.ensureVisible">지정된 항목이 표시됩니다. 필요한 경우 ListView를 항목으로 스크롤합니다.</msg>
  <msg name="WinJS.UI.ListView.ensureVisible_p:itemIndex">보기로 가져올 항목의 인덱스입니다.</msg>
  <msg name="WinJS.UI.ListView.loadMorePages">ListView 개체의 loadingBehavior 증분으로 설정되어 있으면 다음 페이지 집합을 로드합니다.</msg>
  <msg name="WinJS.UI.ListView.recalculateItemPosition">크기가 변경된 항목을 조정하려면 ListView에 있는 모든 보이는 항목을 다시 설정합니다. 대부분의 응용 프로그램이 이 메서드를 호출할 필요가 없습니다.</msg>
  <msg name="WinJS.UI.ListView.forceLayout">ListView가 강제로 레이아웃을 업데이트합니다. Style.display 속성이 &quot;none&quot;으로 설정된 후 ListView를 다시 볼 수 있게 만들 때 이 함수를 사용합니다.</msg>
  <msg name="WinJS.UI.ListView.scrollPosition">ListView 스크롤 막대의 위치를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.ListView.triggerDispose">ListView 삭제 서비스를 수동으로 트리거합니다. 정상적인 작업에서는 ListView 인스턴스화할 때 트리거됩니다. 그러나 일부 시나리오에서는 해당 삭제 서비스를 수동으로 실행할 수 있습니다.</msg>
  <msg name="WinJS.UI._Selection.prototype.clear">선택을 지웁니다.</msg>
  <msg name="WinJS.UI._Selection.prototype.clear_returnValue">지우기 작업이 완료된 경우 약속이 충족됩니다.</msg>
  <msg name="WinJS.UI._Selection.prototype.set">현재 선택을 취소하고 지정된 항목으로 바꿉니다.</msg>
  <msg name="WinJS.UI._Selection.prototype.set_items">선택하는 인덱스 또는 항목 키입니다. 매개 변수 항목에 서로 다른 형식의 개체를 제공할 수 있습니다: 인덱스, 키 또는 인덱스 범위를 지정할 수 있습니다. 이러한 개체 중 하나를 포함하는 배열일 수도 있습니다.</msg>
  <msg name="WinJS.UI._Selection.prototype.set_returnValue">작업이 완료된 경우 약속이 충족됩니다.</msg>
  <msg name="WinJS.UI._Selection.prototype.add">선택에 하나 이상의 항목을 추가합니다.</msg>
  <msg name="WinJS.UI._Selection.prototype.add_items">추가할 항목의 키 또는 인덱스입니다. 매개 변수 항목에 서로 다른 형식의 개체를 제공할 수 있습니다: 인덱스, 키 또는 인덱스 범위를 지정할 수 있습니다. 이러한 개체 중 하나를 포함하는 배열일 수도 있습니다.</msg>
  <msg name="WinJS.UI._Selection.prototype.remove">선택에서 지정한 항목을 제거합니다.</msg>
  <msg name="WinJS.UI._Selection.prototype.remove_items">제거할 항목의 키 또는 인덱스입니다. 매개 변수 항목에 서로 다른 형식의 개체를 제공할 수 있습니다: 인덱스, 키 또는 인덱스 범위를 지정할 수 있습니다. 이러한 개체 중 하나를 포함하는 배열일 수도 있습니다.</msg>
  <msg name="WinJS.UI.DatePicker">사용자가 날짜 값을 선택할 수 있도록 합니다.</msg>
  <msg name="WinJS.UI.DatePicker_name">날짜 선택</msg>
  <msg name="WinJS.UI.DatePicker_e:change">현재 날짜가 변경될 때 발생합니다.</msg>
  <msg name="WinJS.UI.DatePicker.constructor">DatePicker 컨트롤의 새 인스턴스를 초기화합니다.</msg>
  <msg name="WinJS.UI.DatePicker.constructor_p:element">DatePicker 컨트롤과 연결할 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.DatePicker.constructor_p:options">DatePicker 컨트롤에 처음 적용할 옵션의 집합입니다.</msg>
  <msg name="WinJS.UI.DatePicker.constructor_returnValue">생성된 DatePicker 컨트롤입니다.</msg>
  <msg name="WinJS.UI.DatePicker.calendar">사용할 달력을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.DatePicker.current">DatePicker의 현재 날짜를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.DatePicker.disabled">DatePicker가 비활성화 되어 있는지 여부를 지정합니다.</msg>
  <msg name="WinJS.UI.DatePicker.datePattern">날짜에 대한 표시 패턴을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.DatePicker.element">DatePicker에 대한 DOM 요소를 가져옵니다.</msg>
  <msg name="WinJS.UI.DatePicker.minYear">선정할 최소 윤년을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.DatePicker.maxYear">선정할 최대 윤년을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.DatePicker.monthPattern">월별 표시 패턴을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.DatePicker.yearPattern">연별 표시 패턴을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.TimePicker">사용자가 시간 값을 선택할 수 있습니다.</msg>
  <msg name="WinJS.UI.TimePicker_name">Time Picker</msg>
  <msg name="WinJS.UI.TimePicker_e:change">시간이 변경되면 발생합니다.</msg>
  <msg name="WinJS.UI.TimePicker.constructor">TimePicker 컨트롤의 새 인스턴스를 초기화합니다.</msg>
  <msg name="WinJS.UI.TimePicker.constructor_p:element">TimePicker 컨트롤과 연결할 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.TimePicker.constructor_p:options">TimePicker 컨트롤에 처음 적용할 옵션의 집합입니다.</msg>
  <msg name="WinJS.UI.TimePicker.constructor_returnValue">생성된 TimePicker 컨트롤입니다.</msg>
  <msg name="WinJS.UI.TimePicker.clock">12HourClock 또는 24HourClock을 표시하려면 시계 유형을 가져오거나 설정합니다. 이 기본값은 사용자 설정입니다.</msg>
  <msg name="WinJS.UI.TimePicker.current">TimePicker의 현재 날짜와 시간을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.TimePicker.disabled">TimePicker가 비활성화 되어 있는지 여부를 지정합니다.</msg>
  <msg name="WinJS.UI.TimePicker.element">TimePicker에 대한 DOM 요소를 가져옵니다.</msg>
  <msg name="WinJS.UI.TimePicker.hourPattern">시간에 대한 표시 패턴을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.TimePicker.minuteIncrement">분 증분을 가져오거나 설정합니다. 예를 들어 &quot;15&quot;는 TimePicker 분 컨트롤이 00, 15, 30, 45분만 표시하도록 지정합니다.</msg>
  <msg name="WinJS.UI.TimePicker.minutePattern">분 표시 패턴을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.TimePicker.periodPattern">주기 표시 패턴을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.Rating">등급 컨트롤은 1에서 maxRating까지 부여할 수 있습니다(기본값은 5입니다).</msg>
  <msg name="WinJS.UI.Rating_e:previewchange">사용자가 새 미정 등급을 선택하지만 변경 되지 않았을 경우 발생합니다.</msg>
  <msg name="WinJS.UI.Rating_e:cancel">사용자 등급 미정을 커밋하지 않고 등급 컨트롤과 상호 작용이 끝났을 때 발생합니다.</msg>
  <msg name="WinJS.UI.Rating_e:change">사용자가 userRating에 변경을 커밋하면 발생합니다.</msg>
  <msg name="WinJS.UI.Rating_part:rating">전체 등급 컨트롤입니다.</msg>
  <msg name="WinJS.UI.Rating_part:average-empty">등급 컨트롤 평균 등급을 표시할 때 빈 별입니다.</msg>
  <msg name="WinJS.UI.Rating_part:average-full">등급 컨트롤 평균 등급을 표시할 때 꽉 찬 별입니다.</msg>
  <msg name="WinJS.UI.Rating_part:user-empty">등급 컨트롤 사용자 등급을 표시할 때 빈 별입니다.</msg>
  <msg name="WinJS.UI.Rating_part:user-full">등급 컨트롤 사용자 등급을 표시할 때 꽉 찬 별입니다.</msg>
  <msg name="WinJS.UI.Rating_part:tentative-empty">등급 컨트롤 임시 등급을 표시할 때 빈 별입니다.</msg>
  <msg name="WinJS.UI.Rating_part:tentative-full">등급 컨트롤 임시 등급을 표시할 때 꽉 찬 별입니다.</msg>
  <msg name="WinJS.UI.Rating_part:disabled-empty">컨트롤을 사용할 수 없는 경우 빈 별입니다.</msg>
  <msg name="WinJS.UI.Rating_part:disabled-full">컨트롤을 사용할 수 없는 경우 꽉 찬 별입니다.</msg>
  <msg name="WinJS.UI.Rating.constructor">새 등급을 만듭니다.</msg>
  <msg name="WinJS.UI.Rating.constructor_p:element">새 등급을 호스팅하는 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.Rating.constructor_p:options">새 컨트롤에 적용하려면 개체에 하나 이상의 속성/값 쌍이 들어있어야 합니다. 각 옵션 개체의 속성은 컨트롤의 속성 또는 이벤트 중 하나에 해당합니다. 이벤트 이름은 &quot;on&quot;으로 시작해야 합니다. 예를 들어 이벤트를 취소하기 위한 처리기를 제공하고 &quot;oncancel&quot;이라는 속성을 옵션 개체에 추가하고 이벤트 처리기에 해당 값을 설정합니다. 이 매개 변수는 선택적 요소입니다.</msg>
  <msg name="WinJS.UI.Rating.constructor_returnValue">새 등급입니다.</msg>
  <msg name="WinJS.UI.Rating.maxRating">최대 가능한 등급 값을 가져오거나 설정합니다. 기본값은 5입니다.</msg>
  <msg name="WinJS.UI.Rating.userRating">사용자 등급을 가져오거나 설정합니다. 이 값은 0보다 크거나 같고 maxRating보다 작거나 같아야 합니다.</msg>
  <msg name="WinJS.UI.Rating.averageRating">평균 등급을 float 값으로 가져오거나 설정합니다. 이 값은 [0과 같고] 또는 [1보다 크거나 같아야 하고 maxRating보다 작거나 같아야 합니다].</msg>
  <msg name="WinJS.UI.Rating.disabled">컨트롤의 사용 여부를 지정하는 값을 가져오거나 설정합니다. 컨트롤이 비활성화 되면 사용자가 새로운 등급을 지정하거나 기존 등급을 수정할 수 없습니다.</msg>
  <msg name="WinJS.UI.Rating.enableClear">사용자가 컨트롤의 등급을 지울 수 있는지 여부를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.Rating.tooltipStrings">도구 설명에 있는 등급 값을 표시하는 설명 집합을 가져오거나 설정합니다. 배열은 각 등급을 사용할 수 있는 값을 포함해야 하고 일반 등급 옵션에 대한 선택적 문자열(배열 끝)을 포함할 수 있습니다.</msg>
  <msg name="WinJS.UI.Rating.element">새 등급을 호스팅하는 DOM 요소를 가져옵니다.</msg>
  <msg name="WinJS.UI.Rating.addEventListener">지정된 이벤트에 대한 이벤트 처리기를 등록합니다.</msg>
  <msg name="WinJS.UI.Rating.addEventListener_p:eventName">이벤트의 이름입니다.</msg>
  <msg name="WinJS.UI.Rating.addEventListener_p:eventCallback">이 이벤트와 연결할 이벤트 처리기 함수입니다.</msg>
  <msg name="WinJS.UI.Rating.addEventListener_p:capture">캡처 단계에 대한 이벤트 처리기를 등록하려면 true로 설정 합니다. 버블링 단계에 대한 등록은 false로 설정합니다.</msg>
  <msg name="WinJS.UI.Rating.removeEventListener">지정된 이벤트에 대한 이벤트 처리기를 등록 취소합니다.</msg>
  <msg name="WinJS.UI.Rating.removeEventListener_p:eventCallback">제거할 이벤트 처리기 함수입니다.</msg>
  <msg name="WinJS.UI.Rating.removeEventListener_p:capture">캡처 단계에 대한 이벤트 처리기를 등록 취소하려면 true로 설정 합니다. 그렇지 않으면 버블링 단계에 대한 등록 취소는 false로 설정합니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch">옵션 설정 또는 해제를 전환할 수 있는 컨트롤입니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch_e:change">스위치가 켜져 있거나(true로 체크됨) 꺼져 있을 때(false로 체크됨) 발생합니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:toggle">전체 ToggleSwitch 컨트롤입니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:switch">슬라이더는 ToggleSwitch의 상태를 전환할 수 있습니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:title">ToggleSwitch 컨트롤의 기본 텍스트입니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:label-on">스위치가 켜져 있을 때 텍스트입니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:label-off:">스위치가 꺼져 있을 때 텍스트입니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch.constructor">새 ToggleSwitch를 만듭니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch.constructor_p:element">ToggleSwitch를 호스팅하는 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch.constructor_p:options">새 컨트롤에 적용하려면 개체에 하나 이상의 속성/값 쌍이 들어있어야 합니다. 각 옵션 개체의 속성은 컨트롤의 속성 또는 이벤트 중 하나에 해당합니다. 이벤트 이름은 &quot;on&quot;으로 시작해야 합니다. 예를 들어 이벤트를 변경하기 위한 처리기를 제공하고 &quot;onchange&quot;라는 속성을 옵션 개체에 추가하고 이벤트 처리기에 해당 값을 설정합니다. 이 매개 변수는 선택적 요소입니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch.constructor_returnValue">새로운 ToggleSwitch입니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch.checked">컨트롤이 켜져 있거나(true로 체크됨) 꺼져 있을 때(false로 체크됨) 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch.disabled">컨트롤의 사용 여부를 지정하는 값을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch.element">ToggleSwitch 컨트롤을 호스팅하는 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch.labelOn">컨트롤이 켜져 있을 때 표시되는 텍스트를 가져오거나 설정합니다(true로 체크됨). 기본값은 &quot;On&quot;입니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch.labelOff">컨트롤이 꺼져 있을 때 표시되는 텍스트를 가져오거나 설정합니다(false로 체크됨). 기본값은 &quot;Off&quot;입니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch.title">ToggleSwitch 컨트롤에 대한 기본 텍스트를 가져오거나 설정합니다. 이 텍스트는 컨트롤을 켜거나 끄거나 관계 없이 항상 표시됩니다.</msg>
  <msg name="WinJS.UI.SemanticZoom">두 개의 자식 컨트롤에 의해 제공되는 확대/축소를 두 가지 뷰에서 사용할 수 있습니다. 자식 컨트롤이 축소된 보기를 제공하고 다른 확대 보기를 제공합니다.</msg>
  <msg name="WinJS.UI.SemanticZoom_part:semanticZoom">전체 SemanticZoom 컨트롤입니다.</msg>
  <msg name="WinJS.UI.SemanticZoom.constructor">새 SemanticZoom을 만듭니다.</msg>
  <msg name="WinJS.UI.SemanticZoom.constructor_p:element">SemanticZoom을 호스팅하는 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.SemanticZoom.constructor_p:options">새 컨트롤에 적용하려면 개체에 하나 이상의 속성/값 쌍이 들어있어야 합니다. 각 옵션 개체의 속성은 컨트롤의 속성 또는 이벤트 중 하나에 해당합니다. 이 매개 변수는 선택적 요소입니다.</msg>
  <msg name="WinJS.UI.SemanticZoom.constructor_returnValue">새 SemanticZoom 컨트롤입니다.</msg>
  <msg name="WinJS.UI.SemanticZoom.element">SemanticZoom 컨트롤을 호스팅하는 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.SemanticZoom.enableButton">Semantic zoom 단추를 표시할지 여부를 지정하는 값을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.SemanticZoom.zoomedOut">축소 뷰가 현재 표시되었는지 여부를 지정하는 값을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.SemanticZoom.zoomFactor">축소 뷰 범위를 지정하는 0.2와 0.85 사이의 값을 가져오거나 설정합니다. 기본값은 0.65입니다.</msg>
  <msg name="WinJS.UI.SemanticZoom.locked">SemanticZoom이 잠기고 확대 보기를 사용할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.SemanticZoom.forceLayout">SemanticZoom이 강제로 레이아웃을 업데이트합니다. Style.display 속성이 &quot;none&quot;으로 설정된 후 SemanticZoom을 다시 볼 수 있게 만들 때 이 함수를 사용합니다.</msg>
  <msg name="WinJS.UI._Overlay">오버레이 컨트롤을 생성하고 내부 DOM 요소에 연결합니다.</msg>
  <msg name="WinJS.UI._Overlay_p:element">오버레이 컨트롤에 연결할 DOM 요소입니다.</msg>
  <msg name="WinJS.UI._Overlay_p:options">오버레이 컨트롤에 처음 적용할 옵션의 집합입니다.</msg>
  <msg name="WinJS.UI._Overlay_returnValue">완전히 생성된 오버레이 컨트롤입니다.</msg>
  <msg name="WinJS.UI._Overlay.element">오버레이에 첨부되는 DOM 요소입니다.</msg>
  <msg name="WinJS.UI._Overlay.disabled">오버레이 사용 안 함, 설정 또는 HTML 가져오기 특성을 사용할 수 있습니다. 오버레이를 사용하지 않을 때 show()에 더이상 표시되지 않으며 현재 표시되는 경우 숨겨집니다.</msg>
  <msg name="WinJS.UI._Overlay.show">다른 상태에 관계 없이 숨겨진 경우 오버레이를 보여줍니다.</msg>
  <msg name="WinJS.UI._Overlay.hide">다른 상태에 관계 없이 표시되는 경우 오버레이를 숨깁니다.</msg>
  <msg name="WinJS.UI._Overlay.hidden">오버레이가 현재 표시되지 않은 경우만, true를 참조하십시오.</msg>
  <msg name="WinJS.UI._Overlay.addEventListener">이 오버레이에 대한 DOM 요소에 이벤트 수신기를 추가합니다.</msg>
  <msg name="WinJS.UI._Overlay.addEventListener_p:type">필수 요소. 추가할 이벤트 형식은 &quot;beforehide&quot;, &quot;afterhide&quot;, &quot;beforeshow&quot; 또는 &quot;aftershow&quot;입니다.</msg>
  <msg name="WinJS.UI._Overlay.addEventListener_p:listener">필수 요소. 이 이벤트와 연결할 이벤트 처리기 함수입니다.</msg>
  <msg name="WinJS.UI._Overlay.addEventListener_p:useCapture">선택 사항입니다. True로 단계를 캡처하는 이벤트를 등록합니다. False이면 이벤트가 버블링 단계입니다.</msg>
  <msg name="WinJS.UI._Overlay.removeEventListener">이 오버레이에 대한 DOM 요소에 이벤트 수신기를 제거합니다.</msg>
  <msg name="WinJS.UI._Overlay.removeEventListener_p:type">필수 요소. 제거할 이벤트 형식은 &quot;beforehide&quot;, &quot;afterhide&quot;, &quot;beforeshow&quot; 또는 &quot;aftershow&quot;입니다.</msg>
  <msg name="WinJS.UI.AppBarCommand">AppBarCommands는 AppBars에 대한 단추, 토글 단추, 플라이 아웃 단추 또는 구분선 기능을 제공합니다.</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommand">AppBarCommand 컨트롤 자체입니다.</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandIcon">AppBarCommand의 아이콘 상자입니다.</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandImage">AppBarCommand의 아이콘 이미지 서식 지정입니다.</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandRing">AppBarCommand의 아이콘 링입니다.</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandLabel">AppBarCommand의 레이블입니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor">AppBarCommand 컨트롤을 생성합니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor_p:element">AppBarCommand 컨트롤에 연결할 DOM 요소입니다. AppBarCommand 값이 null이면 만듭니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor_p:options">AppBarCommand 컨트롤에 처음 적용할 옵션의 집합입니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor_returnValue">AppBarCommand 컨트롤입니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.id">AppBarCommand의 ID입니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.type">AppBarCommand의 종류에서 가능한 값은 &quot;button&quot;, &quot;toggle&quot;, &quot;flyout&quot; 또는 &quot;separator&quot;입니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.label">AppBarCommand의 레이블입니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.icon">AppBarCommand의 아이콘입니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.onclick">AppBarCommand를 호출할 때 호출할 클릭 이벤트입니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.flyout">AppBarCommands의 플라이 아웃 형식에서 이 명령이 호출하는 WinJS.UI.Flyout을 반환합니다. 호출할 플라이 아웃의 문자열 ID, 플라이 아웃의 DOM 개체 또는 플라이 아웃 개체 자체를 사용하여 설정할 수도 있습니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.section">&quot;global&quot; 또는 &quot;selection&quot;에서 단추를 배치할 섹션을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.tooltip">AppBarCommand의 도구 설명 텍스트입니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.selected">토글 단추의 선택된 상태를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.element">AppBarCommand에 첨부되는 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.disabled">명령을 사용하지 않습니다. HTML 비활성화 특성을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.hidden">명령이 현재 숨겨져 있는지 확인합니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.addEventListener">이 명령에 대한 DOM 요소에 이벤트 수신기를 추가합니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.addEventListener_p:type">필수 요소. 추가할 이벤트 형식입니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.removeEventListener">이 명령에 대한 DOM 요소에 이벤트 수신기를 제거합니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.removeEventListener_p:type">필수 요소. 제거할 이벤트 형식입니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.extraClass">생성 중에 추가 CSS 클래스를 추가합니다.</msg>
  <msg name="WinJS.UI.AppBar">AppBar 제어 서피스 AppBarCommands 또는 사용자가 표시하거나 숨길 수 있는 기타 정보를 제공합니다.</msg>
  <msg name="WinJS.UI.AppBar_e:beforeshow">AppBar를 표시하기 바로 전에 발생합니다.</msg>
  <msg name="WinJS.UI.AppBar_e:aftershow">AppBar가 완전히 표시되는 즉시 발생합니다.</msg>
  <msg name="WinJS.UI.AppBar_e:beforehide">AppBar를 숨기기 바로 전에 발생합니다.</msg>
  <msg name="WinJS.UI.AppBar_e:afterhide">AppBar가 완전히 숨겨지는 즉시 발생합니다.</msg>
  <msg name="WinJS.UI.AppBar_part:appbar">AppBar 컨트롤 자체입니다.</msg>
  <msg name="WinJS.UI.AppBar_part:appBarCustom">사용자 지정 레이아웃 appbar 스타일입니다.</msg>
  <msg name="WinJS.UI.AppBar.constructor">AppBar 컨트롤을 생성합니다.</msg>
  <msg name="WinJS.UI.AppBar.constructor_p:element">AppBar 컨트롤에 연결할 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.AppBar.constructor_p:options">AppBar 컨트롤에 처음 적용할 옵션의 집합입니다.</msg>
  <msg name="WinJS.UI.AppBar.constructor_returnValue">생성된 AppBar 컨트롤입니다.</msg>
  <msg name="WinJS.UI.AppBar.placement">AppBar를 디스플레이에 배치합니다. 값은 &quot;top&quot; 또는 &quot;bottom&quot;입니다.</msg>
  <msg name="WinJS.UI.AppBar.layout">AppBar 내용의 레이아웃은 &quot;commands&quot; 또는 &quot;custom&quot;입니다.</msg>
  <msg name="WinJS.UI.AppBar.sticky">AppBar가 스티커인지 여부입니다.</msg>
  <msg name="WinJS.UI.AppBar.commands">AppBar 명령에 대해 AppBarCommand 옵션의 배열을 포함합니다.</msg>
  <msg name="WinJS.UI.AppBar.getCommandById">AppBar의 지정된 ID를 사용하여 명령을 검색합니다. 둘 이상의 명령이 있으면 모두 반환됩니다.</msg>
  <msg name="WinJS.UI.AppBar.getCommandById_p:id">ID를 반환하는 명령입니다.</msg>
  <msg name="WinJS.UI.AppBar.getCommandById_returnValue">명령을 발견하면 명령 배열에 두 개 이상의 동일한 ID가 있거나 명령에 해당 ID가 없는 경우 null입니다.</msg>
  <msg name="WinJS.UI.AppBar.showCommands">이 AppBar 이내의 명령을 표시합니다.</msg>
  <msg name="WinJS.UI.AppBar.showCommands_p:commands">필수 요소. 문자열, DOM 요소 또는 WinJS 개체는 명령을 표시합니다.</msg>
  <msg name="WinJS.UI.AppBar.hideCommands">이 AppBar 이내의 명령을 숨깁니다.</msg>
  <msg name="WinJS.UI.AppBar.hideCommands_p:commands">필수 요소. 문자열, DOM 요소 또는 WinJS 개체는 명령을 숨깁니다.</msg>
  <msg name="WinJS.UI.AppBar.showOnlyCommands">지정된 명령을 표시하고 AppBar에 있는 다른 모든 것을 숨깁니다.</msg>
  <msg name="WinJS.UI.AppBar.show">다른 상태에 관계 없이 숨겨진 경우 AppBar를 보여줍니다.</msg>
  <msg name="WinJS.UI.AppBar.hide">다른 상태에 관계 없이 표시되는 경우 AppBar를 숨깁니다.</msg>
  <msg name="WinJS.UI.Flyout">플라이 아웃 컨트롤은 작은 양의 콘텐츠에 대한 임시 서피스를 제공합니다.</msg>
  <msg name="WinJS.UI.Flyout_name">플라이 아웃</msg>
  <msg name="WinJS.UI.Flyout_e:beforeshow">플라이 아웃을 표시하기 바로 전에 발생합니다.</msg>
  <msg name="WinJS.UI.Flyout_e:aftershow">플라이 아웃이 완전히 표시되는 즉시 발생합니다.</msg>
  <msg name="WinJS.UI.Flyout_e:beforehide">플라이 아웃을 숨기기 바로 전에 발생합니다.</msg>
  <msg name="WinJS.UI.Flyout_e:afterhide">플라이 아웃이 완전히 숨겨지는 즉시 발생합니다.</msg>
  <msg name="WinJS.UI.Flyout_part:flyout">플라이 아웃 컨트롤 자체입니다.</msg>
  <msg name="WinJS.UI.Flyout.constructor">플라이 아웃 컨트롤을 생성하고 내부 DOM 요소에 연결합니다.</msg>
  <msg name="WinJS.UI.Flyout.constructor_p:element">플라이 아웃 컨트롤에 연결할 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.Flyout.constructor_p:options">플라이 아웃 컨트롤에 처음 적용할 옵션의 집합입니다.</msg>
  <msg name="WinJS.UI.Flyout.constructor_returnValue">완전히 생성된 플라이 아웃 컨트롤입니다.</msg>
  <msg name="WinJS.UI.Flyout.anchor">앵커 요소의 플라이 아웃으로부터 상대적으로 배치하는 HTML 요소입니다. Show() 메서드를 전달하는 앵커를 재정의할 수 있습니다.</msg>
  <msg name="WinJS.UI.Flyout.placement">Show()에 전달하는 배치에 의해 재정의하는 이 플라이 아웃에 사용할 기본 배치입니다.</msg>
  <msg name="WinJS.UI.Flyout.alignment">Show()에 전달하는 맞춤에 의해 재정의하는 이 플라이 아웃에 사용할 기본 맞입니다.</msg>
  <msg name="WinJS.UI.Flyout.show">다른 상태에 관계 없이 숨겨진 경우 플라이 아웃을 보여줍니다.</msg>
  <msg name="WinJS.UI.Flyout.show_p:anchor">DOM 요소나 DOM 요소의 플라이 아웃, 이 시간에 대한 앵커 속성을 재정의합니다.</msg>
  <msg name="WinJS.UI.Flyout.show_p:placement">플라이 아웃을 앵커에 다음과 같이 배치합니다: 'auto'(기본값), 'top', 'bottom', 'left', 또는 'right'입니다. 배치 속성만이 쇼에서 이 매개 변수를 재정의합니다.</msg>
  <msg name="WinJS.UI.Flyout.show:alignment">'top' 또는 'bottom' 배치에 대해 플라이 아웃을 앵커 위쪽에 배치는 'center'(기본값), 'left' 또는 'right'입니다. 맞춤 속성만이 쇼에서 이 매개 변수를 재정의합니다.</msg>
  <msg name="WinJS.UI.Flyout.hide">다른 상태에 관계 없이 표시되는 경우 플라이 아웃을 숨깁니다.</msg>
  <msg name="WinJS.UI.Menu">메뉴 컨트롤은 MenuCommands를 사용자에게 제공합니다.</msg>
  <msg name="WinJS.UI.Menu_name">메뉴</msg>
  <msg name="WinJS.UI.Menu_e:beforeshow">메뉴를 표시하기 바로 전에 발생합니다.</msg>
  <msg name="WinJS.UI.Menu_e:aftershow">메뉴가 완전히 표시되는 즉시 발생합니다.</msg>
  <msg name="WinJS.UI.Menu_e:beforehide">메뉴를 숨기기 바로 전에 발생합니다.</msg>
  <msg name="WinJS.UI.Menu_e:afterhide">메뉴를 완전히 숨겨지는 즉시 발생합니다.</msg>
  <msg name="WinJS.UI.Menu_part:menu">메뉴 컨트롤 자체입니다.</msg>
  <msg name="WinJS.UI.Menu.constructor">메뉴 컨트롤을 생성하고 내부 DOM 요소에 연결합니다.</msg>
  <msg name="WinJS.UI.Menu.constructor_p:element">메뉴 컨트롤에 연결할 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.Menu.constructor_p:options">메뉴 컨트롤에 처음 적용할 옵션의 집합입니다.</msg>
  <msg name="WinJS.UI.Menu.constructor_returnValue">완전히 생성된 메뉴 컨트롤입니다.</msg>
  <msg name="WinJS.UI.Menu.commands">메뉴 명령에 대해 MenuCommand 옵션의 배열을 포함합니다.</msg>
  <msg name="WinJS.UI.Menu.getCommandById">메뉴의 지정된 ID를 사용하여 명령을 검색합니다. 둘 이상의 명령이 있으면 모두 반환됩니다.</msg>
  <msg name="WinJS.UI.Menu.showCommands">이 메뉴 이내의 명령을 표시합니다.</msg>
  <msg name="WinJS.UI.Menu.hideCommands">이 메뉴 이내의 명령을 숨깁니다.</msg>
  <msg name="WinJS.UI.Menu.showOnlyCommands">지정된 명령을 표시하고 메뉴에 있는 다른 모든 것을 숨깁니다.</msg>
  <msg name="WinJS.UI.Menu.show">다른 상태에 관계 없이 숨겨진 경우 메뉴를 보여줍니다.</msg>
  <msg name="WinJS.UI.Menu.show_p:anchor">DOM 요소나 DOM 요소의 메뉴, 이 시간에 대한 앵커 속성을 재정의합니다.</msg>
  <msg name="WinJS.UI.Menu.show_p:placement">메뉴를 앵커에 다음과 같이 배치합니다: 'auto'(기본값), 'top', 'bottom', 'left', 또는 'right'입니다. 배치 속성만이 쇼에서 이 매개 변수를 재정의합니다.</msg>
  <msg name="WinJS.UI.Menu.show_p:alignment">'top' 또는 'bottom' 배치에 대해 메뉴를 앵커 위쪽에 배치는 'center'(기본값), 'left' 또는 'right'입니다. 맞춤 속성만이 쇼에서 이 매개 변수를 재정의합니다.</msg>
  <msg name="WinJS.UI.MenuCommand">MenuCommands는 메뉴에 대한 단추, 토글 단추, 플라이 아웃 단추 또는 구분선 기능을 제공합니다.</msg>
  <msg name="WinJS.UI.MenuCommand_name">MenuCommand 컨트롤 자체입니다.</msg>
  <msg name="WinJS.UI.MenuCommand.constructor">MenuCommand 컨트롤을 생성합니다.</msg>
  <msg name="WinJS.UI.MenuCommand.constructor_p:element">MenuCommand 컨트롤에 연결할 DOM 요소입니다. MenuCommand 값이 null이면 만듭니다.</msg>
  <msg name="WinJS.UI.MenuCommand.constructor_p:options">MenuCommand 컨트롤에 처음 적용할 옵션의 집합입니다.</msg>
  <msg name="WinJS.UI.MenuCommand.constructor_returnValue">MenuCommand 컨트롤입니다.</msg>
  <msg name="WinJS.UI.MenuCommand.id">MenuCommand의 ID입니다.</msg>
  <msg name="WinJS.UI.MenuCommand.type">MenuCommand의 종류에서 가능한 값은 &quot;button&quot;, &quot;toggle&quot;, &quot;flyout&quot; 또는 &quot;separator&quot;입니다.</msg>
  <msg name="WinJS.UI.MenuCommand.label">MenuCommand의 레이블입니다.</msg>
  <msg name="WinJS.UI.MenuCommand.onclick">MenuCommand를 호출할 때 호출할 클릭 이벤트입니다.</msg>
  <msg name="WinJS.UI.MenuCommand.flyout">MenuCommands의 플라이 아웃 형식에서 이 명령이 호출하는 WinJS.UI.Flyout을 반환합니다. 호출할 플라이 아웃의 문자열 ID, 플라이 아웃의 DOM 개체 또는 플라이 아웃 개체 자체를 사용하여 설정할 수도 있습니다.</msg>
  <msg name="WinJS.UI.MenuCommand.element">MenuCommand에 첨부되는 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout">SettingsFlyout은 설정 창에 있는 정보에 액세스를 제공합니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout_name">설정 플라이 아웃</msg>
  <msg name="WinJS.UI.SettingsFlyout_e:beforeshow">SettingsFlyout을 표시하기 바로 전에 발생합니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout_e:aftershow">SettingsFlyout이 완전히 표시되는 즉시 발생합니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout_e:beforehide">SettingsFlyout을 숨기기 바로 전에 발생합니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout_e:afterhide">SettingsFlyout이 완전히 숨겨지는 즉시 발생합니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout_part:settings">SettingsFlyout 컨트롤 자체입니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout.constructor">SettingsFlyout 컨트롤을 생성합니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout.constructor_p:element">SettingsFlyout 컨트롤에 연결할 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout.constructor_p:options">SettingsFlyout 컨트롤에 처음 적용할 옵션의 집합입니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout.constructor_returnValue">생성된 SettingsFlyout 컨트롤입니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout.width">SettingsFlyout의 너비, &quot;narrow&quot; 또는 &quot;wide&quot;입니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout.settingsCommandId">SettingsFlyout 컨트롤에 대한 설정 명령 ID를 정의합니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout.show">숨겨진 경우 SettingsFlyout을 보여줍니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout.hide">다른 상태에 관계 없이 표시되는 경우 SettingsFlyout을 숨깁니다.</msg>
  <msg name="WinJS.UI.Tooltip">이미지 및 서식을 포함하는 도구 설명을 표시합니다.</msg>
  <msg name="WinJS.UI.Tooltip_e:beforeopen">도구 설명에 표시될 때 발생합니다.</msg>
  <msg name="WinJS.UI.Tooltip_e:opened">도구 설명에 표시되는 경우 발생합니다.</msg>
  <msg name="WinJS.UI.Tooltip_e:beforeclose">도구 설명에 숨겨질 때 발생합니다.</msg>
  <msg name="WinJS.UI.Tooltip_e:close">도구 설명에 숨겨지는 경우 발생합니다.</msg>
  <msg name="WinJS.UI.Tooltip_e:tooltip">전체 도구 설명 컨트롤입니다.</msg>
  <msg name="WinJS.UI.Tooltip.constructor">새 도구 설명을 만듭니다.</msg>
  <msg name="WinJS.UI.Tooltip.constructor_p:element">도구 설명을 호스팅하는 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.Tooltip.constructor_p:options">새 컨트롤에 적용하려면 개체에 하나 이상의 속성/값 쌍이 들어있어야 합니다. 각 옵션 개체의 속성은 컨트롤의 속성 또는 이벤트 중 하나에 해당합니다. 이벤트 이름은 &quot;on&quot;으로 시작해야 합니다. 예를 들어 열린 이벤트에 대한 이벤트 처리기를 제공하고 &quot;onopened&quot; 라는 속성을 옵션 개체에 추가하고 이벤트 처리기에 해당 값을 설정합니다. 이 매개 변수는 선택적 요소입니다.</msg>
  <msg name="WinJS.UI.Tooltip.constructor_returnValue">새 도구 설명입니다.</msg>
  <msg name="WinJS.UI.Tooltip.innerHTML">도구 설명의 HTML 내용을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.Tooltip.element">도구 설명을 호스팅하는 DOM 요소를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.Tooltip.contentElement">도구 설명에 대한 내용인 DOM 요소를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.Tooltip.placement">해당 대상 요소를 기준으로 도구 설명의 위치를 가져오거나 설정합니다: 위쪽, 아래쪽, 왼쪽 또는 오른쪽.</msg>
  <msg name="WinJS.UI.Tooltip.infotip">도구 설명이 많은 정보를 포함하며 일반적인 도구 설명 이상으로 표시되어야 하는 정보 도구인지 여부를 지정하는 값을 가져오거나 설정합니다. 기본값은 false입니다.</msg>
  <msg name="WinJS.UI.Tooltip.extraClass">도구 설명 컨트롤의 호스트 요소에 적용할 CSS 클래스를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.Tooltip.open">도구 설명을 표시합니다.</msg>
  <msg name="WinJS.UI.Tooltip.open_p:type">표시할 도구 설명 형식입니다: &quot;touch&quot;, &quot;mouseover&quot;, &quot;mousedown&quot; 또는 &quot;keyboard&quot;. 기본값은 &quot;mousedown&quot;입니다.</msg>
  <msg name="WinJS.UI.Tooltip.close">도구 설명을 숨깁니다.</msg>
  <msg name="WinJS.UI.ViewBox">단일 자식 요소 크기를 조정하지 않고 사용 가능한 공간을 채우도록 확장합니다. 이 컨트롤을 반응 자식 요소의 크기 변경 뿐만 아니라 컨테이너의 크기도 변경합니다. 예를 들어, 미디어 쿼리의 가로 세로 비율이 변경될 수 있습니다.</msg>
  <msg name="WinJS.UI.ViewBox_name">보기 상자</msg>
  <msg name="WinJS.UI.ViewBox.constructor">ViewBox 컨트롤의 새 인스턴스를 초기화합니다.</msg>
  <msg name="WinJS.UI.ViewBox.constructor_p:element">배율 상자의 기능을 하는 DOM 요소입니다. 이 요소는 100%의 너비와 높이가 할당을 채웁니다.</msg>
  <msg name="WinJS.UI.ViewBox.constructor_p:options">ViewBox 컨트롤에 처음 적용할 옵션의 집합입니다.</msg>
  <msg name="WinJS.UI.ViewBox.constructor_returnValue">생성된 ViewBox 컨트롤입니다.</msg>
  <msg name="WinJS.UI.ViewBox.element">배율 상자의 기능을 하는 DOM 요소를 가져옵니다.</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation">확장 애니메이션을 만듭니다. ExpandAnimation 개체를 만든 후 문서를 수정하여 요소를 새 위치로 이동하고 ExpandAnimation 개체에 실행 메서드를 호출합니다.</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation_p:revealed">단일 요소 또는 표시된 요소 컬렉션입니다.</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation_p:affected">단일 요소 또는 위치는 확장에 의해 영향을 받는 요소의 컬렉션입니다.</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation_returnValue">ExpandAnimation 개체의 메서드가 반환 애니메이션이 완료되면 완료하는 약속을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation">축소 애니메이션을 만듭니다. CollapseAnimation 개체를 만든 후 문서를 수정하여 요소를 새 위치로 이동하고 CollapseAnimation 개체에 실행 메서드를 호출합니다.</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation_p:hidden">단일 요소 또는 보기에서 제거되는 요소의 컬렉션입니다. 애니메이션이 완료되면 응용 프로그램 요소 숨기기 문서에서 제거해야 합니다.</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation_p:affected">단일 요소 또는 위치는 축소에 의해 영향을 받는 요소의 컬렉션입니다.</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation_returnValue">CollapseAnimation 개체의 메서드가 반환 애니메이션이 완료되면 완료하는 약속을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.createRepositionAnimation">재배치 애니메이션을 만듭니다. RepositionAnimation 개체를 만든 후 문서를 수정하여 요소를 새 위치로 이동하고 RepositionAnimation 개체에 실행 메서드를 호출합니다.</msg>
  <msg name="WinJS.UI.Animation.createRepositionAnimation_p:element">단일 요소 또는 재배치된 요소 컬렉션입니다.</msg>
  <msg name="WinJS.UI.Animation.createRepositionAnimation_returnValue">RepositionAnimation 개체의 메서드가 반환 애니메이션이 완료되면 완료하는 약속을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.fadeIn">페이드 인 애니메이션을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.fadeIn_p:element">단일 요소 또는 컬렉션의 요소를 페이드 인합니다. 애니메이션의 끝에 불투명도 요소 1입니다.</msg>
  <msg name="WinJS.UI.Animation.fadeIn_returnValue">애니메이션이 완료되면 완료된 약속 개체입니다.</msg>
  <msg name="WinJS.UI.Animation.fadeOut">페이드 아웃 애니메이션을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.fadeOut_p:element">단일 요소 또는 페이드 아웃할 요소의 컬렉션입니다. 애니메이션이 끝날 때 요소의 불투명도는 0입니다.</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation">목록에 추가하는 것에 대한 애니메이션을 만듭니다. AddToListAnimation 개체를 만든 후 문서를 수정하여 요소를 새 위치로 이동하고 AddToListAnimation 개체에 실행 메서드를 호출합니다.</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation_p:added">단일 요소 또는 추가된 요소 컬렉션입니다.</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation_p:affected">단일 요소 또는 위치는 추가에 의해 영향을 받는 요소의 컬렉션입니다.</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation_returnValue">AddToListAnimation 개체의 메서드가 반환 애니메이션이 완료되면 완료하는 약속을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation">목록에서 삭제하는 애니메이션을 만듭니다. DeleteFromListAnimation 개체를 만든 후 문서를 수정하여 삭제를 반영하고 DeleteFromListAnimation 개체에 실행 메서드를 호출합니다.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation_p:deleted">단일 요소 또는 삭제된 요소 컬렉션입니다. 애니메이션이 완료되면 응용 프로그램 요소 숨기기 문서에서 제거해야 합니다.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation_p:remaining">단일 요소 또는 위치는 삭제에 의해 영향을 받는 요소의 컬렉션입니다.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation_returnValue">DeleteFromListAnimation 개체의 메서드가 반환 애니메이션이 완료되면 완료하는 약속을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.createAddToSearchListAnimation">검색 결과 목록에 추가하는 것에 대한 애니메이션을 만듭니다. 이는 AddToListAnimation과 비슷하지만 더 빠릅니다. AddToSearchListAnimation 개체를 만든 후 문서를 수정하여 요소를 새 위치로 이동하고 AddToSearchListAnimation 개체에 실행 메서드를 호출합니다.</msg>
  <msg name="WinJS.UI.Animation.createAddToSearchListAnimation_returnValue">AddToSearchListAnimation 개체의 메서드가 반환 애니메이션이 완료되면 완료하는 약속을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromSearchListAnimation">검색 결과 목록에 삭제하는 것에 대한 애니메이션을 만듭니다. 이는 DeleteFromListAnimation과 비슷하지만 더 빠릅니다. DeleteFromSearchAnimation 개체를 만든 후 문서를 수정하여 요소를 새 위치로 이동하고 DeleteFromSearchAnimation 개체에 실행 메서드를 호출합니다.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromSearchListAnimation_returnValue">DeleteFromSearchListAnimation 개체의 메서드가 반환 애니메이션이 완료되면 완료하는 약속을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI">요소 또는 요소 위치를 화면 가장자리에 슬라이드합니다. 이 애니메이션에서 작은 개체는 appbar같이 설계되었습니다.</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI_p:element">단일 요소 또는 슬라이드된 요소 컬렉션입니다. 요소는 함수를 호출할 때 최종 위치에 있어야 합니다.</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI_p:offset">선택적 오프셋 개체나 컬렉션 애니메이션의 시작점을 설명하는 오프셋된 개체 배열입니다. 오프셋 개체 수가 요소 매개 변수의 길이보다 작으면 마지막 값은 나머지 모든 요소에 대해 반복됩니다. 이 매개 변수가 누락된 경우 기본값이 사용됩니다.</msg>
  <msg name="WinJS.UI.Animation.showPanel">요소 또는 요소 위치를 화면 가장자리에 슬라이드합니다. 이 애니메이션에서 큰 개체는 키보드와 같이 설계되었습니다.</msg>
  <msg name="WinJS.UI.Animation.showPanel_returnValue">약속 개체</msg>
  <msg name="WinJS.UI.Animation.hideEdgeUI">요소 또는 요소 위치를 화면 가장자리 밖에 슬라이드합니다. 이 애니메이션에서 작은 개체는 appbar같이 설계되었습니다.</msg>
  <msg name="WinJS.UI.Animation.hideEdgeUI_p:element">단일 요소 또는 슬라이드할 요소의 컬렉션입니다. 요소는 함수를 호출할 때 화면 위치에 있어야 합니다.</msg>
  <msg name="WinJS.UI.Animation.hideEdgeUI_p:offset">선택적 오프셋 개체나 컬렉션 애니메이션의 끝점을 설명하는 오프셋된 개체 배열입니다. 오프셋 개체 수가 요소 매개 변수의 길이보다 작으면 마지막 값은 나머지 모든 요소에 대해 반복됩니다. 이 매개 변수가 누락된 경우 기본값이 사용됩니다.</msg>
  <msg name="WinJS.UI.Animation.hidePanel">요소 또는 요소 위치를 화면 가장자리 밖에 슬라이드합니다. 이 애니메이션에서 큰 개체는 키보드와 같이 설계되었습니다.</msg>
  <msg name="WinJS.UI.Animation.showPopup">요소 또는 요소 스타일의 팝업에 표시됩니다.</msg>
  <msg name="WinJS.UI.Animation.showPopup_p:element">단일 요소 또는 팝업처럼 표시되는 요소 컬렉션입니다.</msg>
  <msg name="WinJS.UI.Animation.hidePopup">팝업 화면에서 제거합니다.</msg>
  <msg name="WinJS.UI.Animation.hidePopup_p:element">단일 요소 또는 팝업처럼 숨겨지는 요소 컬렉션입니다. 애니메이션이 완료되면 응용 프로그램 요소 숨기기 문서에서 제거해야 합니다.</msg>
  <msg name="WinJS.UI.Animation.pointerDown">포인터 다운 애니메이션을 실행합니다. pointerUp 애니메이션을 사용하여 애니메이션 효과를 취소합니다.</msg>
  <msg name="WinJS.UI.Animation.pointerDown_p:element">단일 요소 또는 포인터 다운 이벤트에 응답하는 요소의 컬렉션입니다. 애니메이션의 끝에서 포인터 다운 상태를 반영하는 요소의 속성이 수정되었습니다.</msg>
  <msg name="WinJS.UI.Animation.pointerUp">포인터 업 애니메이션을 실행합니다. 이 pointerDown 애니메이션 효과가 취소됩니다.</msg>
  <msg name="WinJS.UI.Animation.pointerUp_p:element">단일 요소 또는 포인터 업 이벤트에 응답하는 요소의 컬렉션입니다. 애니메이션의 끝에는 요소의 속성이 정상으로 반환되었습니다.</msg>
  <msg name="WinJS.UI.Animation.dragSourceStart">드래그 시작 애니메이션을 실행합니다. dragSourceEnd 애니메이션을 사용하여 애니메이션 효과를 취소합니다.</msg>
  <msg name="WinJS.UI.Animation.dragSourceStart_p:dragSource">단일 요소 또는 드래그할 요소의 컬렉션입니다. 애니메이션의 끝에서 드래그 상태를 반영하는 요소의 속성이 수정되었습니다.</msg>
  <msg name="WinJS.UI.Animation.dragSourceStart_p:affected">단일 요소 또는 강조하여 드래그하지 않을 요소 컬렉션입니다. 애니메이션의 끝에서 드래그 상태를 반영하는 요소의 속성이 수정되었습니다.</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd">드래그 엔드 애니메이션을 실행합니다. 이는 dragSourceStart 애니메이션 효과를 취소합니다.</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd_p:dragSource">단일 요소 또는 다시는 드래그하지 않는 요소의 컬렉션입니다. 애니메이션의 끝에는 요소의 속성이 정상으로 반환되었습니다.</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd_p:offset">선택적 오프셋 개체나 컬렉션 애니메이션의 시작점을 설명하는 오프셋된 개체 배열입니다. 오프셋 개체 수가 dragSource 매개 변수의 길이보다 작으면 마지막 값은 나머지 모든 요소에 대해 반복됩니다. 이 매개 변수가 누락된 경우 기본값이 사용됩니다.</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd_p:affected">단일 요소 또는 강조하여 드래그하지 않을 요소 컬렉션입니다. 애니메이션의 끝에는 요소의 속성이 정상으로 반환되었습니다.</msg>
  <msg name="WinJS.UI.Animation.enterContent">입력 내용 애니메이션을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.enterContent_p:incoming">단일 요소 또는 들어오는 콘텐츠를 표현하는 요소의 컬렉션입니다. 애니메이션이 끝날 때 요소의 불투명도는 1입니다.</msg>
  <msg name="WinJS.UI.Animation.enterContent_p:offset">선택적 오프셋 개체나 컬렉션 애니메이션의 시작점을 설명하는 오프셋된 개체 배열입니다. 오프셋 개체 수가 들어오는 매개 변수의 길이보다 작으면 마지막 값은 나머지 모든 요소에 대해 반복됩니다. 이 매개 변수가 누락된 경우 기본값이 사용됩니다.</msg>
  <msg name="WinJS.UI.Animation.exitContent">끝내기 내용 애니메이션을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.exitContent_p:outgoing">단일 요소 또는 나가는 콘텐츠를 표현하는 요소의 컬렉션입니다. 애니메이션이 끝날 때 요소의 불투명도는 0입니다.</msg>
  <msg name="WinJS.UI.Animation.exitContent_p:offset">선택적 오프셋 개체나 컬렉션 애니메이션의 끝점을 설명하는 오프셋된 개체 배열입니다. 오프셋 개체 수가 나가는 매개 변수의 길이보다 작으면 마지막 값은 나머지 모든 요소에 대해 반복됩니다. 이 매개 변수가 누락된 경우 기본값이 사용됩니다.</msg>
  <msg name="WinJS.UI.Animation.dragBetweenEnter">드래그한 개체를 다른 요소 간에 끌어 놓을 수 있음을 나타내는 애니메이션을 실행합니다. dragBetweenLeave 애니메이션을 사용하여 애니메이션 효과를 취소합니다.</msg>
  <msg name="WinJS.UI.Animation.dragBetweenEnter_p:target">드래그한 개체를 단일 요소 또는 요소의 컬렉션(일반적으로 2개) 간에 삭제할 수 있습니다. 애니메이션의 끝에서 드래그 간의 상태를 반영하는 요소의 속성이 수정되었습니다.</msg>
  <msg name="WinJS.UI.Animation.dragBetweenLeave">드래그한 개체를 다른 요소 간에 더이상 끌어 놓을 수 없음을 나타내는 애니메이션을 실행합니다. 이는 dragBetweenEnter 애니메이션 효과를 취소합니다.</msg>
  <msg name="WinJS.UI.Animation.dragBetweenLeave_p:target">드래그한 개체를 단일 요소 또는 요소의 컬렉션(일반적으로 2개) 간에 더이상 삭제할 수 없습니다. 애니메이션의 끝에서 요소의 속성이 dragSourceStart 상태로 설정되었습니다.</msg>
  <msg name="WinJS.UI.Animation.swipeSelect">마우스 포인터를 놓으면 스와이프 선택한 개체를 다시 위치로 밀고 선택 표시가 표시됩니다.</msg>
  <msg name="WinJS.UI.Animation.swipeSelect_p:selected">단일 요소 또는 선택할 요소의 컬렉션입니다. 애니메이션의 끝에는 요소의 속성이 정상으로 반환되었습니다.</msg>
  <msg name="WinJS.UI.Animation.swipeSelect_p:selection">단일 요소 또는 선택 표시인 컬렉션의 요소입니다.</msg>
  <msg name="WinJS.UI.Animation.swipeDeselect">마우스 포인터를 놓으면 스와이프 선택 취소한 개체를 다시 위치로 밀고 선택 표시를 숨깁니다.</msg>
  <msg name="WinJS.UI.Animation.swipeDeselect_p:deselected">단일 요소 또는 선택 취소할 요소의 컬렉션입니다. 애니메이션의 끝에는 요소의 속성이 정상으로 반환되었습니다.</msg>
  <msg name="WinJS.UI.Animation.swipeReveal">한 번의 통과로 인해 개체를 나타내거나 위치로 다시 스와이프 선택한 개체를 표시한 후 슬라이드합니다.</msg>
  <msg name="WinJS.UI.Animation.swipeReveal_p:target">단일 요소 또는 선택할 요소의 컬렉션입니다. 애니메이션의 끝에서 지정된 오프셋을 반영하는 요소의 속성이 수정되었습니다.</msg>
  <msg name="WinJS.UI.Animation.swipeReveal_p:offset">선택적 오프셋 개체나 컬렉션 애니메이션의 끝점을 설명하는 오프셋된 개체 배열입니다. 위치에 개체를 다시 이동하면 오프셋은 {top: &quot;0px&quot; left: &quot;0px&quot; }이어야 합니다. 오프셋 개체 수가 요소 매개 변수의 길이보다 작으면 마지막 값은 나머지 모든 요소에 대해 반복됩니다. 이 매개 변수가 누락된 경우 기본값이 사용됩니다. 기본값은 표시하는 동작을 설명합니다.</msg>
  <msg name="WinJS.UI.Animation.enterPage">enterPage 애니메이션을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.enterPage_p:element">단일 요소 또는 들어오는 페이지를 표현하는 요소의 컬렉션입니다. 애니메이션이 끝날 때 요소의 불투명도는 1입니다.</msg>
  <msg name="WinJS.UI.Animation.exitPage">exitPage 애니메이션을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.exitPage_p:outgoing">단일 요소 또는 나가는 페이지를 표현하는 요소의 컬렉션입니다. 애니메이션이 끝날 때 요소의 불투명도는 0입니다.</msg>
  <msg name="WinJS.UI.Animation.crossFade">crossFade 애니메이션을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.crossFade_p:incoming">단일 들어오는 요소 또는 들어오는 요소의 컬렉션입니다. 애니메이션이 끝날 때 요소의 불투명도는 1입니다.</msg>
  <msg name="WinJS.UI.Animation.crossFade_p:outgoing">단일 나가는 요소 또는 나가는 요소의 컬렉션입니다. 애니메이션이 끝날 때 요소의 불투명도는 0입니다.</msg>
  <msg name="WinJS.UI.Animation.createPeekAnimation">피킹 애니메이션을 만듭니다. PeekAnimation 개체를 만든 후 문서를 수정하여 요소를 새 위치로 이동하고 PeekAnimation 개체에 실행 메서드를 호출합니다.</msg>
  <msg name="WinJS.UI.Animation.createPeekAnimation_p:element">단일 요소 또는 피킹에 대해 재배치된 요소 컬렉션입니다.</msg>
  <msg name="WinJS.UI.Animation.createPeekAnimation_returnValue">PeekAnimation 개체의 메서드가 반환 애니메이션이 완료되면 완료하는 약속을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.updateBadge">updateBadge 애니메이션을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.updateBadge_p:incoming">단일 요소 또는 들어오는 배지를 표현하는 요소의 컬렉션입니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource._baseDataSourceConstructor">사용자 지정 데이터 원본의 VirtualizedDataSource 기본 클래스를 초기화합니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource._baseDataSourceConstructor_p:itemIndex">IListDataAdapter를 구현하고 있는 VirtualizedDataSource에 데이터를 제공하는 개체입니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource._baseDataSourceConstructor_p:options">VirtualizedDataSource에 대한 추가 옵션을 지정하는 속성이 포함된 개체: 요청하는 경우 캐시에 요청하지 않은 항목의 최소 수를 지정하는cacheSize A 번호입니다. 옵션 매개 변수는 선택 사항입니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler">IListDataAdapter.setNotificationHandler 메서드에 전달되는 IListDataNotificationHandler의 구현입니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.invalidateAll">VirtualizedDataSource는 데이터를 지정하지 않고 일부 데이터가 변경되었음을 알립니다. 일부 데이터 원본이 모든 변경에 대한 이 메서드를 호출하는 것이 실용적이지 않을 수 있으므로 이 호출은 선택 사항입니다. 하지만 주어진 데이터 어댑터가 호출하지 않는 경우 응용 프로그램은 VirtualizedDataSource에서 invalidateAll을 정기적으로 호출하여 데이터를 새로 고침해야 합니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.invalidateAll_returnValue">데이터가 완전히 새로 고침되고 모든 변경 알림이 전송되었을 때 완료하는 약속입니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.reload">손상으로부터 데이터를 다시 로드하기 수월하기 때문에 목록 데이터 원본에 목록 데이터가 변경되었음을 알립니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.beginNotifications">알림 일괄 처리의 시작을 나타냅니다. 일련의 VirtualizedDataSource 클라이언트로 전송하는 countChanged 및 indexChanged 알림 개수를 최소화하기 위해 다른 알림 호출하기 전에 호출됩니다. endNotifications에 대한 호출과 같이 해야 하고 이는 중첩될 수 없습니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted">항목을 삽입하는 알림이 발생합니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:newItem">삽입된 항목입니다. 키 및 데이터 속성(IItem 인터페이스를 구현해야 함)이 있어야 합니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:previousKey">삽입 포인터 전에 또는 항목 목록의 시작에 삽입된 경우 null 항목의 키입니다. nextKey를 지정한 경우 null일 수 있습니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:nextKey">삽입 포인터 후에 또는 항목 목록의 끝에 삽입된 경우 null 항목의 키입니다. previousKey를 지정한 경우 null일 수 있습니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:index">삽입된 항목의 인덱스입니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.changed">항목이 변경되었다는 알림이 발생합니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.changed_p:item">항목이 변경되었음을 표현하는 IItem입니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved">항목을 이동하는 알림이 발생합니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:item">이동된 항목입니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:previousKey">삽입 포인터 전에 또는 항목 목록의 시작에 이동된 경우 null 항목의 키입니다. nextKey를 지정한 경우 null일 수 있습니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:nextKey">삽입 포인터 후에 또는 항목 목록의 끝에 이동된 경우 null 항목의 키입니다. previousKey를 지정한 경우 null일 수 있습니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:oldIndex">이동하기 전 항목의 인덱스입니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:newIndex">이동한 후 항목의 인덱스입니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.removed">항목을 제거하는 알림이 발생합니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.removed_p:key">제거된 항목의 키입니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.removed_p:index">제거된 항목의 인덱스입니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.endNotifications">beginNotifications에 대한 호출으로 시작된 알림의 시퀀스를 마칩니다.</msg>
  <msg name="WinJS.UI.IListDataSource.createListBinding">클라이언트가 목록에서 읽을 수 있는 IListBinding 개체를 만들고 이미 읽은 리스트 부분에 영향을 미치는 변경에 대한 알림을 받습니다.</msg>
  <msg name="WinJS.UI.IListDataSource.createListBinding_p:notificationHandler">IListNotificationHandler 인터페이스를 구현하는 개체입니다. 이 매개 변수를 생략하는 경우 변경 알림을 사용할 수 없습니다.</msg>
  <msg name="WinJS.UI.IListDataSource.createListBinding_returnValue">IListBinding 인터페이스를 구현하는 개체입니다.</msg>
  <msg name="WinJS.UI.IListBinding">클라이언트가 목록에서 읽을 수 있는 인터페이스를 만들고 이미 읽은 리스트 부분에 영향을 미치는 변경에 대한 알림을 받습니다. IListBinding은 또한 언제든지 변경할 수 있는 목록을 통해 열거할 수 있습니다.</msg>
  <msg name="WinJS.UI.IListBinding.jumpToItem">지정된 항목을 현재 항목으로 설정합니다.</msg>
  <msg name="WinJS.UI.IListBinding.jumpToItem_p:item">현재 항목을 만드는 IItem 또는 IItemPromise입니다.</msg>
  <msg name="WinJS.UI.IListBinding.jumpToItem_returnValue">IItemPromise 인터페이스를 구현하고 지정된 항목에 대한 약속으로 사용되는 개체입니다. 지정된 항목의 목록에 없는 경우 null 값으로 약속을 완료합니다.</msg>
  <msg name="WinJS.UI.IListBinding.current">현재 항목을 검색합니다.</msg>
  <msg name="WinJS.UI.IListBinding.current_returnValue">IItemPromise 인터페이스를 구현하고 현재 항목에 대한 약속으로 사용되는 개체입니다. 커서를 목록 시작 또는 끝으로 이동할 경우 null 값으로 약속을 완료합니다. 현재 항목을 삭제 또는 이동한 경우 약속은 오류를 반환합니다.</msg>
  <msg name="WinJS.UI.IListBinding.previous">현재 항목 앞의 항목을 검색하여 현재 항목을 만듭니다.</msg>
  <msg name="WinJS.UI.IListBinding.previous_returnValue">IItemPromise 인터페이스를 구현하고 이전 항목에 대한 약속으로 사용되는 개체입니다. 커서를 목록 시작 또는 끝으로 이동할 경우 null 값으로 약속을 완료합니다.</msg>
  <msg name="WinJS.UI.IListBinding.next">현재 항목 뒤의 항목을 검색하여 현재 항목을 만듭니다.</msg>
  <msg name="WinJS.UI.IListBinding.next_returnValue">IItemPromise 인터페이스를 구현하고 다음 항목에 대한 약속으로 사용되는 개체입니다. 커서를 목록 끝으로 이동할 경우 null 값으로 약속을 완료합니다.</msg>
  <msg name="WinJS.UI.IListBinding.releaseItem">지정된 항목 변경 알림을 중지하라는 요청을 만듭니다. 해제 호출 횟수가 IItemPromise.retain 호출 횟수와 일치할 때만 항목이 해제됩니다. 해제 호출이 보관 호출 수를 초과할 수 없습니다. 이 메서드는 IListBinding이 만들 때 IListNotificationHandler를 IListDataSource.createListBinding에 전달하는 경우만 발생합니다.</msg>
  <msg name="WinJS.UI.IListBinding.releaseItem_p:item">IItem 또는 IItemPromise를 해제합니다.</msg>
  <msg name="WinJS.UI.IListBinding.release">리소스를 해제하고 알림을 중지하고 IListBinding이 반환하는 모든 추적된 항목에 대한 해결되지 않은 약속을 취소합니다.</msg>
  <msg name="WinJS.UI.IListBinding.first">목록의 첫 번째 항목을 검색하여 현재 항목을 만듭니다.</msg>
  <msg name="WinJS.UI.IListBinding.first_returnValue">요청된 항목에 대한 약속으로 사용되는 IItemPromise입니다. 목록이 비어있는 경우 null 값으로 약속을 완료합니다.</msg>
  <msg name="WinJS.UI.IListBinding.last">목록의 마지막 항목을 검색하여 현재 항목을 만듭니다.</msg>
  <msg name="WinJS.UI.IListBinding.fromKey">지정된 키로 항목을 검색하여 현재 항목을 만듭니다.</msg>
  <msg name="WinJS.UI.IListBinding.fromKey_p:key">요청된 항목의 키입니다. 비어있지 않은 문자열이어야 합니다.</msg>
  <msg name="WinJS.UI.IListBinding.fromKey_p:hints">도메인별 힌트의 IListDataAdapter 항목의 위치에 대한 검색 시간을 향상시킬 수 있습니다.</msg>
  <msg name="WinJS.UI.IListBinding.fromKey_returnValue">요청된 항목에 대한 약속으로 사용되는 IItemPromise입니다. 지정된 키와 함께 항목이 목록에 포함되어 있지 않을 경우 null 값으로 약속을 완료합니다.</msg>
  <msg name="WinJS.UI.IListBinding.fromIndex">지정된 인덱스로 항목을 검색하여 현재 항목을 만듭니다.</msg>
  <msg name="WinJS.UI.IListBinding.fromIndex_p:index">검색할 항목 인덱스인 0보다 크거나 같은 값입니다.</msg>
  <msg name="WinJS.UI.IListBinding.fromIndex_returnValue">요청된 항목에 대한 약속으로 사용되는 IItemPromise입니다. 지정된 인덱스와 함께 항목이 목록에 포함되어 있지 않을 경우 IItemPromise는 null 값으로 약속을 완료합니다.</msg>
  <msg name="WinJS.UI.IListBinding.fromDescription">지정된 설명으로 항목을 검색하여 현재 항목을 만듭니다.</msg>
  <msg name="WinJS.UI.IListDataSource.fromDescription_p:description">목록 데이터 어댑터에서 해석하도록 요청한 항목의 도메인별 설명입니다.</msg>
  <msg name="WinJS.UI.IListDataSource.fromDescription_returnValue">요청된 항목에 대한 약속입니다. 지정된 설명과 함께 항목이 목록에 포함되어 있지 않을 경우 IItemPromise는 null 값으로 약속을 완료합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.invalidateAll">데이터 원본을 데이터 어댑터에서 다시 요청하여 캐시된 해당 항목을 새로 고칠 수 있습니다. 데이터 원본은 데이터가 변경되지 않을 경우 알림을 생성합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.invalidateAll_returnValue">데이터가 완전히 새로 고침되고 모든 변경 알림이 전송되었을 때 완료하는 약속입니다.</msg>
  <msg name="WinJS.UI.IListDataSource.getCount">데이터 원본에 있는 항목 개수를 검색합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromKey">지정된 키를 가진 항목을 검색합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromKey_p:hints">도메인별 힌트의 IListDataAdapter 항목의 위치에 대한 검색 시간을 향상시킬 수 있습니다.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromKey_returnValue">요청된 항목에 대한 약속입니다. 지정된 키와 함께 항목이 목록에 포함되어 있지 않을 경우 null 값으로 약속을 완료합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromIndex">지정된 인덱스에 있는 항목을 검색합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromIndex_p:index">요청된 항목의 인덱스인 0보다 크거나 같은 값입니다.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromIndex_returnValue">요청된 항목에 대한 약속입니다. 지정된 인덱스와 함께 항목이 목록에 포함되어 있지 않을 경우 null 값으로 약속을 완료합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromDescription">지정된 설명을 가진 항목을 검색합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromDescription_p:description">IListDataAdapter에 의해 해석되는 검색할 항목을 설명하는 도메인별 정보입니다.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromDescription_returnValue">요청된 항목에 대한 약속입니다. 지정된 설명과 함께 항목이 목록에 포함되어 있지 않을 경우 약속은 null 값으로 약속을 완료합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.beginEdits">편집 시퀀스가 시작됨을 데이터 원본에 알립니다. 데이터 원본은 IListNotificationHandler.beginNotifications 및 endNotifications를 각 시퀀스 편집당 한 번 호출합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart">데이터 원본 처음에 항목을 추가합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart_p:key">알려진 경우 삽입하는 항목의 키입니다. 그렇지 않으면 null입니다.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart_p:data">추가할 항목에 대한 데이터입니다.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart_returnValue">추가된 IItem 또는 오류가 발생할 경우의 EditError를 포함하는 약속입니다.</msg>
  <msg name="WinJS.UI.IListDataSource.insertBefore">항목을 다른 항목 앞에 삽입합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.insertBefore_p:data">삽입할 항목에 대한 데이터입니다.</msg>
  <msg name="WinJS.UI.IListDataSource.insertBefore_p:nextKey">데이터 원본에 있는 항목의 키입니다. 새 데이터가 이 항목 앞에 삽입됩니다.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAfter">항목을 다른 항목 뒤에 삽입합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAfter_p:previousKey">데이터 원본에 있는 항목에 대한 키입니다. 새 항목이 이 항목 뒤에 추가됩니다.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtEnd">데이터 원본 끝에 항목을 추가합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.change">지정된 항목의 데이터를 덮어쓰기합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.change_p:key">바꿀 항목에 대한 키입니다.</msg>
  <msg name="WinJS.UI.IListDataSource.change_p:newData">항목에 대한 새 데이터입니다.</msg>
  <msg name="WinJS.UI.IListDataSource.change_returnValue">업데이트된 IItem 또는 오류가 발생할 경우의 EditError를 포함하는 약속입니다.</msg>
  <msg name="WinJS.UI.IListDataSource.moveToStart">데이터 원본 처음에 지정된 항목을 이동합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.moveToStart_p:key">이동할 항목의 키입니다.</msg>
  <msg name="WinJS.UI.IListDataSource.moveToStart_returnValue">이동한 IItem 또는 오류가 발생할 경우의 EditError를 포함하는 약속입니다.</msg>
  <msg name="WinJS.UI.IListDataSource.moveBefore">지정된 항목이 다른 항목 앞으로 이동합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.moveBefore_p:nextKey">데이터 원본에 있는 다른 항목의 키입니다. 키 매개 변수에서 지정된 항목이 이 항목 바로 앞 위치로 이동됩니다.</msg>
  <msg name="WinJS.UI.IListDataSource.moveAfter">항목을 다른 항목 뒤에 이동합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.moveAfter_p:previousKey">데이터 원본에 있는 다른 항목의 키입니다. 키 매개 변수에서 지정된 항목이 이 항목 바로 뒤로 이동됩니다.</msg>
  <msg name="WinJS.UI.IListDataSource.moveToEnd">데이터 원본 끝에 항목을 이동합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.remove">데이터 소스에서 항목을 제거합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.remove_p:key">제거할 항목의 키입니다.</msg>
  <msg name="WinJS.UI.IListDataSource.remove_returnValue">동작에 성공했거나 오류가 발생할 경우 EditError를 포함하지 않는 약속입니다.</msg>
  <msg name="WinJS.UI.IListDataSource.endEdits">편집 시퀀스가 끝났음을 데이터 원본에 알립니다. 데이터 원본은 IListNotificationHandler.beginNotifications 및 endNotifications를 각 시퀀스 편집당 한 번 호출합니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource">사용자 지정 데이터 원본을 정의할 때 기본 클래스를 사용합니다. 직접 인스턴스화하지 마십시오.</msg>
  <msg name="WinJS.UI.computeDataSourceGroups">그룹 정보를 다른 데이터 원본에 항목을 추가하는 데이터 원본을 반환합니다. &quot;groups&quot; 속성이 데이터 원본의 속성의 그룹을 열거하는 또 다른 데이터 원본에 평가합니다.</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:listDataSource">개별 항목에서 그룹에 대한 데이터 원본입니다.</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:groupKey">인수로 목록의 항목을 사용하는 콜백 함수입니다. 함수는 목록에 있는 각 항목을 호출하며 항목에 대한 그룹 키를 문자열로 반환합니다.</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:groupData">인수로 IListDataSource의 항목을 사용하는 콜백 함수입니다. 각 그룹에서 하나의 항목 호출 함수와 해당 그룹의 머리글을 나타내는 개체를 반환합니다.</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:options">추가 옵션을 지정 하는 속성을 포함할 수 있는 개체: groupCountEstimate: 수많은 그룹에 대한 초기 예상 값입니다. -1을 지정하는 경우 그룹의 실제 수를 판단할 때까지 발생이 함수를 반환합니다. batchSize: 그룹을 검색할 때 처리하는 동안 반입하는 항목의 수를 지정하는 0보다 큰 수입니다. (지정된 번호 외에 하나의 항목이 이전 일괄 처리에서 항상 포함됩니다.)</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_returnValue">데이터 원본에 있는 항목을 포함하고 &quot;groups&quot; 속성에 추가 그룹 정보를 제공하는 IListDataSource입니다. &quot;groups&quot; 속성 목록에는 서로 다른 그룹을 열거하는 다른 IListDataSource를 반환합니다.</msg>
  <msg name="WinJS.UI.StorageDataSource.loadThumbnail">제공된 항목의 전체 품질 축소판 이미지 요소를 그릴 때 완료하는 이미지 요소에 대한 약속을 반환합니다.</msg>
  <msg name="WinJS.UI.StorageDataSource.loadThumbnail_p:item">썸네일을 검색할 항목입니다.</msg>
  <msg name="WinJS.UI.StorageDataSource.loadThumbnail_p:image">사용할 이미지 요소입니다. 제공되지 않으면 새 이미지 요소가 만들어집니다.</msg>
  <msg name="WinJS.UI.BrowseMode.selectionchanging.setPromise">ListView는 비동기 작업을 수행하고 있고 이 이벤트 처리기는 약속이 완료될 때까지 완료로 간주해서는 안 됩니다.</msg>
  <msg name="WinJS.UI.BrowseMode.selectionchanging.setPromise_p:promise">대기할 약속입니다.</msg>
  <msg name="WinJS.UI.Layout.constructor">새 레이아웃 개체를 만듭니다.</msg>
  <msg name="WinJS.UI.Layout.constructor_p:options">새 레이아웃 개체에 처음 적용할 옵션의 집합입니다.</msg>
  <msg name="WinJS.UI.Layout.constructor_returnValue">새 레이아웃 개체입니다.</msg>
  <msg name="WinJS.UI.ListView.SelectionMode">ListView에 대한 선택 모드를 지정합니다.</msg>
  <msg name="WinJS.UI.ListView.SelectionMode.none">항목을 선택할 수 없습니다.</msg>
  <msg name="WinJS.UI.ListView.SelectionMode.single">단일 항목을 선택할 수 있습니다.</msg>
  <msg name="WinJS.UI.ListView.SelectionMode.multi">여러 항목을 선택할 수 있습니다.</msg>
  <msg name="WinJS.UI.ListView.TapBehavior">항목을 ListView에 눌러 상호 작용에 응답하는 방식을 지정합니다.</msg>
  <msg name="WinJS.UI.ListView.TapBehavior.directSelect">항목을 눌러 호출하고 선택합니다. 키보드로 항목을 탐색하면 선택을 변경하여 포커스된 항목만 선택된 항목이 됩니다.</msg>
  <msg name="WinJS.UI.ListView.TapBehavior.toggleSelect">항목을 눌러 호출합니다. 항목이 선택된 경우 눌러 선택을 취소합니다. 항목이 선택되지 않은 경우 항목을 눌러 선택합니다. 항목과 키보드 탐색을 선택하거나 호출하지 않습니다.</msg>
  <msg name="WinJS.UI.ListView.TapBehavior.invokeOnly">항목을 눌러 호출합니다. 항목과 키보드 탐색을 선택하거나 호출하지 않습니다.</msg>
  <msg name="WinJS.UI.ListView.TapBehavior.none">아무 반응이 없습니다.</msg>
  <msg name="WinJS.UI.ListView.SwipeBehavior">사용자가 스와이프 상호 작용을 수행할 때 항목이 선택되었는지 여부를 지정합니다.</msg>
  <msg name="WinJS.UI.ListView.SwipeBehavior.select">스와이프 상호 작용은 스와이프에서 항목을 선택합니다.</msg>
  <msg name="WinJS.UI.ListView.SwipeBehavior.none">스와이프 상호 작용은 선택된 항목을 변경하지 않습니다.</msg>
  <msg name="WinJS.UI.ListView.ListViewAnimationType">ListView 애니메이션이 애니메이션 진입 애니메이션 또는 전환 애니메이션인지 여부를 지정합니다.</msg>
  <msg name="WinJS.UI.ListView.ListViewAnimationType.entrance">ListView를 처음 표시할 때 애니메이션을 재생합니다.</msg>
  <msg name="WinJS.UI.ListView.ListViewAnimationType.contentTransition">ListView가 내용을 변경할 때 애니메이션을 재생합니다.</msg>
  <msg name="WinJS.UI._Selection.prototype.selectAll">모든 항목을 ListView에서 선택 영역에 추가합니다.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.count">선택 영역에 있는 항목 수를 반환합니다.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.count_returnValue">선택 영역에 있는 항목 수입니다.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getIndices">선택 영역에 있는 항목에 대한 인덱스 목록을 반환합니다.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getIndices_returnValue">수 개체 배열로 선택 영역에 있는 항목에 대한 인덱스 목록입니다.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getItems">선택 영역에 있는 항목을 포함하는 배열을 반환합니다.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getItems_returnValue">요청된 IItem 개체 배열을 포함하는 약속입니다.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getRanges">선택된 항목에 대한 인덱스 범위 배열을 가져옵니다.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getRanges_returnValue">선택 영역에 있는 각 인덱스 범위에 대한 ISelectionRange 개체를 포함하는 배열입니다.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.isEverything">선택 영역이 데이터 원본에 있는 모든 항목을 포함하는지 여부를 알려주는 값을 반환합니다.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.isEverything_returnValue">선택 영역이 데이터 원본에 있는 모든 항목을 포함하는 경우 true입니다. 그렇지 않은 경우 false입니다.</msg>
  <msg name="WinJS.UI.AppBarIcon">AppBarIcon 열거형은 AppBarCommand 아이콘 속성에서 사용할 문자 집합을 제공합니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout.show_static">장점 설정 창을 활성화합니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout.populateSettings">장점 설정 창에 표시할 설정 명령을 채웁니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout.showSettings_p:e">장점 설정 창에 표시할 설정 명령 배열을 보유하는 이벤트 개체입니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout.showSettings">페이지 경로를 사용하여 SettingsFlyout을 표시하는 것은 설정 요소와 설정 요소 ID를 포함합니다.</msg>
</messagebundle>