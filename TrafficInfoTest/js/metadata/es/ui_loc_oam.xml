<?xml version="1.0" encoding="UTF-8"?>
<messagebundle>
  <msg name="WinJS.UI.StorageDataSource">Crea un origen de datos que enumera un objeto IStorageQueryResultBase.</msg>
  <msg name="WinJS.UI.StorageDataSource_p:query">El objeto que se va a enumerar. Debe admitir IStorageQueryResultBase.</msg>
  <msg name="WinJS.UI.StorageDataSource_p:options">Objeto que especifica las opciones para el origen de datos. Este parámetro es opcional. Puede contener estas propiedades: mode: valor de Windows.Storage.FileProperties.ThumbnailMode que especifica si se van a solicitar miniaturas y el tipo de miniaturas que se van a solicitar. requestedThumbnailSize: número que especifica el tamaño de las miniaturas. thumbnailOptions: valor de Windows.Storage.FileProperties.ThumbnailOptions que especifica las opciones adicionales para las miniaturas. waitForFileLoad: si establece en true, el origen de datos devuelve elementos únicamente después de haber cargado sus propiedades y miniaturas.</msg>
  <msg name="WinJS.UI.FlipView">Muestra una colección (como un conjunto de fotografías) elemento por elemento.</msg>
  <msg name="WinJS.UI.FlipView_e:datasourcecountchanged">Se genera cuando cambia el número de elementos de itemDataSource.</msg>
  <msg name="WinJS.UI.FlipView_e:pagevisibilitychanged">Se genera cuando una página FlipView se vuelve visible o no visible.</msg>
  <msg name="WinJS.UI.FlipView_e:pageselected">Se genera cuando el objeto FlipView cambia a una página.</msg>
  <msg name="WinJS.UI.FlipView_e:pagecompleted">Se genera cuando el objeto FlipView cambia a una página y se completa la función de su representador.</msg>
  <msg name="WinJS.UI.FlipView_part:flipView">El control FlipView completo.</msg>
  <msg name="WinJS.UI.FlipView_part:navigationButton">La clase general para todos los botones de navegación de FlipView.</msg>
  <msg name="WinJS.UI.FlipView_part:leftNavigationButton">El botón de navegación hacia la izquierda.</msg>
  <msg name="WinJS.UI.FlipView_part:rightNavigationButton">El botón de navegación hacia la derecha.</msg>
  <msg name="WinJS.UI.FlipView_part:topNavigationButton">El botón de navegación hacia arriba.</msg>
  <msg name="WinJS.UI.FlipView_part:bottomNavigationButton">El botón de navegación hacia abajo.</msg>
  <msg name="WinJS.UI.FlipView.constructor">Crea un nuevo objeto FlipView.</msg>
  <msg name="WinJS.UI.FlipView.constructor_p:element">El elemento DOM que hospeda el control.</msg>
  <msg name="WinJS.UI.FlipView.constructor_p:options">Objeto que contiene uno o varios pares de propiedad/valor que se aplicarán al nuevo control. Cada propiedad del objeto de opciones se corresponde con una de las propiedades o eventos del control. Los nombres de evento deben comenzar por "on". Por ejemplo, para proporcionar un controlador para el evento pageselected, agregue una propiedad denominada "onpageselected" al objeto de opciones y establezca su valor en el controlador de eventos. Este parámetro es opcional.</msg>
  <msg name="WinJS.UI.FlipView.constructor_returnValue">El nuevo control FlipView.</msg>
  <msg name="WinJS.UI.FlipView.next">Navega al siguiente elemento.</msg>
  <msg name="WinJS.UI.FlipView.next_returnValue">true si el objeto FlipView comienza a navegar a la página siguiente; false si el objeto FlipView está en la última página o en medio de otra animación de navegación.</msg>
  <msg name="WinJS.UI.FlipView.previous">Navega al elemento anterior.</msg>
  <msg name="WinJS.UI.FlipView.previous_returnValue">true si el objeto FlipView comienza a navegar a la página anterior; false si el objeto FlipView ya está en la primera página o en medio de otra animación de navegación.</msg>
  <msg name="WinJS.UI.FlipView.element">El elemento DOM que hospeda el control FlipView.</msg>
  <msg name="WinJS.UI.FlipView.currentPage">Obtiene o establece el índice de la página que se muestra actualmente. El valor mínimo es 0 y el valor máximo es uno menos que el número total de elementos devueltos por el origen de datos.</msg>
  <msg name="WinJS.UI.FlipView.orientation">Obtiene o establece la orientación del diseño del objeto FlipView: horizontal o vertical.</msg>
  <msg name="WinJS.UI.FlipView.itemDataSource">Obtiene o establece el origen de datos que proporciona al objeto FlipView los elementos que debe mostrar. El objeto FlipView muestra un elemento en cada momento, cada uno en su propia página.</msg>
  <msg name="WinJS.UI.FlipView.itemTemplate">Obtiene o establece un objeto WinJS.Binding.Template o una función que define el código HTML de la página de cada elemento.</msg>
  <msg name="WinJS.UI.FlipView.itemSpacing">Obtiene o establece el espaciado entre los elementos, en píxeles.</msg>
  <msg name="WinJS.UI.FlipView.count">Devuelve el número de elementos existente en el objeto itemDataSource del objeto FlipView.</msg>
  <msg name="WinJS.UI.FlipView.count_returnValue">Objeto Promise que contiene el número de elementos de la lista o WinJS.UI.CountResult.unknown si el número no está disponible.</msg>
  <msg name="WinJS.UI.FlipView.setCustomAnimations">Establece las animaciones personalizadas que debe usar el objeto FlipView al navegar entre las páginas.</msg>
  <msg name="WinJS.UI.FlipView.setCustomAnimations_p:animations">Objeto que contiene hasta tres campos, uno para cada acción de navegación: siguiente, anterior y saltar. Cada uno de esos campos debe ser una función con esta signatura: function (outgoingPage, incomingPage). Esta función devuelve un objeto WinJS.Promise que se completa cuando las animaciones han finalizado. Si un campo es NULL o está sin definir, el objeto FlipView revierte a la animación predeterminada para esa acción.</msg>
  <msg name="WinJS.UI.FlipView.forceLayout">Fuerza al objeto FlipView a actualizar su diseño. Use esta función cuando vuelva a poner visible el objeto FlipView después de que su propiedad style.display se haya establecido en "none".</msg>
  <msg name="WinJS.UI._LayoutCommon.init">Este método es compatible con la infraestructura de la Biblioteca de Windows para JavaScript y no está diseñado para usarse directamente desde el código.</msg>
  <msg name="WinJS.UI._LayoutCommon.setSite_p:layoutSite"></msg>
  <msg name="WinJS.UI._LayoutCommon.disableBackdrop">Obtiene o establece un valor que indica si el diseño debe deshabilitar la característica de texto de fondo que evita las áreas en blanco mientras realiza la panorámica en una lista virtualizada.</msg>
  <msg name="WinJS.UI._LayoutCommon.backdropColor">Obtiene o establece el color de relleno para el modelo de valor predeterminado usado para los textos de fondo. El valor predeterminado es "rgba(155,155,155,0.23)".</msg>
  <msg name="WinJS.UI._LayoutCommon.itemInfo">Determina el tamaño del elemento y si el elemento se debe colocar en una nueva columna.</msg>
  <msg name="WinJS.UI._LayoutCommon.groupInfo">Indica si un grupo tiene elementos de tamaño variable.</msg>
  <msg name="WinJS.UI.GridLayout">Crea un nuevo objeto GridLayout.</msg>
  <msg name="WinJS.UI.GridLayout_p:options">El conjunto de propiedades y valores que se van a aplicar al nuevo objeto GridLayout.</msg>
  <msg name="WinJS.UI.GridLayout_returnValue">El nuevo objeto GridLayout.</msg>
  <msg name="WinJS.UI.GridLayout.horizontal">Obtiene un valor que indica si los elementos están dispuestos horizontalmente. Esta propiedad siempre devuelve true para GridLayout.</msg>
  <msg name="WinJS.UI.GridLayout.groupHeaderPosition">Obtiene o establece la posición de los encabezados de grupo con relación a sus elementos. El valor predeterminado es "top".</msg>
  <msg name="WinJS.UI.GridLayout.maxRows">El número máximo de filas que muestra el objeto ListView.</msg>
  <msg name="WinJS.UI.ListLayout">Crea un nuevo objeto ListLayout.</msg>
  <msg name="WinJS.UI.ListLayout_p:options">El conjunto de propiedades y valores que se van a aplicar al nuevo objeto ListLayout.</msg>
  <msg name="WinJS.UI.ListLayout_returnValue">El nuevo objeto ListLayout.</msg>
  <msg name="WinJS.UI.ListLayout.horizontal">Obtiene un valor que indica si los elementos están dispuestos horizontalmente. Esta propiedad siempre devuelve false para ListLayout.</msg>
  <msg name="WinJS.UI.ListLayout.getKeyboardNavigatedItem">Esta API es compatible con la infraestructura de la Biblioteca de Windows para JavaScript y no está diseñada para usarse directamente desde el código.</msg>
  <msg name="WinJS.UI.ListView">Muestra elementos en una lista o una cuadrícula personalizable.</msg>
  <msg name="WinJS.UI.ListView_e:contentanimating">Se genera cuando el objeto ListView está a punto de reproducir una entrada o una animación de transición.</msg>
  <msg name="WinJS.UI.ListView_e:iteminvoked">Se genera cuando el usuario puntea un elemento o hace clic en él.</msg>
  <msg name="WinJS.UI.ListView_e:selectionchanging">Se genera antes de que se seleccionen los elementos o de que se anule su selección.</msg>
  <msg name="WinJS.UI.ListView_e:selectionchanged">Se genera después de que se seleccionen los elementos o de que se anule su selección.</msg>
  <msg name="WinJS.UI.ListView_e:loadingstatechanged">Se genera cuando cambia el estado de la carga.</msg>
  <msg name="WinJS.UI.ListView_e:keyboardnavigating">Se genera cuando cambia el elemento que tiene el foco.</msg>
  <msg name="WinJS.UI.ListView_part:listView">El control ListView completo.</msg>
  <msg name="WinJS.UI.ListView_part:viewport">El objeto viewport del objeto ListView.</msg>
  <msg name="WinJS.UI.ListView_part:surface">El área desplazable del objeto ListView.</msg>
  <msg name="WinJS.UI.ListView_part:item">Elemento del objeto ListView.</msg>
  <msg name="WinJS.UI.ListView_part:selectionbackground">El fondo de una marca de verificación de la selección.</msg>
  <msg name="WinJS.UI.ListView_part:selectioncheckmark">Marca de verificación de la selección.</msg>
  <msg name="WinJS.UI.ListView_part:groupHeader">El encabezado de un grupo.</msg>
  <msg name="WinJS.UI.ListView_part:progressbar">El indicador de progreso del objeto ListView.</msg>
  <msg name="WinJS.UI.ListView.constructor">Crea un nuevo objeto ListView.</msg>
  <msg name="WinJS.UI.ListView.constructor_p:element">El elemento DOM que hospeda el control ListView.</msg>
  <msg name="WinJS.UI.ListView.constructor_p:options">Objeto que contiene uno o varios pares de propiedad/valor que se aplicarán al nuevo control. Cada propiedad del objeto de opciones se corresponde con una de las propiedades o eventos del control. Los nombres de evento deben comenzar por "on". Por ejemplo, para proporcionar un controlador para el evento selectionchanged, agregue una propiedad denominada "onselectionchanged" al objeto de opciones y establezca su valor en el controlador de eventos.</msg>
  <msg name="WinJS.UI.ListView.constructor_returnValue">El nuevo objeto ListView.</msg>
  <msg name="WinJS.UI.ListView.element">Obtiene el elemento DOM que hospeda el objeto ListView.</msg>
  <msg name="WinJS.UI.ListView.layout">Obtiene o establece un objeto que controla el diseño del objeto ListView.</msg>
  <msg name="WinJS.UI.ListView.pagesToLoad">Obtiene o establece el número de páginas que se cargan cuando el usuario se desplaza más allá del umbral especificado por la propiedad pagesToLoadThreshold si la propiedad loadingBehavior está establecida en incremental.</msg>
  <msg name="WinJS.UI.ListView.pagesToLoadThreshold">Obtiene o establece el umbral (en páginas) para iniciar una carga incremental. Si el último elemento visible está dentro del número de páginas especificado a partir del final de la parte cargada de la lista, el objeto automaticallyLoadPages es true, y el objeto loadingBehavior está establecido en "incremental", el objeto control ListView inicia una carga incremental.</msg>
  <msg name="WinJS.UI.ListView.groupDataSource">Obtiene o establece el origen de datos que contiene los grupos para los elementos del objeto itemDataSource.</msg>
  <msg name="WinJS.UI.ListView.automaticallyLoadPages">Obtiene o establece un valor que indica si el conjunto de páginas siguiente se carga automáticamente cuando el usuario se desplaza más allá del número de páginas especificado por la propiedad pagesToLoadThreshold.</msg>
  <msg name="WinJS.UI.ListView.loadingBehavior">Obtiene o establece un valor que determina cuántos elementos de datos se cargan en el objeto DOM.</msg>
  <msg name="WinJS.UI.ListView.selectionMode">Obtiene o establece un valor que especifica cuántos elementos ListView puede seleccionar el usuario: "none", "single" o "multi".</msg>
  <msg name="WinJS.UI.ListView.tapBehavior">Obtiene o establece cómo reacciona el objeto ListView cuando el usuario puntea un elemento o hace clic en él. La acción de puntear o hacer clic puede invocar el elemento, puede seleccionarlo e invocarlo, o puede no tener efecto.</msg>
  <msg name="WinJS.UI.ListView.swipeBehavior">Obtiene o establece cómo reacciona el objeto ListView a la interacción de deslizar rápidamente. El gesto de deslizar rápidamente puede seleccionar los elementos deslizados o puede no tener efecto en la selección actual.</msg>
  <msg name="WinJS.UI.ListView.itemDataSource">Obtiene o establece el origen de datos que proporciona elementos para el objeto ListView.</msg>
  <msg name="WinJS.UI.ListView.itemTemplate">Obtiene o establece la función de plantillas que crea los elementos DOM para cada elemento del objeto itemDataSource. Cada elemento puede contener varios elementos DOM, pero se recomienda que tenga un único elemento raíz.</msg>
  <msg name="WinJS.UI.ListView.resetItem">Obtiene o establece la función a la que se llama cuando el objeto ListView recicla la representación de elemento de un elemento.</msg>
  <msg name="WinJS.UI.ListView.groupHeaderTemplate">Obtiene o establece la función de plantillas que crea elementos DOM para cada encabezado de grupo del objeto groupDataSource. Cada encabezado de grupo puede contener varios elementos, pero debe tener un elemento raíz único.</msg>
  <msg name="WinJS.UI.ListView.resetGroupHeader">Obtiene o establece la función a la que se llama cuando el objeto ListView recicla la representación de elemento DOM de un encabezado de grupo.</msg>
  <msg name="WinJS.UI.ListView.loadingState">Obtiene un valor que indica si el objeto ListView todavía está cargando o si se ha completado la carga. Esta propiedad puede devolver uno de estos valores: "itemsLoading", "viewPortLoaded", "itemsLoaded" o "complete".</msg>
  <msg name="WinJS.UI.ListView.selection">Obtiene un objeto ISelection que contiene los elementos seleccionados.</msg>
  <msg name="WinJS.UI.ListView.indexOfFirstVisible">Obtiene o establece el primer elemento visible. Al establecer esta propiedad, el objeto ListView se desplaza de modo que el elemento con el índice especificado se sitúa en la parte superior de la lista.</msg>
  <msg name="WinJS.UI.ListView.indexOfLastVisible">Obtiene el índice del último elemento visible.</msg>
  <msg name="WinJS.UI.ListView.currentItem">Obtiene o establece un objeto que indica qué elemento debe obtener el foco de teclado y el estado del foco. El objeto tiene estas propiedades: index: el índice del elemento del objeto itemDataSource. key: la clave del elemento del objeto itemDataSource. hasFocus: al obtener esta propiedad, este valor es true si el elemento ya tiene el foco; en caso contrario, es false. Al establecer esta propiedad, establezca este valor en true si el elemento debe obtener el foco inmediatamente; en caso contrario, establézcalo en false y el elemento obtendrá el foco finalmente. showFocus: true si el elemento muestra el rectángulo de foco; en caso contrario, false.</msg>
  <msg name="WinJS.UI.ListView.zoomableView">Obtiene un objeto ZoomableView. Esta API es compatible con la infraestructura SemanticZoom y no está diseñada para que se utilice directamente desde el código.</msg>
  <msg name="WinJS.UI.ListView.elementFromIndex">Devuelve el elemento DOM que representa el elemento en el índice especificado.</msg>
  <msg name="WinJS.UI.ListView.elementFromIndex_p:itemIndex">Índice del elemento.</msg>
  <msg name="WinJS.UI.ListView.elementFromIndex_returnValue">El elemento DOM que representa el elemento especificado.</msg>
  <msg name="WinJS.UI.ListView.indexOfElement">Devuelve el índice del elemento mostrado por el elemento DOM especificado.</msg>
  <msg name="WinJS.UI.ListView.indexOfElement_p:element">El elemento DOM que muestra el elemento.</msg>
  <msg name="WinJS.UI.ListView.indexOfElement_returnValue">El índice del elemento mostrado por el elemento DOM especificado.</msg>
  <msg name="WinJS.UI.ListView.ensureVisible">Hace que el elemento especificado esté visible. El objeto ListView se desplaza al elemento si es necesario.</msg>
  <msg name="WinJS.UI.ListView.ensureVisible_p:itemIndex">El índice del elemento que se va a mostrar.</msg>
  <msg name="WinJS.UI.ListView.loadMorePages">Carga el conjunto de páginas siguiente si el objeto loadingBehavior del objeto ListView está establecido en incremental.</msg>
  <msg name="WinJS.UI.ListView.recalculateItemPosition">Ajusta la posición de todos los elementos visibles del objeto ListView para adaptarlos a los elementos cuyos tamaños han cambiado. La mayoría de las aplicaciones no necesitarán nunca llamar a este método.</msg>
  <msg name="WinJS.UI.ListView.forceLayout">Fuerza al objeto ListView a actualizar su diseño. Use esta función cuando vuelva a poner visible el objeto ListView después de que haya establecido en "none" su propiedad style.display.</msg>
  <msg name="WinJS.UI.ListView.scrollPosition">Obtiene o establece la posición de la barra de desplazamiento del objeto ListView.</msg>
  <msg name="WinJS.UI.ListView.triggerDispose">Desencadena el servicio de eliminación de ListView manualmente. En el funcionamiento normal esto se desencadena en la creación de instancias de ListView. Sin embargo en algunos casos puede ser apropiado ejecutar manualmente el servicio de eliminación.</msg>
  <msg name="WinJS.UI._Selection.prototype.clear">Borra la selección.</msg>
  <msg name="WinJS.UI._Selection.prototype.clear_returnValue">Objeto Promise que se cumple cuando se completa la operación de borrado.</msg>
  <msg name="WinJS.UI._Selection.prototype.set">Borra la selección actual y la reemplazarla por los elementos especificados.</msg>
  <msg name="WinJS.UI._Selection.prototype.set_items">Los índices o claves de los elementos que componen la selección. Puede proporcionar diferentes tipos de objetos para el parámetro items: un índice, una clave o un intervalo de índices. También puede ser una matriz que contenga uno o varios de estos objetos.</msg>
  <msg name="WinJS.UI._Selection.prototype.set_returnValue">Objeto Promise que se cumple cuando se completa la operación.</msg>
  <msg name="WinJS.UI._Selection.prototype.add">Agrega uno o varios elementos a la selección.</msg>
  <msg name="WinJS.UI._Selection.prototype.add_items">Los índices o claves de los elementos que se van a agregar. Puede proporcionar diferentes tipos de objetos para el parámetro items: un índice, una clave o un intervalo de índices. También puede ser una matriz que contenga uno o varios de estos objetos.</msg>
  <msg name="WinJS.UI._Selection.prototype.remove">Quita los elementos especificados de la selección.</msg>
  <msg name="WinJS.UI._Selection.prototype.remove_items">Los índices o claves de los elementos que se van a quitar. Puede proporcionar diferentes tipos de objetos para el parámetro items: un índice, una clave o un intervalo de índices. También puede ser una matriz que contenga uno o varios de estos objetos.</msg>
  <msg name="WinJS.UI.DatePicker">Permite a los usuarios seleccionar un valor de fecha.</msg>
  <msg name="WinJS.UI.DatePicker_name">Selector de fecha</msg>
  <msg name="WinJS.UI.DatePicker_e:change">Tiene lugar cuando la fecha actual cambia.</msg>
  <msg name="WinJS.UI.DatePicker.constructor">Inicializa una nueva instancia del control DatePicker.</msg>
  <msg name="WinJS.UI.DatePicker.constructor_p:element">El elemento DOM asociado al control DatePicker.</msg>
  <msg name="WinJS.UI.DatePicker.constructor_p:options">El conjunto de opciones que se aplicarán inicialmente al control DatePicker.</msg>
  <msg name="WinJS.UI.DatePicker.constructor_returnValue">Control DatePicker construido.</msg>
  <msg name="WinJS.UI.DatePicker.calendar">Obtiene o establece el calendario que se va a utilizar.</msg>
  <msg name="WinJS.UI.DatePicker.current">Obtiene o establece la fecha actual del objeto DatePicker.</msg>
  <msg name="WinJS.UI.DatePicker.disabled">Especifica si el objeto DatePicker está deshabilitado.</msg>
  <msg name="WinJS.UI.DatePicker.datePattern">Obtiene o establece el modelo de visualización de la fecha.</msg>
  <msg name="WinJS.UI.DatePicker.element">Obtiene el elemento DOM para el objeto DatePicker.</msg>
  <msg name="WinJS.UI.DatePicker.minYear">Obtiene o establece el año gregoriano mínimo disponible para la selección.</msg>
  <msg name="WinJS.UI.DatePicker.maxYear">Obtiene o establece el año gregoriano máximo disponible para la selección.</msg>
  <msg name="WinJS.UI.DatePicker.monthPattern">Obtiene o establece el modelo de visualización del mes.</msg>
  <msg name="WinJS.UI.DatePicker.yearPattern">Obtiene o establece el modelo de visualización del año.</msg>
  <msg name="WinJS.UI.TimePicker">Permite a los usuarios seleccionar valores de hora.</msg>
  <msg name="WinJS.UI.TimePicker_name">Selector de hora</msg>
  <msg name="WinJS.UI.TimePicker_e:change">Se produce cuando cambia la hora.</msg>
  <msg name="WinJS.UI.TimePicker.constructor">Inicializa una nueva instancia del control TimePicker.</msg>
  <msg name="WinJS.UI.TimePicker.constructor_p:element">El elemento DOM asociado al control TimePicker.</msg>
  <msg name="WinJS.UI.TimePicker.constructor_p:options">El conjunto de opciones que se aplicarán inicialmente al control TimePicker.</msg>
  <msg name="WinJS.UI.TimePicker.constructor_returnValue">Control TimePicker construido.</msg>
  <msg name="WinJS.UI.TimePicker.clock">Obtiene o establece el tipo de reloj que se mostrará (12HourClock o 24HourClock). Toma como valor predeterminado la configuración del usuario.</msg>
  <msg name="WinJS.UI.TimePicker.current">Obtiene o establece la fecha (y la hora) actual del objeto TimePicker.</msg>
  <msg name="WinJS.UI.TimePicker.disabled">Especifica si el objeto TimePicker está deshabilitado.</msg>
  <msg name="WinJS.UI.TimePicker.element">Obtiene el elemento DOM para el objeto TimePicker.</msg>
  <msg name="WinJS.UI.TimePicker.hourPattern">Obtiene o establece el modelo de visualización de la hora.</msg>
  <msg name="WinJS.UI.TimePicker.minuteIncrement">Obtiene o establece el incremento de minutos. Por ejemplo, "15" especifica que el control de minuto de TimePicker debe mostrar únicamente las opciones 00, 15, 30, 45.</msg>
  <msg name="WinJS.UI.TimePicker.minutePattern">Obtiene o establece el modelo de visualización del minuto.</msg>
  <msg name="WinJS.UI.TimePicker.periodPattern">Obtiene o establece el modelo de visualización del período.</msg>
  <msg name="WinJS.UI.Rating">El control Rating permite a los usuarios asignar un número en una escala de 1 a maxRating (5 es el valor predeterminado).</msg>
  <msg name="WinJS.UI.Rating_e:previewchange">Se genera cuando el usuario elige una nueva valoración provisional pero no ha confirmado el cambio.</msg>
  <msg name="WinJS.UI.Rating_e:cancel">Se genera cuando el usuario termina de interactuar con el control de valoración sin confirmar una valoración provisional.</msg>
  <msg name="WinJS.UI.Rating_e:change">Se genera cuando el usuario confirma un cambio en el objeto userRating.</msg>
  <msg name="WinJS.UI.Rating_part:rating">El control Rating completo.</msg>
  <msg name="WinJS.UI.Rating_part:average-empty">La estrella vacía cuando el control Rating muestra la valoración media.</msg>
  <msg name="WinJS.UI.Rating_part:average-full">La estrella llena cuando el control Rating muestra la valoración media.</msg>
  <msg name="WinJS.UI.Rating_part:user-empty">La estrella vacía cuando el control Rating muestra la valoración del usuario.</msg>
  <msg name="WinJS.UI.Rating_part:user-full">La estrella llena cuando el control Rating muestra la valoración del usuario.</msg>
  <msg name="WinJS.UI.Rating_part:tentative-empty">La estrella vacía cuando el control Rating muestra la valoración provisional.</msg>
  <msg name="WinJS.UI.Rating_part:tentative-full">La estrella llena cuando el control Rating muestra la valoración provisional.</msg>
  <msg name="WinJS.UI.Rating_part:disabled-empty">La estrella vacía cuando el control está deshabilitado.</msg>
  <msg name="WinJS.UI.Rating_part:disabled-full">La estrella llena cuando el control está deshabilitado.</msg>
  <msg name="WinJS.UI.Rating.constructor">Crear un nuevo objeto Rating.</msg>
  <msg name="WinJS.UI.Rating.constructor_p:element">El elemento DOM que hospeda el nuevo objeto Rating.</msg>
  <msg name="WinJS.UI.Rating.constructor_p:options">Objeto que contiene uno o varios pares de propiedad/valor que se aplicarán al nuevo control. Cada propiedad del objeto de opciones se corresponde con una de las propiedades o eventos del control. Los nombres de evento deben comenzar por "on". Por ejemplo, para proporcionar un controlador para el evento cancel, agregue una propiedad denominada "oncancel" al objeto de opciones y establezca su valor en el controlador de eventos. Este parámetro es opcional.</msg>
  <msg name="WinJS.UI.Rating.constructor_returnValue">El nuevo objeto Rating.</msg>
  <msg name="WinJS.UI.Rating.maxRating">Obtiene o establece el máximo valor de valoración posible. El valor predeterminado es 5</msg>
  <msg name="WinJS.UI.Rating.userRating">Obtiene o establece la valoración del usuario. Este valor debe ser mayor o igual que cero y menor o igual que el objeto maxRating.</msg>
  <msg name="WinJS.UI.Rating.averageRating">Obtiene o establece la valoración media como un valor float. Este valor debe ser [igual a cero] OR [mayor o igual que 1 AND igual o menor que el maxRating].</msg>
  <msg name="WinJS.UI.Rating.disabled">Obtiene o establece un valor que especifica si el control está deshabilitado. Cuando el control está deshabilitado, el usuario no puede especificar una nueva valoración ni modificar una valoración existente.</msg>
  <msg name="WinJS.UI.Rating.enableClear">Obtiene o establece si el control permite al usuario borrar la valoración.</msg>
  <msg name="WinJS.UI.Rating.tooltipStrings">Obtiene o establece un conjunto de descripciones que se mostrarán con los valores de valoración en la información sobre herramientas. La matriz debe contener una cadena para cada valor de valoración disponible, y puede contener una cadena opcional (al final de la matriz) para la opción de borrar valoración.</msg>
  <msg name="WinJS.UI.Rating.element">Obtiene el elemento DOM que hospeda el objeto Rating.</msg>
  <msg name="WinJS.UI.Rating.addEventListener">Registra un controlador de eventos para el evento especificado.</msg>
  <msg name="WinJS.UI.Rating.addEventListener_p:eventName">Nombre del evento.</msg>
  <msg name="WinJS.UI.Rating.addEventListener_p:eventCallback">La función de controlador de eventos que se va a asociar a este evento.</msg>
  <msg name="WinJS.UI.Rating.addEventListener_p:capture">Establézcalo en true si desea registrar el controlador de eventos para la fase de captura; establézcalo en false si desea registrarlo para la fase de propagación.</msg>
  <msg name="WinJS.UI.Rating.removeEventListener">Anula el registro de un controlador de eventos para el evento especificado.</msg>
  <msg name="WinJS.UI.Rating.removeEventListener_p:eventCallback">La función de controlador de eventos que va a quitar.</msg>
  <msg name="WinJS.UI.Rating.removeEventListener_p:capture">Establézcalo en true para anular el registro del controlador de eventos para la fase de captura; establézcalo en false para anular el registro del controlador de eventos para la fase de propagación.</msg>
  <msg name="WinJS.UI.ToggleSwitch">Control que permite al usuario activar o desactivar una opción.</msg>
  <msg name="WinJS.UI.ToggleSwitch_e:change">Se genera cuando el modificador cambia a activado (checked está establecido en true) o a desactivado (checked está establecido en false).</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:toggle">El control ToggleSwitch completo.</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:switch">El control deslizante que permite al usuario cambiar el estado del objeto ToggleSwitch.</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:title">El texto principal del control ToggleSwitch.</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:label-on">El texto que se usará cuando el modificador esté activado.</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:label-off:">El texto que se usará cuando el modificador esté desactivado.</msg>
  <msg name="WinJS.UI.ToggleSwitch.constructor">Crea un nuevo objeto ToggleSwitch.</msg>
  <msg name="WinJS.UI.ToggleSwitch.constructor_p:element">El elemento DOM que hospeda el objeto ToggleSwitch.</msg>
  <msg name="WinJS.UI.ToggleSwitch.constructor_p:options">Objeto que contiene uno o varios pares de propiedad/valor que se aplicarán al nuevo control. Cada propiedad del objeto de opciones se corresponde con una de las propiedades o eventos del control. Los nombres de evento deben comenzar por "on". Por ejemplo, para proporcionar un controlador para el evento change, agregue una propiedad denominada "onchange" al objeto de opciones y establezca su valor en el controlador de eventos. Este parámetro es opcional.</msg>
  <msg name="WinJS.UI.ToggleSwitch.constructor_returnValue">El nuevo objeto ToggleSwitch.</msg>
  <msg name="WinJS.UI.ToggleSwitch.checked">Obtiene o establece si el control está activado (checked está establecido en true) o desactivado (checked está establecido en false).</msg>
  <msg name="WinJS.UI.ToggleSwitch.disabled">Obtiene o establece un valor que especifica si el control está deshabilitado.</msg>
  <msg name="WinJS.UI.ToggleSwitch.element">El elemento DOM que hospeda el control ToggleSwitch.</msg>
  <msg name="WinJS.UI.ToggleSwitch.labelOn">Obtiene o establece el texto que se muestra cuando el control está activado (checked está establecido en true). El valor predeterminado es "On".</msg>
  <msg name="WinJS.UI.ToggleSwitch.labelOff">Obtiene o establece el texto que se muestra cuando el control está desactivado (checked está establecido en false). El valor predeterminado es "Off".</msg>
  <msg name="WinJS.UI.ToggleSwitch.title">Obtiene o establece el texto principal para el control ToggleSwitch. Este texto se muestra siempre, independientemente de si el control está activado o desactivado.</msg>
  <msg name="WinJS.UI.SemanticZoom">Permite al usuario aplicar el zoom entre dos vistas diferentes proporcionadas por dos controles secundarios. Un control secundario proporciona la vista alejada y otro proporciona la vista acercada.</msg>
  <msg name="WinJS.UI.SemanticZoom_part:semanticZoom">El control SemanticZoom completo.</msg>
  <msg name="WinJS.UI.SemanticZoom.constructor">Crea un nuevo objeto SemanticZoom.</msg>
  <msg name="WinJS.UI.SemanticZoom.constructor_p:element">El elemento DOM que hospeda el objeto SemanticZoom.</msg>
  <msg name="WinJS.UI.SemanticZoom.constructor_p:options">Objeto que contiene uno o varios pares de propiedad/valor que se aplicarán al nuevo control. Cada propiedad del objeto de opciones se corresponde con una de las propiedades o eventos del control. Este parámetro es opcional.</msg>
  <msg name="WinJS.UI.SemanticZoom.constructor_returnValue">El nuevo control SemanticZoom.</msg>
  <msg name="WinJS.UI.SemanticZoom.element">El elemento DOM que hospeda el control SemanticZoom.</msg>
  <msg name="WinJS.UI.SemanticZoom.enableButton">Obtiene o establece un valor que especifica si el botón de zoom semántico se debe mostrar o no</msg>
  <msg name="WinJS.UI.SemanticZoom.zoomedOut">Obtiene o establece un valor que especifica si la vista alejada se muestra actualmente.</msg>
  <msg name="WinJS.UI.SemanticZoom.zoomFactor">Obtiene o establece un valor entre 0,2 y 0,85 que especifica la escala de la vista alejada. El valor predeterminado es 0.65</msg>
  <msg name="WinJS.UI.SemanticZoom.locked">Obtiene o establece un valor que indica si SemanticZoom está bloqueado y el zoom entre vistas deshabilitado.</msg>
  <msg name="WinJS.UI.SemanticZoom.forceLayout">Fuerza al objeto SemanticZoom a actualizar su diseño. Use esta función cuando vuelva a poner visible el objeto SemanticZoom después de que su propiedad style.display se haya establecido en "none".</msg>
  <msg name="WinJS.UI._Overlay">Construye el control Overlay y lo asocia al elemento DOM subyacente.</msg>
  <msg name="WinJS.UI._Overlay_p:element">El elemento DOM que se va a asociar al control Overlay.</msg>
  <msg name="WinJS.UI._Overlay_p:options">El conjunto de opciones que se aplicarán inicialmente al control Overlay.</msg>
  <msg name="WinJS.UI._Overlay_returnValue">Control Overlay totalmente construido.</msg>
  <msg name="WinJS.UI._Overlay.element">El elemento DOM al que se ha asociado el objeto Overlay</msg>
  <msg name="WinJS.UI._Overlay.disabled">Deshabilita un objeto Overlay, estableciendo u obteniendo el atributo HTML deshabilitado. Cuando está deshabilitado, el objeto Overlay no se muestra con show() y, si actualmente está visible, se oculta.</msg>
  <msg name="WinJS.UI._Overlay.show">Muestra el objeto Overlay si está oculto, independientemente de cualquier otro estado</msg>
  <msg name="WinJS.UI._Overlay.hide">Oculta el objeto Overlay si está visible, independientemente de cualquier otro estado</msg>
  <msg name="WinJS.UI._Overlay.hidden">De solo lectura; es true si una superposición no está visible actualmente.</msg>
  <msg name="WinJS.UI._Overlay.addEventListener">Agrega un agente de escucha de eventos al elemento DOM para este objeto Overlay</msg>
  <msg name="WinJS.UI._Overlay.addEventListener_p:type">Requerido. El tipo de evento que se va a agregar: "beforehide", "afterhide", "beforeshow" o "aftershow"</msg>
  <msg name="WinJS.UI._Overlay.addEventListener_p:listener">Requerido. La función de controlador de eventos que se va a asociar a este evento.</msg>
  <msg name="WinJS.UI._Overlay.addEventListener_p:useCapture">Opcional. True si el registro se realiza para la fase de captura de eventos. False si el registro se realiza para la fase de propagación de eventos.</msg>
  <msg name="WinJS.UI._Overlay.removeEventListener">Quita un agente de escucha de eventos del elemento DOM para este objeto Overlay</msg>
  <msg name="WinJS.UI._Overlay.removeEventListener_p:type">Requerido. El tipo de evento que se va a quitar: "beforehide", "afterhide", "beforeshow" o "aftershow"</msg>
  <msg name="WinJS.UI.AppBarCommand">Los objetos AppBarCommand proporcionan la funcionalidad de botón, botón de alternancia, botón de control flotante y separador para los objetos AppBar.</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommand">El propio control AppBarCommand</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandIcon">El cuadro de icono del objeto AppBarCommand</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandImage">El formato de la imagen del icono del objeto AppBarCommand</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandRing">El anillo del icono de AppBarCommand</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandLabel">La etiqueta del objeto AppBarCommand</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor">Construye el control AppBarCommand</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor_p:element">El elemento DOM que se va a asociar al control AppBarCommand. AppBarCommand creará uno si es NULL.</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor_p:options">El conjunto de opciones que se aplicarán inicialmente al control AppBarCommand.</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor_returnValue">Control AppBarCommand.</msg>
  <msg name="WinJS.UI.AppBarCommand.id">El identificador del objeto AppBarCommand.</msg>
  <msg name="WinJS.UI.AppBarCommand.type">El tipo del objeto AppBarCommand; los valores posibles son: "button", "toggle", "flyout" o "separator"</msg>
  <msg name="WinJS.UI.AppBarCommand.label">La etiqueta del objeto AppBarCommand</msg>
  <msg name="WinJS.UI.AppBarCommand.icon">El icono del objeto AppBarCommand</msg>
  <msg name="WinJS.UI.AppBarCommand.onclick">El evento click al que se llamará cuando se invoque el objeto AppBarCommand</msg>
  <msg name="WinJS.UI.AppBarCommand.flyout">Para los objetos AppBarCommand de tipo control flotante, devuelve el objeto WinJS.UI.Flyout al que invoca este comando. También puede utilizar el identificador de cadena del control flotante que se va a invocar, el objeto DOM del control flotante o el propio control flotante</msg>
  <msg name="WinJS.UI.AppBarCommand.section">Establece u obtiene la sección en la que se situará el botón, "global" o "selection"</msg>
  <msg name="WinJS.UI.AppBarCommand.tooltip">El texto de la información sobre herramientas del objeto AppBarCommand</msg>
  <msg name="WinJS.UI.AppBarCommand.selected">Establece u obtiene el estado seleccionado de un botón de alternancia</msg>
  <msg name="WinJS.UI.AppBarCommand.element">El elemento DOM al que se ha asociado el objeto AppBarCommad</msg>
  <msg name="WinJS.UI.AppBarCommand.disabled">Deshabilita un comando. Obtendrá o establecerá el atributo HTML deshabilitado.</msg>
  <msg name="WinJS.UI.AppBarCommand.hidden">Determina si un comando está oculto.</msg>
  <msg name="WinJS.UI.AppBarCommand.addEventListener">Agrega un agente de escucha de eventos al elemento DOM para este comando</msg>
  <msg name="WinJS.UI.AppBarCommand.addEventListener_p:type">Requerido. Tipo de evento que se va a agregar.</msg>
  <msg name="WinJS.UI.AppBarCommand.removeEventListener">Quita un agente de escucha de eventos del elemento DOM para este comando</msg>
  <msg name="WinJS.UI.AppBarCommand.removeEventListener_p:type">Requerido. Tipo de evento que se va a quitar.</msg>
  <msg name="WinJS.UI.AppBarCommand.extraClass">Agrega una clase CSS adicional durante la construcción.</msg>
  <msg name="WinJS.UI.AppBar">El control AppBar proporciona una superficie para los objetos AppBarCommand u otra información que el usuario puede mostrar u ocultar.</msg>
  <msg name="WinJS.UI.AppBar_e:beforeshow">Se genera justo antes de mostrar un objeto AppBar.</msg>
  <msg name="WinJS.UI.AppBar_e:aftershow">Se genera inmediatamente después de que un objeto AppBar se muestre totalmente.</msg>
  <msg name="WinJS.UI.AppBar_e:beforehide">Se genera justo antes de ocultar un objeto AppBar.</msg>
  <msg name="WinJS.UI.AppBar_e:afterhide">Se genera inmediatamente después de que un objeto AppBar se oculte totalmente.</msg>
  <msg name="WinJS.UI.AppBar_part:appbar">El propio control AppBar.</msg>
  <msg name="WinJS.UI.AppBar_part:appBarCustom">Estilo de un objeto AppBar con un diseño personalizado</msg>
  <msg name="WinJS.UI.AppBar.constructor">Construye el control AppBar</msg>
  <msg name="WinJS.UI.AppBar.constructor_p:element">El elemento DOM que se va a asociar al control AppBar.</msg>
  <msg name="WinJS.UI.AppBar.constructor_p:options">El conjunto de opciones que se aplicarán inicialmente al control AppBar.</msg>
  <msg name="WinJS.UI.AppBar.constructor_returnValue">Control AppBar construido.</msg>
  <msg name="WinJS.UI.AppBar.placement">La ubicación del objeto AppBar en la pantalla. Los valores son "top" o "bottom".</msg>
  <msg name="WinJS.UI.AppBar.layout">El diseño del contenido del objeto AppBar, "commands" o "custom".</msg>
  <msg name="WinJS.UI.AppBar.sticky">Indica si el objeto AppBar permanece abierto.</msg>
  <msg name="WinJS.UI.AppBar.commands">Los comandos del objeto AppBar; contienen una matriz de opciones de AppBarCommand.</msg>
  <msg name="WinJS.UI.AppBar.getCommandById">Recupera el comando con el identificador especificado de este objeto AppBar. Si se encuentra más de un comando, se devuelven todos.</msg>
  <msg name="WinJS.UI.AppBar.getCommandById_p:id">Identificador del comando que se va a devolver.</msg>
  <msg name="WinJS.UI.AppBar.getCommandById_returnValue">El comando encontrado, una matriz de comandos si hay más de uno con el mismo identificador, o NULL si no se encuentra ningún comando con ese identificador</msg>
  <msg name="WinJS.UI.AppBar.showCommands">Muestra comandos de este objeto AppBar</msg>
  <msg name="WinJS.UI.AppBar.showCommands_p:commands">Requerido. El comando o los comandos que se van a mostrar, ya sean String, elementos DOM u objetos WinJS.</msg>
  <msg name="WinJS.UI.AppBar.hideCommands">Oculta comandos de este objeto AppBar</msg>
  <msg name="WinJS.UI.AppBar.hideCommands_p:commands">Requerido. El comando o los comandos que se van a ocultar, ya sean String, elementos DOM u objetos WinJS.</msg>
  <msg name="WinJS.UI.AppBar.showOnlyCommands">Muestra los comandos especificados, ocultando todos los demás del objeto AppBar.</msg>
  <msg name="WinJS.UI.AppBar.show">Muestra el objeto AppBar si está oculto, independientemente de cualquier otro estado</msg>
  <msg name="WinJS.UI.AppBar.hide">Oculta el objeto AppBar si está visible, independientemente de cualquier otro estado</msg>
  <msg name="WinJS.UI.Flyout">Los controles Flyout proporcionan superficies temporales para cantidades pequeñas de contenido.</msg>
  <msg name="WinJS.UI.Flyout_name">Control flotante</msg>
  <msg name="WinJS.UI.Flyout_e:beforeshow">Se genera justo antes de mostrar un control flotante.</msg>
  <msg name="WinJS.UI.Flyout_e:aftershow">Se genera inmediatamente después de que un control flotante se muestre totalmente.</msg>
  <msg name="WinJS.UI.Flyout_e:beforehide">Se genera justo antes de ocultar un control flotante.</msg>
  <msg name="WinJS.UI.Flyout_e:afterhide">Se genera inmediatamente después de que un control flotante se oculte totalmente.</msg>
  <msg name="WinJS.UI.Flyout_part:flyout">El propio control Flyout.</msg>
  <msg name="WinJS.UI.Flyout.constructor">Construye el control Flyout y lo asocia al elemento DOM subyacente.</msg>
  <msg name="WinJS.UI.Flyout.constructor_p:element">El elemento DOM que se va a asociar al control Flyout.</msg>
  <msg name="WinJS.UI.Flyout.constructor_p:options">El conjunto de opciones que se aplicarán inicialmente al control Flyout.</msg>
  <msg name="WinJS.UI.Flyout.constructor_returnValue">Control Flyout totalmente construido.</msg>
  <msg name="WinJS.UI.Flyout.anchor">El elemento de anclaje es el elemento HTML del que procede el control flotante y con relación al cual se ha posicionado este. Puede invalidarlo con el anclaje que se ha pasado en el método show().</msg>
  <msg name="WinJS.UI.Flyout.placement">Ubicación predeterminada que se utilizará para este control flotante, reemplazada por la ubicación que se ha pasado en show().</msg>
  <msg name="WinJS.UI.Flyout.alignment">Alineación predeterminada que se utilizará para este control flotante, reemplazada por la alineación que se ha pasado en show().</msg>
  <msg name="WinJS.UI.Flyout.show">Muestra el objeto Flyout si está oculto, independientemente de cualquier otro estado</msg>
  <msg name="WinJS.UI.Flyout.show_p:anchor">El elemento DOM, o el identificador de un elemento DOM al que se anclará el objeto Flyout, reemplazando la propiedad de anclaje solo esta vez.</msg>
  <msg name="WinJS.UI.Flyout.show_p:placement">La ubicación del objeto Flyout con relación al anclaje: 'auto' (valor predeterminado), 'top', 'bottom', 'left' o 'right'. Este parámetro reemplaza la propiedad de ubicación solo para esta presentación.</msg>
  <msg name="WinJS.UI.Flyout.show:alignment">Para la ubicación 'top' o 'bottom', la alineación del objeto Flyout con relación al borde del anclaje: 'center' (valor predeterminado), 'left' o 'right'. Este parámetro reemplaza la propiedad de alineación solo para esta presentación.</msg>
  <msg name="WinJS.UI.Flyout.hide">Oculta el objeto Flyout si está visible, independientemente de cualquier otro estado</msg>
  <msg name="WinJS.UI.Menu">El control Menu proporciona objetos MenuCommand al usuario.</msg>
  <msg name="WinJS.UI.Menu_name">Menu</msg>
  <msg name="WinJS.UI.Menu_e:beforeshow">Se genera justo antes de mostrar un menú.</msg>
  <msg name="WinJS.UI.Menu_e:aftershow">Se genera inmediatamente después de que un menú se muestre totalmente.</msg>
  <msg name="WinJS.UI.Menu_e:beforehide">Se genera justo antes de ocultar un menú.</msg>
  <msg name="WinJS.UI.Menu_e:afterhide">Se genera inmediatamente después de que un menú se oculte totalmente.</msg>
  <msg name="WinJS.UI.Menu_part:menu">El propio control Menu.</msg>
  <msg name="WinJS.UI.Menu.constructor">Construye el control Menu y lo asocia al elemento DOM subyacente.</msg>
  <msg name="WinJS.UI.Menu.constructor_p:element">El elemento DOM que se va a asociar al control Menu.</msg>
  <msg name="WinJS.UI.Menu.constructor_p:options">El conjunto de opciones que se aplicarán inicialmente al control Menu.</msg>
  <msg name="WinJS.UI.Menu.constructor_returnValue">Control Menu totalmente construido.</msg>
  <msg name="WinJS.UI.Menu.commands">Los comandos del objeto Menu; contiene una matriz de opciones de MenuCommand.</msg>
  <msg name="WinJS.UI.Menu.getCommandById">Recupera el comando con el identificador especificado de este objeto Menu. Si se encuentra más de un comando, se devuelven todos.</msg>
  <msg name="WinJS.UI.Menu.showCommands">Muestra los comandos de este objeto Menu</msg>
  <msg name="WinJS.UI.Menu.hideCommands">Oculta los comandos de este objeto Menu</msg>
  <msg name="WinJS.UI.Menu.showOnlyCommands">Muestra los comandos especificados, ocultando todos los demás del objeto Menu.</msg>
  <msg name="WinJS.UI.Menu.show">Muestra el objeto Menu si está oculto, independientemente de cualquier otro estado</msg>
  <msg name="WinJS.UI.Menu.show_p:anchor">El elemento DOM, o el identificador de un elemento DOM al que se anclará el objeto Menu, reemplazando la propiedad de anclaje solo esta vez.</msg>
  <msg name="WinJS.UI.Menu.show_p:placement">La ubicación del objeto Menu con relación al anclaje: 'auto' (valor predeterminado), 'top', 'bottom', 'left' o 'right'. Este parámetro reemplaza la propiedad de ubicación solo para esta presentación.</msg>
  <msg name="WinJS.UI.Menu.show_p:alignment">Para la ubicación 'top' o 'bottom', la alineación del objeto Menu con relación al borde del anclaje: 'center' (valor predeterminado), 'left' o 'right'. Este parámetro reemplaza la propiedad de alineación solo para esta presentación.</msg>
  <msg name="WinJS.UI.MenuCommand">Los objetos MenuCommand proporcionan la funcionalidad de botón, botón de alternancia, botón de control flotante y separador para los objetos Menu.</msg>
  <msg name="WinJS.UI.MenuCommand_name">El propio control MenuCommand</msg>
  <msg name="WinJS.UI.MenuCommand.constructor">Construye el control MenuCommand</msg>
  <msg name="WinJS.UI.MenuCommand.constructor_p:element">El elemento DOM que se va a asociar al control MenuCommand. MenuCommand creará uno si es NULL.</msg>
  <msg name="WinJS.UI.MenuCommand.constructor_p:options">El conjunto de opciones que se aplicarán inicialmente al control MenuCommand.</msg>
  <msg name="WinJS.UI.MenuCommand.constructor_returnValue">Control MenuCommand.</msg>
  <msg name="WinJS.UI.MenuCommand.id">El identificador del objeto MenuCommand.</msg>
  <msg name="WinJS.UI.MenuCommand.type">El tipo del objeto MenuCommand; los valores posibles son: "button", "toggle", "flyout" o "separator"</msg>
  <msg name="WinJS.UI.MenuCommand.label">La etiqueta del objeto MenuCommand</msg>
  <msg name="WinJS.UI.MenuCommand.onclick">El evento click al que se llamará cuando se invoque el objeto MenuCommand</msg>
  <msg name="WinJS.UI.MenuCommand.flyout">Para los objetos MenuCommand de tipo control flotante, devuelve el objeto WinJS.UI.Flyout al que invoca este comando. También puede utilizar el identificador de cadena del control flotante que se va a invocar, el objeto DOM del control flotante o el propio control flotante</msg>
  <msg name="WinJS.UI.MenuCommand.element">El elemento DOM al que se ha asociado el objeto MenuCommand</msg>
  <msg name="WinJS.UI.SettingsFlyout">El objeto SettingsFlyout proporciona acceso a la información del panel de configuración.</msg>
  <msg name="WinJS.UI.SettingsFlyout_name">Control flotante de configuración</msg>
  <msg name="WinJS.UI.SettingsFlyout_e:beforeshow">Se genera justo antes de mostrar un objeto SettingsFlyout.</msg>
  <msg name="WinJS.UI.SettingsFlyout_e:aftershow">Se genera inmediatamente después de que un objeto SettingsFlyout se muestre totalmente.</msg>
  <msg name="WinJS.UI.SettingsFlyout_e:beforehide">Se genera justo antes de ocultar un objeto SettingsFlyout.</msg>
  <msg name="WinJS.UI.SettingsFlyout_e:afterhide">Se genera inmediatamente después de que un objeto SettingsFlyout se oculte totalmente.</msg>
  <msg name="WinJS.UI.SettingsFlyout_part:settings">El propio control SettingsFlyout.</msg>
  <msg name="WinJS.UI.SettingsFlyout.constructor">Construye un control SettingsFlyout.</msg>
  <msg name="WinJS.UI.SettingsFlyout.constructor_p:element">El elemento DOM que se va a asociar al control SettingsFlyout.</msg>
  <msg name="WinJS.UI.SettingsFlyout.constructor_p:options">El conjunto de opciones que se aplicarán inicialmente al control SettingsFlyout.</msg>
  <msg name="WinJS.UI.SettingsFlyout.constructor_returnValue">Control SettingsFlyout construido.</msg>
  <msg name="WinJS.UI.SettingsFlyout.width">Ancho del objeto SettingsFlyout, "narrow" o "wide".</msg>
  <msg name="WinJS.UI.SettingsFlyout.settingsCommandId">Define el identificador del comando de configuración para el control SettingsFlyout.</msg>
  <msg name="WinJS.UI.SettingsFlyout.show">Muestra el SettingsFlyout, si está oculto.</msg>
  <msg name="WinJS.UI.SettingsFlyout.hide">Oculta el objeto SettingsFlyout si está visible, independientemente de cualquier otro estado.</msg>
  <msg name="WinJS.UI.Tooltip">Muestra información sobre herramientas que puede contener imágenes y formato.</msg>
  <msg name="WinJS.UI.Tooltip_e:beforeopen">Se genera cuando la información sobre herramientas está a punto de mostrarse.</msg>
  <msg name="WinJS.UI.Tooltip_e:opened">Se genera cuando la información sobre herramientas se muestra.</msg>
  <msg name="WinJS.UI.Tooltip_e:beforeclose">Se genera cuando la información sobre herramientas está a punto de ocultarse.</msg>
  <msg name="WinJS.UI.Tooltip_e:close">Se genera cuando se oculta la información sobre herramientas.</msg>
  <msg name="WinJS.UI.Tooltip_e:tooltip">El control ToolTip completo.</msg>
  <msg name="WinJS.UI.Tooltip.constructor">Crea un nuevo objeto Tooltip.</msg>
  <msg name="WinJS.UI.Tooltip.constructor_p:element">El elemento DOM que hospeda el objeto Tooltip.</msg>
  <msg name="WinJS.UI.Tooltip.constructor_p:options">Objeto que contiene uno o varios pares de propiedad/valor que se aplicarán al nuevo control. Cada propiedad del objeto de opciones se corresponde con una de las propiedades o eventos del control. Los nombres de evento deben comenzar por "on". Por ejemplo, para proporcionar un controlador para el evento opened, agregue una propiedad denominada "onopened" al objeto de opciones y establezca su valor en el controlador de eventos. Este parámetro es opcional.</msg>
  <msg name="WinJS.UI.Tooltip.constructor_returnValue">El nuevo objeto Tooltip.</msg>
  <msg name="WinJS.UI.Tooltip.innerHTML">Obtiene o establece el contenido HTML del objeto Tooltip.</msg>
  <msg name="WinJS.UI.Tooltip.element">Obtiene o establece el elemento DOM que hospeda el objeto Tooltip.</msg>
  <msg name="WinJS.UI.Tooltip.contentElement">Obtiene o establece el elemento DOM que es el contenido del objeto Tooltip.</msg>
  <msg name="WinJS.UI.Tooltip.placement">Obtiene o establece la posición del objeto Tooltip con relación a su elemento de destino: arriba, debajo, a la izquierda o a la derecha.</msg>
  <msg name="WinJS.UI.Tooltip.infotip">Obtiene o establece un valor que especifica si el objeto Tooltip es un recuadro informativo, es decir, un recuadro de información sobre herramientas que contiene mucha información y que debe mostrarse durante más tiempo que la información sobre herramientas típica. El valor predeterminado es false.</msg>
  <msg name="WinJS.UI.Tooltip.extraClass">Obtiene o establece las clases CSS adicionales que se aplicarán al elemento host del control Tooltip.</msg>
  <msg name="WinJS.UI.Tooltip.open">Muestra el objeto Tooltip.</msg>
  <msg name="WinJS.UI.Tooltip.open_p:type">El tipo de información sobre herramientas que se va a mostrar: "touch", "mouseover", "mousedown" o "keyboard". El valor predeterminado es "mousedown".</msg>
  <msg name="WinJS.UI.Tooltip.close">Oculta el objeto Tooltip.</msg>
  <msg name="WinJS.UI.ViewBox">Ajusta la escala de un único elemento secundario para rellenar el espacio disponible sin cambiar su tamaño. Este control responde a los cambios de tamaño del contenedor y a los cambios de tamaño del elemento secundario. Por ejemplo, una consulta de medios puede dar como resultado un cambio en la relación de aspecto.</msg>
  <msg name="WinJS.UI.ViewBox_name">Cuadro de vista</msg>
  <msg name="WinJS.UI.ViewBox.constructor">Inicializa una nueva instancia del control ViewBox.</msg>
  <msg name="WinJS.UI.ViewBox.constructor_p:element">El elemento DOM que funciona como el cuadro de escala. Este elemento rellena el 100% del ancho y el alto que tiene asignados.</msg>
  <msg name="WinJS.UI.ViewBox.constructor_p:options">El conjunto de opciones que se aplicarán inicialmente al control ViewBox.</msg>
  <msg name="WinJS.UI.ViewBox.constructor_returnValue">Control ViewBox construido.</msg>
  <msg name="WinJS.UI.ViewBox.element">Obtiene el elemento DOM que funciona como el cuadro de escala.</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation">Crea una animación de expansión. Después de crear el objeto ExpandAnimation, modifique el documento para mover los elementos a sus nuevas posiciones y llame al método execute en el objeto ExpandAnimation.</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation_p:revealed">Elemento o colección de elementos que se han revelado.</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation_p:affected">Elemento o colección de elementos cuyas posiciones han resultado afectadas por la expansión.</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation_returnValue">Objeto ExpandAnimation cuyo método execute devuelve un objeto Promise que se cumple cuando se completa la animación.</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation">Crea una animación de contracción. Después de crear el objeto CollapseAnimation, modifique el documento para mover los elementos a sus nuevas posiciones y llame al método execute en el objeto CollapseAnimation.</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation_p:hidden">Elemento o colección de elementos que se quitan de la vista. Cuando se completa la animación, la aplicación debe ocultar los elementos o quitarlos del documento.</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation_p:affected">Elemento o colección de elementos cuyas posiciones han resultado afectadas por la contracción.</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation_returnValue">Objeto CollapseAnimation cuyo método execute devuelve un objeto Promise que se cumple cuando se completa la animación.</msg>
  <msg name="WinJS.UI.Animation.createRepositionAnimation">Crea una animación de reubicación. Después de crear el objeto RepositionAnimation, modifique el documento para mover los elementos a sus nuevas posiciones y llame al método execute en el objeto RepositionAnimation.</msg>
  <msg name="WinJS.UI.Animation.createRepositionAnimation_p:element">Elemento o colección de elementos que se han reubicado.</msg>
  <msg name="WinJS.UI.Animation.createRepositionAnimation_returnValue">Objeto RepositionAnimation cuyo método execute devuelve un objeto Promise que se cumple cuando se completa la animación.</msg>
  <msg name="WinJS.UI.Animation.fadeIn">Ejecuta una animación de fundido de entrada.</msg>
  <msg name="WinJS.UI.Animation.fadeIn_p:element">Elemento o colección de elementos con los que se va a realizar el fundido de entrada. Al final de la animación, la opacidad de los elementos es 1.</msg>
  <msg name="WinJS.UI.Animation.fadeIn_returnValue">Objeto Promise que se cumple cuando se completa la animación.</msg>
  <msg name="WinJS.UI.Animation.fadeOut">Ejecuta una animación de fundido de salida.</msg>
  <msg name="WinJS.UI.Animation.fadeOut_p:element">Elemento o colección de elementos con los que se va a realizar el fundido de salida. Al final de la animación, la opacidad de los elementos es 0.</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation">Crea una animación que se agregará a una lista. Después de crear el objeto AddToListAnimation, modifique el documento para mover los elementos a sus nuevas posiciones y llame al método execute en el objeto AddToListAnimation.</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation_p:added">Elemento o colección de elementos que se han agregado.</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation_p:affected">Elemento o colección de elementos cuyas posiciones han resultado afectadas por la adición.</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation_returnValue">Objeto AddToListAnimation cuyo método execute devuelve un objeto Promise que se cumple cuando se completa la animación.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation">Crea una animación que se eliminará de una lista. Después de crear el objeto DeleteFromListAnimation, modifique el documento para reflejar la eliminación y llame al método execute en el objeto DeleteFromListAnimation.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation_p:deleted">Elemento o colección de elementos que se eliminarán. Cuando se completa la animación, la aplicación debe ocultar los elementos o quitarlos del documento.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation_p:remaining">Elemento o colección de elementos cuyas posiciones han resultado afectadas por la eliminación.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation_returnValue">Objeto DeleteFromListAnimation cuyo método execute devuelve un objeto Promise que se cumple cuando se completa la animación.</msg>
  <msg name="WinJS.UI.Animation.createAddToSearchListAnimation">Crea una animación que se agregará a una lista de resultados de la búsqueda. Es similar a un objeto AddToListAnimation, pero más rápido. Después de crear el objeto AddToSearchListAnimation, modifique el documento para mover los elementos a sus nuevas posiciones y llame al método execute en el objeto AddToSearchListAnimation.</msg>
  <msg name="WinJS.UI.Animation.createAddToSearchListAnimation_returnValue">Objeto AddToSearchListAnimation cuyo método execute devuelve un objeto Promise que se cumple cuando se completa la animación.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromSearchListAnimation">Crea una animación que se eliminará de una lista de resultados de la búsqueda. Es similar a un objeto DeleteFromListAnimation, pero más rápido. Después de crear el objeto DeleteFromSearchListAnimation, modifique el documento para mover los elementos a sus nuevas posiciones y llame al método execute en el objeto DeleteFromSearchListAnimation.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromSearchListAnimation_returnValue">Objeto DeleteFromSearchListAnimation cuyo método execute devuelve un objeto Promise que se cumple cuando se completa la animación.</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI">Desliza uno o varios elementos a la posición del borde de la pantalla. Esta animación está diseñada para un objeto pequeño como una barra de aplicaciones.</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI_p:element">Elemento o colección de elementos que se deslizarán a la posición. Los elementos deben estar en sus posiciones finales cuando se llama a la función.</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI_p:offset">Objeto de desplazamiento o matriz con una colección de objetos de desplazamiento opcional que describe el punto de inicio de la animación. Si el número de objetos de desplazamiento es menor que la longitud del parámetro de elemento, el último valor se repite para todos los elementos restantes. Si este parámetro se omite, se usa el valor predeterminado.</msg>
  <msg name="WinJS.UI.Animation.showPanel">Desliza uno o varios elementos a la posición del borde de la pantalla. Esta animación está diseñada para un objeto grande como un teclado.</msg>
  <msg name="WinJS.UI.Animation.showPanel_returnValue">objeto de compromiso</msg>
  <msg name="WinJS.UI.Animation.hideEdgeUI">Desliza uno o varios elementos hasta el borde de la pantalla, fuera de la vista. Esta animación está diseñada para un objeto pequeño como una barra de aplicaciones.</msg>
  <msg name="WinJS.UI.Animation.hideEdgeUI_p:element">Elemento o colección de elementos que se van a deslizar. Los elementos deben estar en sus posiciones dentro de la pantalla cuando se llama a la función.</msg>
  <msg name="WinJS.UI.Animation.hideEdgeUI_p:offset">Objeto de desplazamiento o matriz con una colección de objetos de desplazamiento opcional que describe el punto final de la animación. Si el número de objetos de desplazamiento es menor que la longitud del parámetro de elemento, el último valor se repite para todos los elementos restantes. Si este parámetro se omite, se usa el valor predeterminado.</msg>
  <msg name="WinJS.UI.Animation.hidePanel">Desliza uno o varios elementos hasta el borde de la pantalla, fuera de la vista. Esta animación está diseñada para un objeto grande como un teclado.</msg>
  <msg name="WinJS.UI.Animation.showPopup">Muestra uno o varios elementos como si se tratara de un elemento emergente.</msg>
  <msg name="WinJS.UI.Animation.showPopup_p:element">Elemento o colección de elementos que se mostrarán como un elemento emergente.</msg>
  <msg name="WinJS.UI.Animation.hidePopup">Quita un elemento emergente de la pantalla.</msg>
  <msg name="WinJS.UI.Animation.hidePopup_p:element">Elemento o colección de elementos que se ocultarán como un elemento emergente. Cuando se completa la animación, la aplicación debe ocultar los elementos o quitarlos del documento.</msg>
  <msg name="WinJS.UI.Animation.pointerDown">Ejecuta una animación de puntero presionado. Utilice la animación pointerUp para invertir el efecto de esta animación.</msg>
  <msg name="WinJS.UI.Animation.pointerDown_p:element">Elemento o colección de elementos que responden al evento de puntero presionado. Al final de la animación, las propiedades de los elementos se modifican para reflejar el estado de puntero presionado.</msg>
  <msg name="WinJS.UI.Animation.pointerUp">Ejecuta una animación de puntero levantado. Esto invierte el efecto de la animación pointerDown.</msg>
  <msg name="WinJS.UI.Animation.pointerUp_p:element">Elemento o colección de elementos que responden al evento de puntero levantado. Al final de la animación, las propiedades de los elementos recuperan sus valores normales.</msg>
  <msg name="WinJS.UI.Animation.dragSourceStart">Ejecuta una animación de inicio de arrastre. Utilice la animación dragSourceEnd para invertir los efectos de esta animación.</msg>
  <msg name="WinJS.UI.Animation.dragSourceStart_p:dragSource">Elemento o colección de elementos que se van a arrastrar. Al final de la animación, las propiedades de los elementos se modifican para reflejar el estado de arrastre.</msg>
  <msg name="WinJS.UI.Animation.dragSourceStart_p:affected">Elemento o colección de elementos que se van a resaltar para indicar que no se arrastran. Al final de la animación, las propiedades de los elementos se modifican para reflejar el estado de arrastre.</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd">Ejecuta una animación de fin de arrastre. Esto invierte el efecto de la animación dragSourceStart.</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd_p:dragSource">Elemento o colección de elementos que no se van a volver a arrastrar. Al final de la animación, las propiedades de los elementos recuperan sus valores normales.</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd_p:offset">Objeto de desplazamiento o matriz con una colección de objetos de desplazamiento opcional que describe el punto de inicio de la animación. Si el número de objetos de desplazamiento es menor que la longitud del parámetro dragSource, el último valor se repite para todos los elementos restantes. Si este parámetro se omite, se usa el valor predeterminado.</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd_p:affected">Elemento o colección de elementos que se han resaltado para indicar que no se arrastran. Al final de la animación, las propiedades de los elementos recuperan sus valores normales.</msg>
  <msg name="WinJS.UI.Animation.enterContent">Ejecuta una animación de entrada de contenido.</msg>
  <msg name="WinJS.UI.Animation.enterContent_p:incoming">Elemento o colección de elementos que representan el contenido entrante. Al final de la animación, la opacidad de los elementos es 1.</msg>
  <msg name="WinJS.UI.Animation.enterContent_p:offset">Objeto de desplazamiento o matriz con una colección de objetos de desplazamiento opcional que describe el punto de inicio de la animación. Si el número de objetos de desplazamiento es menor que la longitud del parámetro entrante, el último valor se repite para todos los elementos restantes. Si este parámetro se omite, se usa el valor predeterminado.</msg>
  <msg name="WinJS.UI.Animation.exitContent">Ejecuta una animación de salida de contenido.</msg>
  <msg name="WinJS.UI.Animation.exitContent_p:outgoing">Elemento o colección de elementos que representan el contenido saliente. Al final de la animación, la opacidad de los elementos es 0.</msg>
  <msg name="WinJS.UI.Animation.exitContent_p:offset">Objeto de desplazamiento o matriz con una colección de objetos de desplazamiento opcional que describe el punto final de la animación. Si el número de objetos de desplazamiento es menor que la longitud del parámetro saliente, el último valor se repite para todos los elementos restantes. Si este parámetro se omite, se usa el valor predeterminado.</msg>
  <msg name="WinJS.UI.Animation.dragBetweenEnter">Ejecuta una animación que indica que un objeto arrastrado se puede colocar entre otros elementos. Utilice la animación dragBetweenLeave para invertir los efectos de esta animación.</msg>
  <msg name="WinJS.UI.Animation.dragBetweenEnter_p:target">Elemento o colección de elementos (normalmente dos) entre los que se puede colocar el objeto arrastrado. Al final de la animación, las propiedades de los elementos se modifican para reflejar el estado de arrastrar y colocar entre.</msg>
  <msg name="WinJS.UI.Animation.dragBetweenLeave">Ejecuta una animación que indica que un objeto arrastrado no se volverá a colocar entre otros elementos. Esto invierte el efecto de la animación dragBetweenEnter.</msg>
  <msg name="WinJS.UI.Animation.dragBetweenLeave_p:target">Elemento o colección de elementos (normalmente dos) entre los cuales no se volverá a colocar el objeto arrastrado. Al final de la animación, las propiedades de los elementos se establecen en el estado dragSourceStart.</msg>
  <msg name="WinJS.UI.Animation.swipeSelect">Desliza un objeto seleccionado mediante un deslizamiento rápido hasta su posición original cuando se libera el puntero, y muestra la marca de selección.</msg>
  <msg name="WinJS.UI.Animation.swipeSelect_p:selected">Elemento o colección de elementos que se van a seleccionar. Al final de la animación, las propiedades de los elementos recuperan sus valores normales.</msg>
  <msg name="WinJS.UI.Animation.swipeSelect_p:selection">Elemento o colección de elementos que son la marca de la selección.</msg>
  <msg name="WinJS.UI.Animation.swipeDeselect">Desliza un objeto cuya selección se ha anulado mediante un deslizamiento rápido hasta su posición original cuando se libera el puntero, y oculta la marca de selección.</msg>
  <msg name="WinJS.UI.Animation.swipeDeselect_p:deselected">Elemento o colección de elementos cuya selección se va a anular. Al final de la animación, las propiedades de los elementos recuperan sus valores normales.</msg>
  <msg name="WinJS.UI.Animation.swipeReveal">Revela un objeto como resultado de un deslizamiento rápido, o desliza el objeto seleccionado mediante un deslizamiento rápido a su posición original después de la revelación.</msg>
  <msg name="WinJS.UI.Animation.swipeReveal_p:target">Elemento o colección de elementos que se van a seleccionar. Al final de la animación, las propiedades de los elementos se modifican para reflejar el desplazamiento especificado.</msg>
  <msg name="WinJS.UI.Animation.swipeReveal_p:offset">Objeto de desplazamiento o matriz con una colección de objetos de desplazamiento opcional que describe el punto final de la animación. Al mover el objeto de nuevo a la posición, el desplazamiento debe ser { top: "0px", left: "0px" }. Si el número de objetos de desplazamiento es menor que la longitud del parámetro de elemento, el último valor se repite para todos los elementos restantes. Si este parámetro se omite, se usa el valor predeterminado. El valor predeterminado describe el movimiento de una revelación.</msg>
  <msg name="WinJS.UI.Animation.enterPage">Ejecuta una animación enterPage.</msg>
  <msg name="WinJS.UI.Animation.enterPage_p:element">Elemento o colección de elementos que representan la página entrante. Al final de la animación, la opacidad de los elementos es 1.</msg>
  <msg name="WinJS.UI.Animation.exitPage">Ejecuta una animación exitPage.</msg>
  <msg name="WinJS.UI.Animation.exitPage_p:outgoing">Elemento o colección de elementos que representan la página saliente. Al final de la animación, la opacidad de los elementos es 0.</msg>
  <msg name="WinJS.UI.Animation.crossFade">Ejecuta una animación crossFade.</msg>
  <msg name="WinJS.UI.Animation.crossFade_p:incoming">Elemento entrante o colección de elementos entrantes. Al final de la animación, la opacidad de los elementos es 1.</msg>
  <msg name="WinJS.UI.Animation.crossFade_p:outgoing">Elemento saliente o colección de elementos salientes. Al final de la animación, la opacidad de los elementos es 0.</msg>
  <msg name="WinJS.UI.Animation.createPeekAnimation">Crea una animación Peek. Después de crear el objeto PeekAnimation, modifique el documento para mover los elementos a sus nuevas posiciones y llame al método execute en el objeto PeekAnimation.</msg>
  <msg name="WinJS.UI.Animation.createPeekAnimation_p:element">Elemento o colección de elementos que se reubicarán para la animación Peek.</msg>
  <msg name="WinJS.UI.Animation.createPeekAnimation_returnValue">Objeto PeekAnimation cuyo método execute devuelve un objeto Promise que se cumple cuando se completa la animación.</msg>
  <msg name="WinJS.UI.Animation.updateBadge">Ejecuta una animación updateBadge.</msg>
  <msg name="WinJS.UI.Animation.updateBadge_p:incoming">Elemento o colección de elementos que representan el distintivo entrante.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource._baseDataSourceConstructor">Inicializa la clase base VirtualizedDataSource de un origen de datos personalizado.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource._baseDataSourceConstructor_p:itemIndex">Objeto que implementa IListDataAdapter y proporciona datos al objeto VirtualizedDataSource.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource._baseDataSourceConstructor_p:options">Objeto que contiene propiedades que especifican opciones adicionales para el objeto VirtualizedDataSource: cacheSize: número que especifica el número mínimo de elementos no solicitados que se almacenarán en memoria caché por si se solicitan. El parámetro de opciones es opcional.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler">Implementación de IListDataNotificationHandler que se pasa al método IListDataAdapter.setNotificationHandler.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.invalidateAll">Notifica al objeto VirtualizedDataSource que algunos datos han cambiado, sin especificar cuáles. Quizá no sea práctico que algunos orígenes de datos llamen a este método para realizar alguno o todos los cambios, por lo que esta llamada es opcional. Pero si un adaptador de datos determinado nunca lo llama, la aplicación deberá llamar periódicamente a invalidateAll en el objeto VirtualizedDataSource para actualizar los datos.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.invalidateAll_returnValue">Objeto Promise que se cumple cuando los datos se han actualizado completamente y se han enviado todas las notificaciones de cambio.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.reload">Notifica al origen de datos de la lista que los datos de la lista han cambiado tanto que es mejor recargarlos desde el principio.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.beginNotifications">Indica el inicio de un lote de notificación. Llámelo antes de iniciar otra secuencia de llamadas de notificación para minimizar el número de notificaciones countChanged e indexChanged enviadas al cliente del objeto VirtualizedDataSource. Debe emparejarlo con una llamada a endNotifications, y los pares no se pueden anidar.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted">Genera una notificación de que se ha insertado un elemento.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:newItem">El elemento insertado. Debe tener una clave y una propiedad de datos (debe implementar la IItem).</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:previousKey">La clave del elemento situado delante del punto de inserción, o NULL si el elemento se ha insertado al principio de la lista. Puede ser NULL si especificó nextKey.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:nextKey">La clave del elemento situado después del punto de inserción, o NULL si el elemento se ha insertado al final de la lista. Puede ser NULL si especificó previousKey.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:index">El índice del elemento insertado.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.changed">Genera una notificación de que un elemento ha cambiado.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.changed_p:item">IItem que representa el elemento que ha cambiado.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved">Genera una notificación de que un elemento se ha movido.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:item">El elemento que se ha movido.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:previousKey">La clave del elemento situado delante del punto de inserción, o NULL si el elemento se ha movido al principio de la lista. Puede ser NULL si especificó nextKey.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:nextKey">La clave del elemento situado después del punto de inserción, o NULL si el elemento se ha movido al final de la lista. Puede ser NULL si especificó previousKey.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:oldIndex">El índice del elemento antes de que se moviera.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:newIndex">El índice del elemento después de haberse movido.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.removed">Genera una notificación de que un elemento se ha quitado.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.removed_p:key">La clave del elemento que se ha quitado.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.removed_p:index">El índice del elemento que se ha quitado.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.endNotifications">Finaliza una secuencia de notificaciones que comenzaban con una llamada a beginNotifications.</msg>
  <msg name="WinJS.UI.IListDataSource.createListBinding">Crea un objeto IListBinding que permite que un cliente lea la lista y reciba notificaciones de los cambios que afectan a las partes de la lista que el cliente ya ha leído.</msg>
  <msg name="WinJS.UI.IListDataSource.createListBinding_p:notificationHandler">Objeto que implementa la interfaz IListNotificationHandler. Si omite este parámetro, las notificaciones de cambio no estarán disponibles.</msg>
  <msg name="WinJS.UI.IListDataSource.createListBinding_returnValue">Objeto que implementa la interfaz IListBinding.</msg>
  <msg name="WinJS.UI.IListBinding">Interfaz que permite a un cliente leer la lista y recibir notificaciones de los cambios que afectan a las partes de la lista que el cliente ya ha leído. IListBinding también puede enumerar listas que pueden cambiar en cualquier momento.</msg>
  <msg name="WinJS.UI.IListBinding.jumpToItem">Hace que el elemento especificado sea el elemento actual.</msg>
  <msg name="WinJS.UI.IListBinding.jumpToItem_p:item">El objeto IItem o el objeto IItemPromise que se va a convertir en el elemento actual.</msg>
  <msg name="WinJS.UI.IListBinding.jumpToItem_returnValue">Objeto que implementa la interfaz IItemPromise y actúa como un compromiso para el elemento especificado. Si el elemento especificado no está en la lista, el compromiso se completa con un valor NULL.</msg>
  <msg name="WinJS.UI.IListBinding.current">Recupera el elemento actual.</msg>
  <msg name="WinJS.UI.IListBinding.current_returnValue">Objeto que implementa la interfaz IItemPromise y actúa como compromiso para el elemento actual. Si el cursor ha sobrepasado el principio o el final de la lista, el compromiso se completa con un valor NULL. Si se ha eliminado o se ha movido el elemento actual, el compromiso devuelve un error.</msg>
  <msg name="WinJS.UI.IListBinding.previous">Recupera el elemento situado delante del elemento actual y lo convierte en el elemento actual.</msg>
  <msg name="WinJS.UI.IListBinding.previous_returnValue">Objeto que implementa la interfaz IItemPromise y actúa como compromiso para el elemento anterior. Si el cursor sobrepasa el principio de la lista, el compromiso se completa con un valor NULL.</msg>
  <msg name="WinJS.UI.IListBinding.next">Recupera el elemento situado después del elemento actual y lo convierte en el elemento actual.</msg>
  <msg name="WinJS.UI.IListBinding.next_returnValue">Objeto que implementa la interfaz IItemPromise y actúa como compromiso para el elemento siguiente. Si el cursor sobrepasa el final de la lista, el compromiso se completa con un valor NULL.</msg>
  <msg name="WinJS.UI.IListBinding.releaseItem">Crea una solicitud para detener las notificaciones de cambio para el elemento especificado. El elemento se libera solo cuando el número de llamadas a Release coincide con el número de llamadas IItemPromise.retain. El número de llamadas a Release no puede superar el número de llamadas a Retain. Este método se muestra solo si pasó un objeto IListNotificationHandler a IListDataSource.createListBinding cuando creó este objeto IListBinding.</msg>
  <msg name="WinJS.UI.IListBinding.releaseItem_p:item">El objeto IItem o el objeto IItemPromise que se va a liberar.</msg>
  <msg name="WinJS.UI.IListBinding.release">Libera recursos, detiene notificaciones y cancela los compromisos pendientes para todos los elementos devueltos por este objeto IListBinding a los que se ha hecho un seguimiento.</msg>
  <msg name="WinJS.UI.IListBinding.first">Recupera el primer elemento de la lista y lo convierte en el elemento actual.</msg>
  <msg name="WinJS.UI.IListBinding.first_returnValue">Objeto IItemPromise que actúa como compromiso para el elemento solicitado. Si la lista está vacía, el objeto Promise se completa con un valor NULL.</msg>
  <msg name="WinJS.UI.IListBinding.last">Recupera el último elemento de la lista y lo convierte en el elemento actual.</msg>
  <msg name="WinJS.UI.IListBinding.fromKey">Recupera el elemento con la clave especificada y lo convierte en el elemento actual.</msg>
  <msg name="WinJS.UI.IListBinding.fromKey_p:key">La clave del elemento solicitado. Debe ser una cadena que no esté vacía.</msg>
  <msg name="WinJS.UI.IListBinding.fromKey_p:hints">Sugerencias específicas del dominio para el objeto IListDataAdapter sobre la ubicación del elemento para mejorar el tiempo de recuperación.</msg>
  <msg name="WinJS.UI.IListBinding.fromKey_returnValue">Objeto IItemPromise que actúa como compromiso para el elemento solicitado. Si la lista no contiene un elemento con la clave especificada, el objeto Promise se completa con un valor NULL.</msg>
  <msg name="WinJS.UI.IListBinding.fromIndex">Recupera el elemento con el índice especificado y lo convierte en el elemento actual.</msg>
  <msg name="WinJS.UI.IListBinding.fromIndex_p:index">Valor mayor o igual que 0 que es el índice del elemento que se va a recuperar.</msg>
  <msg name="WinJS.UI.IListBinding.fromIndex_returnValue">Objeto IItemPromise que actúa como compromiso para el elemento solicitado. Si la lista no contiene un elemento con el índice especificado, el objeto IItemPromise se completa con un valor NULL.</msg>
  <msg name="WinJS.UI.IListBinding.fromDescription">Recupera el elemento con la descripción especificada y lo convierte en el elemento actual.</msg>
  <msg name="WinJS.UI.IListDataSource.fromDescription_p:description">Descripción del elemento solicitado específica del dominio que debe interpretar el adaptador de datos de la lista.</msg>
  <msg name="WinJS.UI.IListDataSource.fromDescription_returnValue">Objeto Promise para el elemento solicitado. Si la lista no contiene un elemento con la descripción especificada, el objeto IItemPromise se completa con un valor NULL.</msg>
  <msg name="WinJS.UI.IListDataSource.invalidateAll">Hace que el origen de datos actualice los elementos almacenados en caché volviendo a solicitárselos al adaptador de datos. El origen de datos genera notificaciones si los datos han cambiado.</msg>
  <msg name="WinJS.UI.IListDataSource.invalidateAll_returnValue">Objeto Promise que se cumple cuando los datos se han actualizado completamente y se han enviado todas las notificaciones de cambio.</msg>
  <msg name="WinJS.UI.IListDataSource.getCount">Recupera el número de elementos del origen de datos.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromKey">Recupera el elemento con la clave especificada.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromKey_p:hints">Sugerencias específicas del dominio para IListDataAdapter sobre la ubicación del elemento para mejorar el tiempo de recuperación.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromKey_returnValue">Objeto Promise para el elemento solicitado. Si la lista no contiene un elemento con la clave especificada, el objeto Promise se completa con un valor NULL.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromIndex">Recupera el elemento que se encuentra en el índice especificado.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromIndex_p:index">Valor mayor o igual que cero que es el índice del elemento solicitado.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromIndex_returnValue">Objeto Promise para el elemento solicitado. Si la lista no contiene un elemento con el índice especificado, el objeto Promise se completa con un valor NULL.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromDescription">Recupera el elemento con la descripción especificada.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromDescription_p:description">Información específica del dominio que describe el elemento que se va a recuperar y que interpretará el objeto IListDataAdapter</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromDescription_returnValue">Objeto Promise para el elemento solicitado. Si la lista no contiene un elemento con la descripción especificada, el objeto Promise se completa con un valor NULL.</msg>
  <msg name="WinJS.UI.IListDataSource.beginEdits">Notifica al origen de datos que una secuencia de ediciones está a punto de comenzar. El origen de datos llama una vez al método IListNotificationHandler.beginNotifications y una vez al método endNotifications para una secuencia de ediciones.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart">Agrega un elemento al principio del origen de datos.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart_p:key">La clave del elemento que se va a insertar, si se conoce; en caso contrario, NULL.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart_p:data">Los datos del elemento que se va a agregar.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart_returnValue">Objeto Promise que contiene el objeto IItem que se agregó o un objeto EditError si se ha producido un error.</msg>
  <msg name="WinJS.UI.IListDataSource.insertBefore">Inserta un elemento delante de otro elemento.</msg>
  <msg name="WinJS.UI.IListDataSource.insertBefore_p:data">Los datos del elemento que se va a insertar.</msg>
  <msg name="WinJS.UI.IListDataSource.insertBefore_p:nextKey">La clave de un elemento del origen de datos. Los nuevos datos se insertan delante de este elemento.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAfter">Inserta un elemento después de otro elemento.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAfter_p:previousKey">La clave de un elemento del origen de datos. El nuevo elemento se agrega después de este elemento.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtEnd">Agrega un elemento al final del origen de datos.</msg>
  <msg name="WinJS.UI.IListDataSource.change">Sobrescribe los datos del elemento especificado.</msg>
  <msg name="WinJS.UI.IListDataSource.change_p:key">La clave del elemento que se va a reemplazar.</msg>
  <msg name="WinJS.UI.IListDataSource.change_p:newData">Los nuevo datos para el elemento.</msg>
  <msg name="WinJS.UI.IListDataSource.change_returnValue">Objeto Promise que contiene el objeto IItem que se actualizó o un objeto EditError si se ha producido un error.</msg>
  <msg name="WinJS.UI.IListDataSource.moveToStart">Mueve el elemento especificado al principio del origen de datos.</msg>
  <msg name="WinJS.UI.IListDataSource.moveToStart_p:key">La clave del elemento que se va a mover.</msg>
  <msg name="WinJS.UI.IListDataSource.moveToStart_returnValue">Objeto Promise que contiene el objeto IItem que se movió o un objeto EditError si se ha producido un error.</msg>
  <msg name="WinJS.UI.IListDataSource.moveBefore">Mueve el elemento especificado delante de otro elemento.</msg>
  <msg name="WinJS.UI.IListDataSource.moveBefore_p:nextKey">La clave de otro elemento del origen de datos. El elemento especificado por el parámetro de clave se mueve a una posición justo delante de este elemento.</msg>
  <msg name="WinJS.UI.IListDataSource.moveAfter">Mueve un elemento después de otro elemento.</msg>
  <msg name="WinJS.UI.IListDataSource.moveAfter_p:previousKey">La clave de otro elemento del origen de datos. El elemento especificado por el parámetro de clave se mueve a una posición justo detrás de este elemento.</msg>
  <msg name="WinJS.UI.IListDataSource.moveToEnd">Mueve un elemento al final del origen de datos.</msg>
  <msg name="WinJS.UI.IListDataSource.remove">Quita un elemento del origen de datos.</msg>
  <msg name="WinJS.UI.IListDataSource.remove_p:key">Clave del elemento que se va a quitar.</msg>
  <msg name="WinJS.UI.IListDataSource.remove_returnValue">Objeto Promise que no contiene nada si la operación se realizó correctamente o un objeto EditError si se ha producido un error.</msg>
  <msg name="WinJS.UI.IListDataSource.endEdits">Notifica al origen de datos que una secuencia de ediciones ha finalizado. El origen de datos llamará una vez al método IListNotificationHandler.beginNotifications y una vez al método endNotifications para una secuencia de ediciones.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource">Utilícelo como clase base al definir un origen de datos personalizado. No cree instancias directamente.</msg>
  <msg name="WinJS.UI.computeDataSourceGroups">Devuelve un origen de datos que agrega información de grupo a los elementos de otro origen de datos. La propiedad "groups" de este origen de datos se evalúa en otro origen de datos que enumera los propios grupos.</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:listDataSource">El origen de datos de los elementos individuales que se van a agrupar.</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:groupKey">Función de devolución de llamada que toma un elemento de la lista como argumento. Se llama a la función para cada elemento de la lista y se devuelve la clave de grupo del elemento como cadena.</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:groupData">Función de devolución de llamada que toma un elemento del objeto IListDataSource como argumento. La función se llama en un elemento en cada grupo y devuelve un objeto que representa el encabezado de ese grupo.</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:options">Objeto que puede contener propiedades que especifican opciones adicionales: groupCountEstimate: valor numérico que es la estimación inicial para el número de grupos. Si especifica -1, esta función no devuelve ningún resultado hasta que se haya determinado el número real de grupos. batchSize: número mayor que 0 que especifica el número de elementos que se deben capturar en cada paso del procesamiento cuando se buscan grupos. (Además del número especificado, siempre se incluye un elemento del lote anterior).</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_returnValue">Objeto IListDataSource que contiene los elementos del origen de datos original y proporciona información adicional del grupo en una propiedad "groups". La propiedad "groups" devuelve otro objeto IListDataSource que enumera los distintos grupos de la lista.</msg>
  <msg name="WinJS.UI.StorageDataSource.loadThumbnail">Devuelve un compromiso para un elemento de imagen que se cumple cuando la miniatura de calidad total del elemento proporcionado se dibuja en el elemento de imagen.</msg>
  <msg name="WinJS.UI.StorageDataSource.loadThumbnail_p:item">El elemento para el que se va recuperar una miniatura.</msg>
  <msg name="WinJS.UI.StorageDataSource.loadThumbnail_p:image">El elemento de imagen que se va a utilizar. Si no se proporciona, se crea un nuevo elemento de imagen.</msg>
  <msg name="WinJS.UI.BrowseMode.selectionchanging.setPromise">Se utiliza para informar a ListView de que se está realizando el trabajo asincrónico, y de que este controlador de eventos no debe considerarse como completado hasta que se cumpla el compromiso.</msg>
  <msg name="WinJS.UI.BrowseMode.selectionchanging.setPromise_p:promise">El compromiso que se espera.</msg>
  <msg name="WinJS.UI.Layout.constructor">Crea una nuevo objeto Layout.</msg>
  <msg name="WinJS.UI.Layout.constructor_p:options">El conjunto de opciones que se aplicarán inicialmente al nuevo objeto Layout.</msg>
  <msg name="WinJS.UI.Layout.constructor_returnValue">El nuevo objeto Layout.</msg>
  <msg name="WinJS.UI.ListView.SelectionMode">Especifica el modo de selección para un objeto ListView.</msg>
  <msg name="WinJS.UI.ListView.SelectionMode.none">No se puede seleccionar ningún elemento.</msg>
  <msg name="WinJS.UI.ListView.SelectionMode.single">Se puede seleccionar un único elemento.</msg>
  <msg name="WinJS.UI.ListView.SelectionMode.multi">Se pueden seleccionar varios elementos.</msg>
  <msg name="WinJS.UI.ListView.TapBehavior">Especifica cómo responden los elementos de un objeto ListView a la interacción de punteo.</msg>
  <msg name="WinJS.UI.ListView.TapBehavior.directSelect">Cuando se puntea el elemento, se invoca y se selecciona. Navegar al elemento con el teclado cambia la selección de modo que el elemento que tiene el foco es el único elemento seleccionado.</msg>
  <msg name="WinJS.UI.ListView.TapBehavior.toggleSelect">Cuando se puntea el elemento, se invoca. Si el elemento está seleccionado, al puntearlo se borra la selección. Si el elemento no está seleccionado, al puntearlo, se selecciona. Al navegar al elemento con el teclado, este ni se selecciona ni se invoca.</msg>
  <msg name="WinJS.UI.ListView.TapBehavior.invokeOnly">Cuando se puntea el elemento, se invoca. Al navegar al elemento con el teclado, este ni se selecciona ni se invoca.</msg>
  <msg name="WinJS.UI.ListView.TapBehavior.none">No ocurre nada.</msg>
  <msg name="WinJS.UI.ListView.SwipeBehavior">Especifica si los elementos se seleccionan cuando el usuario realiza una interacción de deslizar rápidamente.</msg>
  <msg name="WinJS.UI.ListView.SwipeBehavior.select">La interacción de deslizar rápidamente selecciona los elementos que se tocan durante la misma.</msg>
  <msg name="WinJS.UI.ListView.SwipeBehavior.none">La interacción de deslizar rápidamente no cambia los elementos que se seleccionan.</msg>
  <msg name="WinJS.UI.ListView.ListViewAnimationType">Especifica si la animación ListView es una animación de entrada o una animación de transición.</msg>
  <msg name="WinJS.UI.ListView.ListViewAnimationType.entrance">La animación se reproduce cuando el objeto ListView se muestra por primera vez.</msg>
  <msg name="WinJS.UI.ListView.ListViewAnimationType.contentTransition">La animación se reproduce cuando el objeto ListView cambia su contenido.</msg>
  <msg name="WinJS.UI._Selection.prototype.selectAll">Agrega todos los elementos del objeto ListView a la selección.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.count">Devuelve el número de elementos de la selección.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.count_returnValue">El número de elementos de la selección.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getIndices">Devuelve una lista de los índices de los elementos existentes en la selección.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getIndices_returnValue">La lista de índices de los elementos de la selección como matriz de objetos Number.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getItems">Devuelve una matriz que contiene los elementos de la selección.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getItems_returnValue">Objeto Promise que contiene una matriz de los objetos IItem solicitados.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getRanges">Obtiene una matriz de los intervalos de índices de los elementos seleccionados.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getRanges_returnValue">Matriz que contiene un objeto ISelectionRange para cada intervalo del índice de la selección.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.isEverything">Devuelve un valor que indica si la selección contiene cada elemento del origen de datos.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.isEverything_returnValue">true si la selección contiene cada elemento del origen de datos; en caso contrario, false.</msg>
  <msg name="WinJS.UI.AppBarIcon">La enumeración AppBarIcon proporciona un conjunto de glifos para usarlos con la propiedad de icono AppBarCommand.</msg>
  <msg name="WinJS.UI.SettingsFlyout.show_static">Activa la ventana de acceso a la configuración.</msg>
  <msg name="WinJS.UI.SettingsFlyout.populateSettings">Rellena los comandos de configuración que se mostrarán en la ventana de acceso a la configuración.</msg>
  <msg name="WinJS.UI.SettingsFlyout.showSettings_p:e">El objeto de evento que contiene la matriz de comandos de configuración que se mostrarán en la ventana de acceso a la configuración.</msg>
  <msg name="WinJS.UI.SettingsFlyout.showSettings">Muestra el objeto SettingsFlyout usando la ruta de acceso de la página que contiene el elemento de configuración y el identificador del elemento de configuración.</msg>
</messagebundle>