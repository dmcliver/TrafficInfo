<?xml version="1.0" encoding="utf-8"?>
<api version="1.0" spec="1.0" xmlns:blend="http://schemas.microsoft.com/winjs/Blend/2011" xmlns="http://openajax.org/metadata">
  <author name="Microsoft Corporation" />
  <class name="WinJS.UI.VirtualizedDataSource">
    <properties />
    <events />
    <methods />
  </class>
  <class name="WinJS.UI._GroupDataSource">
    <ancestor datatype="UI.VirtualizedDataSource" />
    <properties>
      <property name="supportedForProcessing" required="false" />
    </properties>
    <events />
    <methods />
  </class>
  <class name="WinJS.UI.StorageDataSource">
    <ancestor datatype="WinJS.UI.VirtualizedDataSource" />
    <constructor>
      <description locid="WinJS.UI.StorageDataSource" type="text/plain">Creates a data source that enumerates an IStorageQueryResultBase.</description>
      <parameter name="query" datatype="Windows.Storage.Search.IStorageQueryResultBase">
        <description locid="WinJS.UI.StorageDataSource_p:query" type="text/plain">The object to enumerate. It must support IStorageQueryResultBase.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description locid="WinJS.UI.StorageDataSource_p:options" type="text/plain">An object that specifies options for the data source. This parameter is optional. It can contain these properties: 

 mode:
 A Windows.Storage.FileProperties.ThumbnailMode - a value that specifies whether to request
 thumbnails and the type of thumbnails to request.

 requestedThumbnailSize:
 A Number that specifies the size of the thumbnails.

 thumbnailOptions:
 A Windows.Storage.FileProperties.ThumbnailOptions value that specifies additional options for the thumbnails.

 waitForFileLoad:
 If you set this to true, the data source returns items only after it loads their properties and thumbnails.</description>
      </parameter>
      <returnType datatype="*" />
    </constructor>
    <properties>
      <property name="supportedForProcessing" required="false" />
    </properties>
    <events />
    <methods>
      <method name="loadThumbnail">
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="WinJS.UI._VersionManager">
    <properties>
      <property name="locked" required="false" />
      <property name="noOutstandingNotifications" required="false" />
      <property name="version" required="false" />
      <property name="unlocked" required="false" />
      <property name="supportedForProcessing" required="false" />
    </properties>
    <events />
    <methods>
      <method name="beginUpdating">
        <returnType datatype="*" />
      </method>
      <method name="endUpdating">
        <returnType datatype="*" />
      </method>
      <method name="beginNotifications">
        <returnType datatype="*" />
      </method>
      <method name="endNotifications">
        <returnType datatype="*" />
      </method>
      <method name="receivedNotification">
        <returnType datatype="*" />
      </method>
      <method name="cancelOnNotification">
        <returnType datatype="*" />
      </method>
      <method name="clearCancelOnNotification">
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="WinJS.UI.FlipView">
    <description locid="WinJS.UI.FlipView" type="text/plain">Displays a collection, such as a set of photos, one item at a time.</description>
    <constructor>
      <description locid="WinJS.UI.FlipView.constructor" type="text/plain">Creates a new FlipView.</description>
      <parameter name="element" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.FlipView.constructor_p:element" type="text/plain">The DOM element that hosts the control.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description locid="WinJS.UI.FlipView.constructor_p:options" type="text/plain">An object that contains one or more property/value pairs to apply to the new control. 
 Each property of the options object corresponds to one of the control's properties or events. 
 Event names must begin with "on". For example, to provide a handler for the pageselected event,  
 add a property named "onpageselected" to the options object and set its value to the event handler.  
 This parameter is optional.</description>
      </parameter>
      <returnType datatype="WinJS.UI.FlipView">
        <description locid="WinJS.UI.FlipView.constructor_returnValue" type="text/plain">The new FlipView control.</description>
      </returnType>
    </constructor>
    <properties>
      <property name="element" datatype="HTMLElement" required="false" hidden="true">
        <description locid="WinJS.UI.FlipView.element" type="text/plain">The DOM element that hosts the FlipView control.</description>
      </property>
      <property name="currentPage" datatype="Number" isInteger="true" required="false" minimum="0">
        <description locid="WinJS.UI.FlipView.currentPage" type="text/plain">Gets or sets the index of the currently displayed page. The minimum value is 0 and the maximum value is one less than the total number of items returned by the data source.</description>
      </property>
      <property name="orientation" datatype="WinJS.UI.FlipView.orientation" required="false">
        <description locid="WinJS.UI.FlipView.orientation" type="text/plain">Gets or sets the layout orientation of the FlipView, horizontal or vertical.</description>
      </property>
      <property name="itemDataSource" datatype="object" required="false">
        <description locid="WinJS.UI.FlipView.itemDataSource" type="text/plain">Gets or sets the data source that provides the FlipView with items to display. 
 The FlipView displays one item at a time, each on its own page.</description>
      </property>
      <property name="itemTemplate" datatype="Function" required="false" blend:potentialValueSelector="[data-win-control='WinJS.Binding.Template']">
        <description locid="WinJS.UI.FlipView.itemTemplate" type="text/plain">Gets or sets a WinJS.Binding.Template or a function that defines the HTML for each item's page.</description>
      </property>
      <property name="itemSpacing" datatype="Number" isInteger="true" required="false">
        <description locid="WinJS.UI.FlipView.itemSpacing" type="text/plain">Gets or sets the spacing between items, in pixels.</description>
      </property>
    </properties>
    <events>
      <event name="datasourcecountchanged" p5:bubbles="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.FlipView_e:datasourcecountchanged" type="text/plain">Raised when the number of items in the itemDataSource changes.</description>
      </event>
      <event name="pagevisibilitychanged" p5:bubbles="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.FlipView_e:pagevisibilitychanged" type="text/plain">Raised when a FlipView page becomes visible or invisible.</description>
      </event>
      <event name="pageselected" p5:bubbles="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.FlipView_e:pageselected" type="text/plain">Raised when the FlipView flips to a page.</description>
      </event>
      <event name="pagecompleted" p5:bubbles="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.FlipView_e:pagecompleted" type="text/plain">Raised when the FlipView flips to a page and its renderer function completes.</description>
      </event>
    </events>
    <methods>
      <method name="next">
        <description locid="WinJS.UI.FlipView.next" type="text/plain">Navigates to the next item.</description>
        <returnType datatype="Boolean">
          <description locid="WinJS.UI.FlipView.next_returnValue" type="text/plain">true if the FlipView begins navigating to the next page; 
 false if the FlipView is at the last page or is in the middle of another navigation animation.</description>
        </returnType>
      </method>
      <method name="previous">
        <description locid="WinJS.UI.FlipView.previous" type="text/plain">Navigates to the previous item.</description>
        <returnType datatype="Boolean">
          <description locid="WinJS.UI.FlipView.previous_returnValue" type="text/plain">true if FlipView begins navigating to the previous page; 
 false if the FlipView is already at the first page or is in the middle of another navigation animation.</description>
        </returnType>
      </method>
      <method name="count">
        <description locid="WinJS.UI.FlipView.count" type="text/plain">Returns the number of items in the FlipView object's itemDataSource.</description>
        <returnType datatype="WinJS.Promise">
          <description locid="WinJS.UI.FlipView.count_returnValue" type="text/plain">A Promise that contains the number of items in the list 
 or WinJS.UI.CountResult.unknown if the count is unavailable.</description>
        </returnType>
      </method>
      <method name="setCustomAnimations">
        <description locid="WinJS.UI.FlipView.setCustomAnimations" type="text/plain">Sets custom animations for the FlipView to use when navigating between pages.</description>
        <parameter name="animations" datatype="Object">
          <description locid="WinJS.UI.FlipView.setCustomAnimations_p:animations" type="text/plain">An object containing up to three fields, one for each navigation action: next, previous, and jump
 Each of those fields must be a function with this signature: function (outgoingPage, incomingPage).
 This function returns a WinJS.Promise object that completes once the animations are finished.
 If a field is null or undefined, the FlipView reverts to its default animation for that action.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="forceLayout">
        <description locid="WinJS.UI.FlipView.forceLayout" type="text/plain">Forces the FlipView to update its layout. 
 Use this function when making the FlipView visible again after its style.display property had been set to "none".</description>
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="WinJS.UI._FlipPageManager">
    <properties>
      <property name="supportedForProcessing" required="false" />
    </properties>
    <events />
    <methods>
      <method name="initialize">
        <returnType datatype="*" />
      </method>
      <method name="setOrientation">
        <returnType datatype="*" />
      </method>
      <method name="resetState">
        <returnType datatype="*" />
      </method>
      <method name="setNewItemsManager">
        <returnType datatype="*" />
      </method>
      <method name="currentIndex">
        <returnType datatype="*" />
      </method>
      <method name="resetScrollPos">
        <returnType datatype="*" />
      </method>
      <method name="scrollPosChanged">
        <returnType datatype="*" />
      </method>
      <method name="itemRetrieved">
        <returnType datatype="*" />
      </method>
      <method name="resized">
        <returnType datatype="*" />
      </method>
      <method name="jumpToIndex">
        <returnType datatype="*" />
      </method>
      <method name="startAnimatedNavigation">
        <returnType datatype="*" />
      </method>
      <method name="endAnimatedNavigation">
        <returnType datatype="*" />
      </method>
      <method name="startAnimatedJump">
        <returnType datatype="*" />
      </method>
      <method name="endAnimatedJump">
        <returnType datatype="*" />
      </method>
      <method name="inserted">
        <returnType datatype="*" />
      </method>
      <method name="changed">
        <returnType datatype="*" />
      </method>
      <method name="moved">
        <returnType datatype="*" />
      </method>
      <method name="removed">
        <returnType datatype="*" />
      </method>
      <method name="reload">
        <returnType datatype="*" />
      </method>
      <method name="getItemSpacing">
        <returnType datatype="*" />
      </method>
      <method name="setItemSpacing">
        <returnType datatype="*" />
      </method>
      <method name="notificationsStarted">
        <returnType datatype="*" />
      </method>
      <method name="notificationsEnded">
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="WinJS.UI.Layout">
    <properties />
    <events />
    <methods />
  </class>
  <class name="WinJS.UI._LayoutCommon">
    <ancestor datatype="WinJS.UI.Layout" />
    <properties>
      <property name="disableBackdrop" datatype="Boolean" required="false">
        <description locid="WinJS.UI._LayoutCommon.disableBackdrop" type="text/plain">Gets or sets a value that indicates whether the layout should disable the backdrop feature
 which avoids blank areas while panning in a virtualized list.</description>
      </property>
      <property name="backdropColor" datatype="String" required="false">
        <description locid="WinJS.UI._LayoutCommon.backdropColor" type="text/plain">Gets or sets the fill color for the default pattern used for the backdrops.
 The default value is "rgba(155,155,155,0.23)".</description>
      </property>
      <property name="itemInfo" datatype="Function" required="false">
        <description locid="WinJS.UI._LayoutCommon.itemInfo" type="text/plain">Determines the size of the item and whether
 the item should be placed in a new column.</description>
      </property>
      <property name="groupInfo" datatype="Function" required="false">
        <description locid="WinJS.UI._LayoutCommon.groupInfo" type="text/plain">Indicates whether a group has variable-sized items.</description>
      </property>
    </properties>
    <events />
    <methods>
      <method name="init">
        <description locid="WinJS.UI._LayoutCommon.init" type="text/plain">This method supports the Windows Library for JavaScript infrastructure and is not intended to be used directly from your code.</description>
        <returnType datatype="*" />
      </method>
      <method name="setSite">
        <description locid="WinJS.UI._LayoutCommon.init" type="text/plain">This method supports the Windows Library for JavaScript infrastructure and is not intended to be used directly from your code.</description>
        <parameter name="layoutSite">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="reset">
        <returnType datatype="*" />
      </method>
      <method name="getKeyboardNavigatedItem">
        <description locid="WinJS.UI._LayoutCommon.init" type="text/plain">This method supports the Windows Library for JavaScript infrastructure and is not intended to be used directly from your code.</description>
        <parameter name="itemIndex">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <parameter name="element">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <parameter name="keyPressed">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="updateBackdrop">
        <description locid="WinJS.UI._LayoutCommon.init" type="text/plain">This method supports the Windows Library for JavaScript infrastructure and is not intended to be used directly from your code.</description>
        <parameter name="count">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="WinJS.UI.GridLayout">
    <ancestor datatype="WinJS.UI._LayoutCommon" />
    <constructor>
      <description locid="WinJS.UI.GridLayout" type="text/plain">Creates a new GridLayout.</description>
      <parameter name="options" datatype="Object">
        <description locid="WinJS.UI.GridLayout_p:options" type="text/plain">The set of properties and values to apply to the new GridLayout.</description>
      </parameter>
      <returnType datatype="WinJS.UI.GridLayout">
        <description locid="WinJS.UI.GridLayout_returnValue" type="text/plain">The new GridLayout.</description>
      </returnType>
    </constructor>
    <properties>
      <property name="horizontal" datatype="Boolean" required="false" hidden="true">
        <description locid="WinJS.UI.GridLayout.horizontal" type="text/plain">Gets a value that indicates whether items are laid out horizontally.
 This property always returns true for GridLayout.</description>
      </property>
      <property name="groupHeaderPosition" datatype="WinJS.UI.GridLayout.HeaderPosition" required="false">
        <description locid="WinJS.UI.GridLayout.groupHeaderPosition" type="text/plain">Gets or sets the position of group headers relative to their items.
 The default value is "top".</description>
      </property>
      <property name="maxRows" datatype="Number" isInteger="true" required="false">
        <description locid="WinJS.UI.GridLayout.maxRows" type="text/plain">The maximum number of rows that the ListView displays.</description>
      </property>
    </properties>
    <events />
    <methods>
      <method name="startLayout">
        <returnType datatype="*" />
      </method>
      <method name="getScrollbarRange">
        <returnType datatype="*" />
      </method>
      <method name="getKeyboardNavigatedItem">
        <description locid="WinJS.UI._LayoutCommon.init" type="text/plain">This method supports the Windows Library for JavaScript infrastructure and is not intended to be used directly from your code.</description>
        <parameter name="itemIndex">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <parameter name="element">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <parameter name="keyPressed">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="prepareItem">
        <returnType datatype="*" />
      </method>
      <method name="prepareHeader">
        <description locid="WinJS.UI._LayoutCommon.init" type="text/plain">This method supports the Windows Library for JavaScript infrastructure and is not intended to be used directly from your code.</description>
        <parameter name="element">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="releaseItem">
        <description locid="WinJS.UI._LayoutCommon.init" type="text/plain">This method supports the Windows Library for JavaScript infrastructure and is not intended to be used directly from your code.</description>
        <parameter name="item">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <parameter name="newItem">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="layoutItem">
        <returnType datatype="*" />
      </method>
      <method name="layoutHeader">
        <description locid="WinJS.UI._LayoutCommon.init" type="text/plain">This method supports the Windows Library for JavaScript infrastructure and is not intended to be used directly from your code.</description>
        <parameter name="groupIndex">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <parameter name="element">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="endLayout">
        <returnType datatype="*" />
      </method>
      <method name="calculateFirstVisible">
        <description locid="WinJS.UI._LayoutCommon.init" type="text/plain">This method supports the Windows Library for JavaScript infrastructure and is not intended to be used directly from your code.</description>
        <parameter name="beginScrollPosition">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <parameter name="wholeItem">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="calculateLastVisible">
        <description locid="WinJS.UI._LayoutCommon.init" type="text/plain">This method supports the Windows Library for JavaScript infrastructure and is not intended to be used directly from your code.</description>
        <parameter name="endScrollPosition">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <parameter name="wholeItem">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="hitTest">
        <description locid="WinJS.UI._LayoutCommon.init" type="text/plain">This method supports the Windows Library for JavaScript infrastructure and is not intended to be used directly from your code.</description>
        <parameter name="x">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <parameter name="y">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="getItemPosition">
        <description locid="WinJS.UI._LayoutCommon.init" type="text/plain">This method supports the Windows Library for JavaScript infrastructure and is not intended to be used directly from your code.</description>
        <parameter name="itemIndex">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="itemsAdded">
        <description locid="WinJS.UI._LayoutCommon.init" type="text/plain">This method supports the Windows Library for JavaScript infrastructure and is not intended to be used directly from your code.</description>
        <parameter name="elements">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="itemsRemoved">
        <description locid="WinJS.UI._LayoutCommon.init" type="text/plain">This method supports the Windows Library for JavaScript infrastructure and is not intended to be used directly from your code.</description>
        <parameter name="elements">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="itemsMoved">
        <description locid="WinJS.UI._LayoutCommon.init" type="text/plain">This method supports the Windows Library for JavaScript infrastructure and is not intended to be used directly from your code.</description>
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="WinJS.UI._ItemsPool">
    <ancestor datatype="WinJS.UI._ElementsPool" />
    <properties>
      <property name="supportedForProcessing" required="false" />
    </properties>
    <events />
    <methods>
      <method name="setUpItem">
        <returnType datatype="*" />
      </method>
      <method name="prepareForReuse">
        <returnType datatype="*" />
      </method>
      <method name="resetItem">
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="WinJS.UI.ListLayout">
    <ancestor datatype="WinJS.UI._LayoutCommon" />
    <constructor>
      <description locid="WinJS.UI.ListLayout" type="text/plain">Creates a new ListLayout object.</description>
      <parameter name="options" datatype="Object">
        <description locid="WinJS.UI.ListLayout_p:options" type="text/plain">The set of properties and values to apply to the new ListLayout.</description>
      </parameter>
      <returnType datatype="WinJS.UI.ListLayout">
        <description locid="WinJS.UI.ListLayout_returnValue" type="text/plain">The new ListLayout object.</description>
      </returnType>
    </constructor>
    <properties>
      <property name="horizontal" datatype="Boolean" required="false" hidden="true">
        <description locid="WinJS.UI.ListLayout.horizontal" type="text/plain">Gets a value that indicates whether items are laid out horizontally.
 This property always returns false for ListLayout.</description>
      </property>
    </properties>
    <events />
    <methods>
      <method name="getKeyboardNavigatedItem">
        <description locid="WinJS.UI.ListLayout.getKeyboardNavigatedItem" type="text/plain">This API supports the Windows Library for JavaScript infrastructure and is not intended to be used directly from your code.</description>
        <parameter name="itemIndex">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <parameter name="element">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <parameter name="keyPressed">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="setSite">
        <description locid="WinJS.UI.ListLayout.getKeyboardNavigatedItem" type="text/plain">This API supports the Windows Library for JavaScript infrastructure and is not intended to be used directly from your code.</description>
        <parameter name="layoutSite">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="getScrollbarRange">
        <returnType datatype="*" />
      </method>
      <method name="getItemPosition">
        <description locid="WinJS.UI.ListLayout.getKeyboardNavigatedItem" type="text/plain">This API supports the Windows Library for JavaScript infrastructure and is not intended to be used directly from your code.</description>
        <parameter name="itemIndex">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="startLayout">
        <returnType datatype="*" />
      </method>
      <method name="prepareItem">
        <returnType datatype="*" />
      </method>
      <method name="prepareHeader">
        <description locid="WinJS.UI.ListLayout.getKeyboardNavigatedItem" type="text/plain">This API supports the Windows Library for JavaScript infrastructure and is not intended to be used directly from your code.</description>
        <parameter name="element">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="releaseItem">
        <description locid="WinJS.UI.ListLayout.getKeyboardNavigatedItem" type="text/plain">This API supports the Windows Library for JavaScript infrastructure and is not intended to be used directly from your code.</description>
        <parameter name="item">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <parameter name="newItem">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="layoutItem">
        <returnType datatype="*" />
      </method>
      <method name="layoutHeader">
        <description locid="WinJS.UI.ListLayout.getKeyboardNavigatedItem" type="text/plain">This API supports the Windows Library for JavaScript infrastructure and is not intended to be used directly from your code.</description>
        <parameter name="groupIndex">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <parameter name="element">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="itemsAdded">
        <description locid="WinJS.UI.ListLayout.getKeyboardNavigatedItem" type="text/plain">This API supports the Windows Library for JavaScript infrastructure and is not intended to be used directly from your code.</description>
        <parameter name="elements">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="itemsRemoved">
        <description locid="WinJS.UI.ListLayout.getKeyboardNavigatedItem" type="text/plain">This API supports the Windows Library for JavaScript infrastructure and is not intended to be used directly from your code.</description>
        <parameter name="elements">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="itemsMoved">
        <description locid="WinJS.UI.ListLayout.getKeyboardNavigatedItem" type="text/plain">This API supports the Windows Library for JavaScript infrastructure and is not intended to be used directly from your code.</description>
        <returnType datatype="*" />
      </method>
      <method name="endLayout">
        <returnType datatype="*" />
      </method>
      <method name="calculateFirstVisible">
        <description locid="WinJS.UI.ListLayout.getKeyboardNavigatedItem" type="text/plain">This API supports the Windows Library for JavaScript infrastructure and is not intended to be used directly from your code.</description>
        <parameter name="beginScrollPosition">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <parameter name="wholeItem">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="calculateLastVisible">
        <description locid="WinJS.UI.ListLayout.getKeyboardNavigatedItem" type="text/plain">This API supports the Windows Library for JavaScript infrastructure and is not intended to be used directly from your code.</description>
        <parameter name="endScrollPosition">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <parameter name="wholeItem">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="hitTest">
        <description locid="WinJS.UI.ListLayout.getKeyboardNavigatedItem" type="text/plain">This API supports the Windows Library for JavaScript infrastructure and is not intended to be used directly from your code.</description>
        <parameter name="x">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <parameter name="y">
          <description locid="WinJS.UI._LayoutCommon.setSite_p:layoutSite" type="text/plain"></description>
        </parameter>
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="WinJS.UI.ListView">
    <description locid="WinJS.UI.ListView" type="text/plain">Displays items in a customizable list or grid.</description>
    <constructor>
      <description locid="WinJS.UI.ListView.constructor" type="text/plain">Creates a new ListView.</description>
      <parameter name="element" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.ListView.constructor_p:element" type="text/plain">The DOM element that hosts the ListView control.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description locid="WinJS.UI.ListView.constructor_p:options" type="text/plain">An object that contains one or more property/value pairs to apply to the new control. 
 Each property of the options object corresponds to one of the control's properties or events. 
 Event names must begin with "on". For example, to provide a handler for the selectionchanged event,  
 add a property named "onselectionchanged" to the options object and set its value to the event handler.</description>
      </parameter>
      <returnType datatype="WinJS.UI.ListView">
        <description locid="WinJS.UI.ListView.constructor_returnValue" type="text/plain">The new ListView.</description>
      </returnType>
    </constructor>
    <properties>
      <property name="element" datatype="HTMLElement" required="false" hidden="true">
        <description locid="WinJS.UI.ListView.element" type="text/plain">Gets the DOM element that hosts the ListView.</description>
      </property>
      <property name="layout" datatype="WinJS.UI.Layout" required="false">
        <description locid="WinJS.UI.ListView.layout" type="text/plain">Gets or sets an object that controls the layout of the ListView.</description>
      </property>
      <property name="pagesToLoad" datatype="Number" isInteger="true" required="false" blend:isAdvanced="true">
        <description locid="WinJS.UI.ListView.pagesToLoad" type="text/plain">Gets or sets the number of pages to load when the user scrolls beyond the 
 threshold specified by the pagesToLoadThreshold property if
 the loadingBehavior property is set to incremental.</description>
      </property>
      <property name="pagesToLoadThreshold" datatype="Number" isInteger="true" required="false" blend:isAdvanced="true">
        <description locid="WinJS.UI.ListView.pagesToLoadThreshold" type="text/plain">Gets or sets the threshold (in pages) for initiating an incremental load. When the last visible item is 
 within the specified number of pages from the end of the loaded portion of the list, 
 and if automaticallyLoadPages is true and loadingBehavior is set to "incremental",
 the ListView initiates an incremental load.</description>
      </property>
      <property name="groupDataSource" datatype="Object" required="false">
        <description locid="WinJS.UI.ListView.groupDataSource" type="text/plain">Gets or sets the data source that contains the groups for the items in the itemDataSource.</description>
      </property>
      <property name="automaticallyLoadPages" datatype="Boolean" required="false">
        <description locid="WinJS.UI.ListView.automaticallyLoadPages" type="text/plain">Gets or sets a value that indicates whether the next set of pages is automatically loaded
 when the user scrolls beyond the number of pages specified by the 
 pagesToLoadThreshold property.</description>
      </property>
      <property name="loadingBehavior" datatype="WinJS.UI.ListView.LoadingBehavior" required="false">
        <description locid="WinJS.UI.ListView.loadingBehavior" type="text/plain">Gets or sets a value that determines how many data items are loaded into the DOM.</description>
      </property>
      <property name="selectionMode" datatype="WinJS.UI.ListView.SelectionMode" required="false">
        <description locid="WinJS.UI.ListView.selectionMode" type="text/plain">Gets or sets a value that specifies how many ListView items the user can select: "none", "single", or "multi".</description>
      </property>
      <property name="tapBehavior" datatype="WinJS.UI.ListView.TapBehavior" required="false">
        <description locid="WinJS.UI.ListView.tapBehavior" type="text/plain">Gets or sets how the ListView reacts when the user taps or clicks an item.
 The tap or click can invoke the item, select it and invoke it, or have no 
 effect.</description>
      </property>
      <property name="swipeBehavior" datatype="WinJS.UI.ListView.SwipeBehavior" required="false">
        <description locid="WinJS.UI.ListView.swipeBehavior" type="text/plain">Gets or sets how the ListView reacts to the swipe interaction.
 The swipe gesture can select the swiped items or it can 
 have no effect on the current selection.</description>
      </property>
      <property name="itemDataSource" datatype="Object" required="false">
        <description locid="WinJS.UI.ListView.itemDataSource" type="text/plain">Gets or sets the data source that provides items for the ListView.</description>
      </property>
      <property name="itemTemplate" datatype="Object" required="false" blend:potentialValueSelector="[data-win-control='WinJS.Binding.Template']">
        <description locid="WinJS.UI.ListView.itemTemplate" type="text/plain">Gets or sets the templating function that creates the DOM elements
 for each item in the itemDataSource. Each item can contain multiple
 DOM elements, but we recommend that it have a single root element.</description>
      </property>
      <property name="resetItem" datatype="Function" required="false">
        <description locid="WinJS.UI.ListView.resetItem" type="text/plain">Gets or sets the function that is called when the ListView recycles the
 element representation of an item.</description>
      </property>
      <property name="groupHeaderTemplate" datatype="Object" required="false" blend:potentialValueSelector="[data-win-control='WinJS.Binding.Template']">
        <description locid="WinJS.UI.ListView.groupHeaderTemplate" type="text/plain">Gets or sets the templating function that creates the DOM elements
 for each group header in the groupDataSource. Each group header
 can contain multiple elements, but it must have a single root element.</description>
      </property>
      <property name="resetGroupHeader" datatype="Function" required="false" blend:isAdvanced="true">
        <description locid="WinJS.UI.ListView.resetGroupHeader" type="text/plain">Gets or sets the function that is called when the ListView recycles the DOM element representation
 of a group header.</description>
      </property>
      <property name="loadingState" datatype="String" required="false" hidden="true">
        <description locid="WinJS.UI.ListView.loadingState" type="text/plain">Gets a value that indicates whether the ListView is still loading or whether
 loading is complete.  This property can return one of these values: 
 "itemsLoading", "viewPortLoaded", "itemsLoaded", or "complete".</description>
      </property>
      <property name="selection" datatype="Object" required="false" blend:isAdvanced="true">
        <description locid="WinJS.UI.ListView.selection" type="text/plain">Gets an ISelection object that contains the currently selected items.</description>
      </property>
      <property name="indexOfFirstVisible" datatype="Number" isInteger="true" required="false" blend:isAdvanced="true">
        <description locid="WinJS.UI.ListView.indexOfFirstVisible" type="text/plain">Gets or sets the first visible item. When setting this property, the ListView scrolls so that the
 item with the specified index is at the top of the list.</description>
      </property>
      <property name="indexOfLastVisible" datatype="Number" isInteger="true" required="false" readonly="true" blend:isAdvanced="true">
        <description locid="WinJS.UI.ListView.indexOfLastVisible" type="text/plain">Gets the index of the last visible item.</description>
      </property>
      <property name="currentItem" datatype="Object" required="false" blend:isAdvanced="true">
        <description locid="WinJS.UI.ListView.currentItem" type="text/plain">Gets or sets an object that indicates which item should get keyboard focus and its focus status. 
 The object has these properties:
 index: the index of the item in the itemDataSource.
 key: the key of the item in the itemDataSource.
 hasFocus: when getting this property, this value is true if the item already has focus; otherwise, it's false. 
 When setting this property, set this value to true if the item should get focus immediately; otherwise, set it to
 false and the item will get focus eventually. 
 showFocus: true if the item displays the focus rectangle; otherwise, false.</description>
      </property>
      <property name="zoomableView" datatype="Object" required="false" blend:isAdvanced="true">
        <description locid="WinJS.UI.ListView.zoomableView" type="text/plain">Gets a ZoomableView. This API supports the SemanticZoom infrastructure 
 and is not intended to be used directly from your code.</description>
      </property>
      <property name="scrollPosition" datatype="Number" isInteger="true" required="false">
        <description locid="WinJS.UI.ListView.scrollPosition" type="text/plain">Gets or sets the position of the ListView's scrollbar.</description>
      </property>
    </properties>
    <events>
      <event name="contentanimating" p5:bubbles="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.ListView_e:contentanimating" type="text/plain">Raised when the ListView is about to play an entrance or a transition animation.</description>
      </event>
      <event name="iteminvoked" p5:bubbles="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.ListView_e:iteminvoked" type="text/plain">Raised when the user taps or clicks an item.</description>
      </event>
      <event name="selectionchanging" p5:bubbles="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.ListView_e:selectionchanging" type="text/plain">Raised before items are selected or deselected.</description>
      </event>
      <event name="selectionchanged" p5:bubbles="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.ListView_e:selectionchanged" type="text/plain">Raised after items are selected or deselected.</description>
      </event>
      <event name="loadingstatechanged" p5:bubbles="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.ListView_e:loadingstatechanged" type="text/plain">Raised when the loading state changes.</description>
      </event>
      <event name="keyboardnavigating" p5:bubbles="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.ListView_e:keyboardnavigating" type="text/plain">Raised when the focused item changes.</description>
      </event>
    </events>
    <methods>
      <method name="elementFromIndex">
        <description locid="WinJS.UI.ListView.elementFromIndex" type="text/plain">Returns the DOM element that represents the item at the specified index.</description>
        <parameter name="itemIndex" datatype="Number">
          <description locid="WinJS.UI.ListView.elementFromIndex_p:itemIndex" type="text/plain">The index of the item.</description>
        </parameter>
        <returnType datatype="Object">
          <description locid="WinJS.UI.ListView.elementFromIndex_returnValue" type="text/plain">The DOM element that represents the specified item.</description>
        </returnType>
      </method>
      <method name="indexOfElement">
        <description locid="WinJS.UI.ListView.indexOfElement" type="text/plain">Returns the index of the item that the specified DOM element displays.</description>
        <parameter name="element" datatype="HTMLElement" p6:domElement="true" xmlns:p6="http://schemas.microsoft.com/winjs/2011">
          <description locid="WinJS.UI.ListView.indexOfElement_p:element" type="text/plain">The DOM element that displays the item.</description>
        </parameter>
        <returnType datatype="Number">
          <description locid="WinJS.UI.ListView.indexOfElement_returnValue" type="text/plain">The index of item that the specified DOM element displays.</description>
        </returnType>
      </method>
      <method name="ensureVisible">
        <description locid="WinJS.UI.ListView.ensureVisible" type="text/plain">Makes the specified item visible. The ListView scrolls to the item if needed.</description>
        <parameter name="itemIndex" datatype="Number">
          <description locid="WinJS.UI.ListView.ensureVisible_p:itemIndex" type="text/plain">The index of the item to bring into view.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="loadMorePages">
        <description locid="WinJS.UI.ListView.loadMorePages" type="text/plain">Loads the next set of pages if the ListView object's loadingBehavior is set to incremental.</description>
        <returnType datatype="*" />
      </method>
      <method name="recalculateItemPosition">
        <description locid="WinJS.UI.ListView.recalculateItemPosition" type="text/plain">Repositions all the visible items in the ListView to adjust for items whose sizes have changed. Most apps won't ever need to call this method.</description>
        <returnType datatype="*" />
      </method>
      <method name="forceLayout">
        <description locid="WinJS.UI.ListView.forceLayout" type="text/plain">Forces the ListView to update its layout. Use this function when making the ListView visible again
 after you set its style.display property to "none".</description>
        <returnType datatype="*" />
      </method>
      <method name="triggerDispose">
        <description locid="WinJS.UI.ListView.triggerDispose" type="text/plain">Triggers the ListView disposal service manually. In normal operation this is triggered
 at ListView instantiation. However in some scenarios it may be appropriate to run
 the disposal service manually.</description>
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="WinJS.UI._ItemSet">
    <properties />
    <events />
    <methods />
  </class>
  <class name="WinJS.UI._Selection">
    <ancestor datatype="WinJS.UI._ItemSet" />
    <properties>
      <property name="supportedForProcessing" required="false" />
    </properties>
    <events />
    <methods>
      <method name="clear">
        <description locid="WinJS.UI._Selection.prototype.clear" type="text/plain">Clears the selection.</description>
        <returnType datatype="Promise">
          <description locid="WinJS.UI._Selection.prototype.clear_returnValue" type="text/plain">A Promise that is fulfilled when the clear operation completes.</description>
        </returnType>
      </method>
      <method name="set">
        <description locid="WinJS.UI._Selection.prototype.set" type="text/plain">Clears the current selection and replaces it with the specified items.</description>
        <parameter name="items">
          <description locid="WinJS.UI._Selection.prototype.set_items" type="text/plain">The indexes or keys of the items that make up the selection. 
 You can provide different types of objects for the items parameter: 
 you can specify an index, a key, or a range of indexes. 
 It can also be an array that contains one or more of these objects.</description>
        </parameter>
        <returnType datatype="Promise">
          <description locid="WinJS.UI._Selection.prototype.set_returnValue" type="text/plain">A Promise that is fulfilled when the operation completes.</description>
        </returnType>
      </method>
      <method name="add">
        <description locid="WinJS.UI._Selection.prototype.add" type="text/plain">Adds one or more items to the selection.</description>
        <parameter name="items">
          <description locid="WinJS.UI._Selection.prototype.add_items" type="text/plain">The indexes or keys of the items to add. 
 You can provide different types of objects for the items parameter: 
 you can specify an index, a key, or a range of indexes. 
 It can also be an array that contains one or more of these objects.</description>
        </parameter>
        <returnType datatype="Promise">
          <description locid="WinJS.UI._Selection.prototype.set_returnValue" type="text/plain">A Promise that is fulfilled when the operation completes.</description>
        </returnType>
      </method>
      <method name="remove">
        <description locid="WinJS.UI._Selection.prototype.remove" type="text/plain">Removes the specified items from the selection.</description>
        <parameter name="items">
          <description locid="WinJS.UI._Selection.prototype.remove_items" type="text/plain">The indexes or keys of the items to remove. You can provide different types of objects for the items parameter: 
 you can specify an index, a key, or a range of indexes. 
 It can also be an array that contains one or more of these objects.</description>
        </parameter>
        <returnType datatype="Promise">
          <description locid="WinJS.UI._Selection.prototype.set_returnValue" type="text/plain">A Promise that is fulfilled when the operation completes.</description>
        </returnType>
      </method>
      <method name="selectAll">
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="WinJS.UI.DatePicker">
    <title locid="WinJS.UI.DatePicker_name" type="text/plain">Date Picker</title>
    <description locid="WinJS.UI.DatePicker" type="text/plain">Allows users to pick a date value.</description>
    <constructor>
      <description locid="WinJS.UI.DatePicker.constructor" type="text/plain">Initializes a new instance of the DatePicker control</description>
      <parameter name="element" datatype="HTMLElement" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.DatePicker.constructor_p:element" type="text/plain">The DOM element associated with the DatePicker control.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description locid="WinJS.UI.DatePicker.constructor_p:options" type="text/plain">The set of options to be applied initially to the DatePicker control.</description>
      </parameter>
      <returnType datatype="WinJS.UI.DatePicker">
        <description locid="WinJS.UI.DatePicker.constructor_returnValue" type="text/plain">A constructed DatePicker control.</description>
      </returnType>
    </constructor>
    <properties>
      <property name="calendar" datatype="String" required="false">
        <description locid="WinJS.UI.DatePicker.calendar" type="text/plain">Gets or sets the calendar to use.</description>
      </property>
      <property name="current" datatype="Date" required="false">
        <description locid="WinJS.UI.DatePicker.current" type="text/plain">Gets or sets the current date of the DatePicker.</description>
      </property>
      <property name="disabled" datatype="Boolean" required="false">
        <description locid="WinJS.UI.DatePicker.disabled" type="text/plain">Specifies whether the DatePicker is disabled.</description>
      </property>
      <property name="datePattern" datatype="String" required="false">
        <description locid="WinJS.UI.DatePicker.datePattern" type="text/plain">Gets or sets the display pattern for the date.</description>
      </property>
      <property name="element" datatype="HTMLElement" required="false" hidden="true">
        <description locid="WinJS.UI.DatePicker.element" type="text/plain">Gets the DOM element for the DatePicker.</description>
      </property>
      <property name="minYear" datatype="Number" isInteger="true" required="false">
        <description locid="WinJS.UI.DatePicker.minYear" type="text/plain">Gets or sets the minimum Gregorian year available for picking.</description>
      </property>
      <property name="maxYear" datatype="Number" isInteger="true" required="false">
        <description locid="WinJS.UI.DatePicker.maxYear" type="text/plain">Gets or sets the maximum Gregorian year available for picking.</description>
      </property>
      <property name="monthPattern" datatype="String" required="false">
        <description locid="WinJS.UI.DatePicker.monthPattern" type="text/plain">Gets or sets the display pattern for the month.</description>
      </property>
      <property name="yearPattern" datatype="String" required="false">
        <description locid="WinJS.UI.DatePicker.yearPattern" type="text/plain">Gets or sets the display pattern for year.</description>
      </property>
    </properties>
    <events>
      <event name="change" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.DatePicker_e:change" type="text/plain">Occurs when the current date changes.</description>
      </event>
    </events>
    <methods />
  </class>
  <class name="WinJS.UI.TimePicker">
    <title locid="WinJS.UI.TimePicker_name" type="text/plain">Time Picker</title>
    <description locid="WinJS.UI.TimePicker" type="text/plain">Allows users to select time values.</description>
    <constructor>
      <description locid="WinJS.UI.TimePicker.constructor" type="text/plain">Initializes a new instance of the TimePicker control</description>
      <parameter name="element" datatype="HTMLElement" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.TimePicker.constructor_p:element" type="text/plain">The DOM element associated with the TimePicker control.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description locid="WinJS.UI.TimePicker.constructor_p:options" type="text/plain">The set of options to be applied initially to the TimePicker control.</description>
      </parameter>
      <returnType datatype="WinJS.UI.TimePicker">
        <description locid="WinJS.UI.TimePicker.constructor_returnValue" type="text/plain">A constructed TimePicker control.</description>
      </returnType>
    </constructor>
    <properties>
      <property name="clock" datatype="String" required="false">
        <description locid="WinJS.UI.TimePicker.clock" type="text/plain">Gets or sets the type of clock to display (12HourClock or 24HourClock). It defaults to the user setting.</description>
      </property>
      <property name="current" datatype="Date" required="false">
        <description locid="WinJS.UI.TimePicker.current" type="text/plain">Gets or sets the current date (and time) of the TimePicker.</description>
      </property>
      <property name="disabled" datatype="Boolean" required="false">
        <description locid="WinJS.UI.TimePicker.disabled" type="text/plain">Specifies whether the TimePicker is disabled.</description>
      </property>
      <property name="element" datatype="HTMLElement" required="false" hidden="true">
        <description locid="WinJS.UI.TimePicker.element" type="text/plain">Gets the DOM element for the TimePicker.</description>
      </property>
      <property name="hourPattern" datatype="String" required="false">
        <description locid="WinJS.UI.TimePicker.hourPattern" type="text/plain">Gets or sets the display pattern for the hour.</description>
      </property>
      <property name="minuteIncrement" datatype="Number" isInteger="true" required="false">
        <description locid="WinJS.UI.TimePicker.minuteIncrement" type="text/plain">Gets or sets the minute increment. For example, "15" specifies that the TimePicker minute control should display only the choices 00, 15, 30, 45.</description>
      </property>
      <property name="minutePattern" datatype="String" required="false">
        <description locid="WinJS.UI.TimePicker.minutePattern" type="text/plain">Gets or sets the display pattern for the minute.</description>
      </property>
      <property name="periodPattern" datatype="String" required="false">
        <description locid="WinJS.UI.TimePicker.periodPattern" type="text/plain">Gets or sets the display pattern for the period.</description>
      </property>
    </properties>
    <events>
      <event name="change" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.TimePicker_e:change" type="text/plain">Occurs when the time changes.</description>
      </event>
    </events>
    <methods />
  </class>
  <class name="WinJS.UI._Select">
    <properties>
      <property name="dataSource" required="false" />
      <property name="index" required="false" />
      <property name="value" required="false" />
    </properties>
    <events />
    <methods>
      <method name="setDisabled">
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="WinJS.UI.Rating">
    <description locid="WinJS.UI.Rating" type="text/plain">The Rating control allows users to give a number on a scale of 1 to maxRating (5 is the default).</description>
    <constructor>
      <description locid="WinJS.UI.Rating.constructor" type="text/plain">Creates a new Rating.</description>
      <parameter name="element" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.Rating.constructor_p:element" type="text/plain">The DOM element that hosts the new Rating.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description locid="WinJS.UI.Rating.constructor_p:options" type="text/plain">An object that contains one or more property/value pairs to apply to the new control. 
 Each property of the options object corresponds to one of the control's properties or events. 
 Event names must begin with "on". For example, to provide a handler for the cancel event,  
 add a property named "oncancel" to the options object and set its value to the event handler.
 This parameter is optional.</description>
      </parameter>
      <returnType datatype="WinJS.UI.Rating">
        <description locid="WinJS.UI.Rating.constructor_returnValue" type="text/plain">The new Rating.</description>
      </returnType>
    </constructor>
    <properties>
      <property name="maxRating" datatype="Number" isInteger="true" required="false">
        <description locid="WinJS.UI.Rating.maxRating" type="text/plain">Gets or sets the maximum possible rating value. The default is 5.</description>
      </property>
      <property name="userRating" datatype="Number" isInteger="true" required="false">
        <description locid="WinJS.UI.Rating.userRating" type="text/plain">Gets or sets the user's rating. This value must be between greater than or equal to zero and less than or equal to the maxRating.</description>
      </property>
      <property name="averageRating" datatype="Number" isInteger="false" required="false">
        <description locid="WinJS.UI.Rating.averageRating" type="text/plain">Gets or sets the average rating as a float value. This value must be [equal to zero] OR [greater than or equal to 1 AND less than or equal to the maxRating].</description>
      </property>
      <property name="disabled" datatype="Boolean" required="false">
        <description locid="WinJS.UI.Rating.disabled" type="text/plain">Gets or sets a value that specifies whether the control is disabled. When the control is disabled, the user can't specify a 
 new rating or modify an existing rating.</description>
      </property>
      <property name="enableClear" datatype="Boolean" required="false">
        <description locid="WinJS.UI.Rating.enableClear" type="text/plain">Gets or sets whether the control lets the user clear the rating.</description>
      </property>
      <property name="tooltipStrings" datatype="Array" required="false">
        <description locid="WinJS.UI.Rating.tooltipStrings" type="text/plain">Gets or sets a set of descriptions to show for rating values in the tooltip. The array must
 contain a string for each available rating value, and it can contain an optional string 
 (at the end of the array) for the clear rating option.</description>
      </property>
      <property name="element" datatype="HTMLElement" required="false" hidden="true">
        <description locid="WinJS.UI.Rating.element" type="text/plain">Gets the DOM element that hosts the Rating.</description>
      </property>
    </properties>
    <events>
      <event name="previewchange" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.Rating_e:previewchange" type="text/plain">Raised when the user chooses a new tentative rating but hasn't commited the change.</description>
      </event>
      <event name="cancel" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.Rating_e:cancel" type="text/plain">Raised when the user finishes interacting with the rating control without committing a tentative rating.</description>
      </event>
      <event name="change" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.Rating_e:change" type="text/plain">Raised when the user commits a change to the userRating.</description>
      </event>
    </events>
    <methods>
      <method name="addEventListener">
        <description locid="WinJS.UI.Rating.addEventListener" type="text/plain">Registers an event handler for the specified event.</description>
        <parameter name="eventName" datatype="String">
          <description locid="WinJS.UI.Rating.addEventListener_p:eventName" type="text/plain">The name of the event.</description>
        </parameter>
        <parameter name="eventCallback" datatype="Function">
          <description locid="WinJS.UI.Rating.addEventListener_p:eventCallback" type="text/plain">The event handler function to associate with this event.</description>
        </parameter>
        <parameter name="capture" datatype="Boolean">
          <description locid="WinJS.UI.Rating.addEventListener_p:capture" type="text/plain">Set to true to register the event handler for the capturing phase; set to false to register for the bubbling phase.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="removeEventListener">
        <description locid="WinJS.UI.Rating.removeEventListener" type="text/plain">Unregisters an event handler for the specified event.</description>
        <parameter name="eventName" datatype="String">
          <description locid="WinJS.UI.Rating.addEventListener_p:eventName" type="text/plain">The name of the event.</description>
        </parameter>
        <parameter name="eventCallback" datatype="Function">
          <description locid="WinJS.UI.Rating.removeEventListener_p:eventCallback" type="text/plain">The event handler function to remove.</description>
        </parameter>
        <parameter name="capture" datatype="Boolean">
          <description locid="WinJS.UI.Rating.removeEventListener_p:capture" type="text/plain">Set to true to unregister the event handler for the capturing phase; otherwise, set to false to unregister the event handler for the bubbling phase.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="WinJS.UI.ToggleSwitch">
    <ancestor datatype="Control" />
    <description locid="WinJS.UI.ToggleSwitch" type="text/plain">A control that lets the user switch an option on or off.</description>
    <constructor>
      <description locid="WinJS.UI.ToggleSwitch.constructor" type="text/plain">Creates a new ToggleSwitch.</description>
      <parameter name="element" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.ToggleSwitch.constructor_p:element" type="text/plain">The DOM element that hosts the ToggleSwitch.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description locid="WinJS.UI.ToggleSwitch.constructor_p:options" type="text/plain">An object that contains one or more property/value pairs to apply to the new control.
 Each property of the options object corresponds to one of the control's properties or events.
 Event names must begin with "on". For example, to provide a handler for the change event,
 add a property named "onchange" to the options object and set its value to the event handler.
 This parameter is optional.</description>
      </parameter>
      <returnType datatype="WinJS.UI.ToggleSwitch">
        <description locid="WinJS.UI.ToggleSwitch.constructor_returnValue" type="text/plain">The new ToggleSwitch.</description>
      </returnType>
    </constructor>
    <properties>
      <property name="checked" datatype="Boolean" required="false">
        <description locid="WinJS.UI.ToggleSwitch.checked" type="text/plain">Gets or sets whether the control is on (checked is set to true) or off (checked is set to false).</description>
      </property>
      <property name="disabled" datatype="Boolean" required="false">
        <description locid="WinJS.UI.ToggleSwitch.disabled" type="text/plain">Gets or sets a value that specifies whether the control is disabled.</description>
      </property>
      <property name="element" datatype="HTMLElement" required="false" hidden="true">
        <description locid="WinJS.UI.ToggleSwitch.element" type="text/plain">The DOM element that hosts the ToggleSwitch control.</description>
      </property>
      <property name="labelOn" datatype="String" required="false">
        <description locid="WinJS.UI.ToggleSwitch.labelOn" type="text/plain">Gets or sets the text that displays when the control is on (checked is set to true). The default value is "On".</description>
      </property>
      <property name="labelOff" datatype="String" required="false">
        <description locid="WinJS.UI.ToggleSwitch.labelOff" type="text/plain">Gets or sets the text that displays when the control is off (checked is set to false). The default value is "Off".</description>
      </property>
      <property name="title" datatype="String" required="false">
        <description locid="WinJS.UI.ToggleSwitch.title" type="text/plain">Gets or sets the main text for the ToggleSwitch control. This text is always displayed, regardless of whether
 the control is switched on or off.</description>
      </property>
    </properties>
    <events>
      <event name="change" p5:bubbles="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.ToggleSwitch_e:change" type="text/plain">Raised when the switch is flipped to on (checked is set to true) or off (checked is set to false).</description>
      </event>
    </events>
    <methods>
      <method name="addEventListener">
        <description locid="WinJS.UI.Rating.addEventListener" type="text/plain">Registers an event handler for the specified event.</description>
        <parameter name="eventName" datatype="String">
          <description locid="WinJS.UI.Rating.addEventListener_p:eventName" type="text/plain">The name of the event.</description>
        </parameter>
        <parameter name="eventCallback" datatype="Function">
          <description locid="WinJS.UI.Rating.addEventListener_p:eventCallback" type="text/plain">The event handler function to associate with this event.</description>
        </parameter>
        <parameter name="capture" datatype="Boolean">
          <description locid="WinJS.UI.Rating.addEventListener_p:capture" type="text/plain">Set to true to register the event handler for the capturing phase; set to false to register for the bubbling phase.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="removeEventListener">
        <description locid="WinJS.UI.Rating.removeEventListener" type="text/plain">Unregisters an event handler for the specified event.</description>
        <parameter name="eventName" datatype="String">
          <description locid="WinJS.UI.Rating.addEventListener_p:eventName" type="text/plain">The name of the event.</description>
        </parameter>
        <parameter name="eventCallback" datatype="Function">
          <description locid="WinJS.UI.Rating.removeEventListener_p:eventCallback" type="text/plain">The event handler function to remove.</description>
        </parameter>
        <parameter name="capture" datatype="Boolean">
          <description locid="WinJS.UI.Rating.removeEventListener_p:capture" type="text/plain">Set to true to unregister the event handler for the capturing phase; otherwise, set to false to unregister the event handler for the bubbling phase.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="WinJS.UI.SemanticZoom">
    <description locid="WinJS.UI.SemanticZoom" type="text/plain">Enables the user to zoom between two different views supplied by two child controls.
 One child control supplies the zoomed-out view and the other provides the zoomed-in view.</description>
    <constructor>
      <description locid="WinJS.UI.SemanticZoom.constructor" type="text/plain">Creates a new SemanticZoom.</description>
      <parameter name="element" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.SemanticZoom.constructor_p:element" type="text/plain">The DOM element that hosts the SemanticZoom.</description>
      </parameter>
      <parameter name="options" datatype="object">
        <description locid="WinJS.UI.SemanticZoom.constructor_p:options" type="text/plain">An object that contains one or more property/value pairs to apply to the new control. 
 Each property of the options object corresponds to one of the control's properties or events. This parameter is optional.</description>
      </parameter>
      <returnType datatype="WinJS.UI.SemanticZoom">
        <description locid="WinJS.UI.SemanticZoom.constructor_returnValue" type="text/plain">The new SemanticZoom control.</description>
      </returnType>
    </constructor>
    <properties>
      <property name="element" datatype="HTMLElement" required="false" hidden="true">
        <description locid="WinJS.UI.SemanticZoom.element" type="text/plain">The DOM element that hosts the SemanticZoom control.</description>
      </property>
      <property name="enableButton" datatype="Boolean" required="false">
        <description locid="WinJS.UI.SemanticZoom.enableButton" type="text/plain">Gets or sets a value that specifies whether the semantic zoom button should be displayed or not</description>
      </property>
      <property name="zoomedOut" datatype="Boolean" required="false">
        <description locid="WinJS.UI.SemanticZoom.zoomedOut" type="text/plain">Gets or sets a value that specifies whether the zoomed out view is currently displayed.</description>
      </property>
      <property name="zoomFactor" datatype="Number" isInteger="false" required="false" minimum="0.2" maximum="0.8">
        <description locid="WinJS.UI.SemanticZoom.zoomFactor" type="text/plain">Gets or sets a value between 0.2 and 0.85 that specifies the scale of the zoomed out view. The default is 0.65.</description>
      </property>
      <property name="locked" datatype="Boolean" required="false">
        <description locid="WinJS.UI.SemanticZoom.locked" type="text/plain">Gets or sets a value that indicates whether SemanticZoom is locked and zooming between views is disabled.</description>
      </property>
    </properties>
    <events />
    <methods>
      <method name="forceLayout">
        <description locid="WinJS.UI.SemanticZoom.forceLayout" type="text/plain">Forces the SemanticZoom to update its layout. Use this function when making the SemanticZoom visible again
 after its style.display property had been set to "none".</description>
        <returnType datatype="*" />
      </method>
      <method name="setTimeoutAfterTTFF">
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="WinJS.UI._Overlay">
    <constructor>
      <description locid="WinJS.UI._Overlay" type="text/plain">Constructs the Overlay control and associates it with the underlying DOM element.</description>
      <parameter name="element" datatype="HTMLElement" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI._Overlay_p:element" type="text/plain">The DOM element to be associated with the Overlay control.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description locid="WinJS.UI._Overlay_p:options" type="text/plain">The set of options to be applied initially to the Overlay control.</description>
      </parameter>
      <returnType datatype="WinJS.UI._Overlay">
        <description locid="WinJS.UI._Overlay_returnValue" type="text/plain">A fully constructed Overlay control.</description>
      </returnType>
    </constructor>
    <properties>
      <property name="element" datatype="HTMLElement" required="false" hidden="true" readonly="true">
        <description locid="WinJS.UI._Overlay.element" type="text/plain">The DOM element the Overlay is attached to</description>
      </property>
      <property name="disabled" datatype="Boolean" required="false">
        <description locid="WinJS.UI._Overlay.disabled" type="text/plain">Disable an Overlay, setting or getting the HTML disabled attribute.  When disabled the Overlay will no longer display with show(), and will hide if currently visible.</description>
      </property>
      <property name="hidden" datatype="Boolean" required="false" hidden="true">
        <description locid="WinJS.UI._Overlay.hidden" type="text/plain">Read only, true if an overlay is currently not visible.</description>
      </property>
    </properties>
    <events />
    <methods>
      <method name="show">
        <description locid="WinJS.UI._Overlay.show" type="text/plain">Shows the Overlay, if hidden, regardless of other state</description>
        <returnType datatype="*" />
      </method>
      <method name="hide">
        <description locid="WinJS.UI._Overlay.hide" type="text/plain">Hides the Overlay, if visible, regardless of other state</description>
        <returnType datatype="*" />
      </method>
      <method name="addEventListener">
        <description locid="WinJS.UI._Overlay.addEventListener" type="text/plain">Add an event listener to the DOM element for this Overlay</description>
        <parameter name="type" datatype="String">
          <description locid="WinJS.UI._Overlay.addEventListener_p:type" type="text/plain">Required. Event type to add, "beforehide", "afterhide", "beforeshow", or "aftershow"</description>
        </parameter>
        <parameter name="listener" datatype="Function">
          <description locid="WinJS.UI._Overlay.addEventListener_p:listener" type="text/plain">Required. The event handler function to associate with this event.</description>
        </parameter>
        <parameter name="useCapture" datatype="Boolean">
          <description locid="WinJS.UI._Overlay.addEventListener_p:useCapture" type="text/plain">Optional. True, register for the event capturing phase.  False for the event bubbling phase.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="removeEventListener">
        <description locid="WinJS.UI._Overlay.removeEventListener" type="text/plain">Remove an event listener to the DOM element for this Overlay</description>
        <parameter name="type" datatype="String">
          <description locid="WinJS.UI._Overlay.removeEventListener_p:type" type="text/plain">Required. Event type to remove, "beforehide", "afterhide", "beforeshow", or "aftershow"</description>
        </parameter>
        <parameter name="listener" datatype="Function">
          <description locid="WinJS.UI._Overlay.addEventListener_p:listener" type="text/plain">Required. The event handler function to associate with this event.</description>
        </parameter>
        <parameter name="useCapture" datatype="Boolean">
          <description locid="WinJS.UI._Overlay.addEventListener_p:useCapture" type="text/plain">Optional. True, register for the event capturing phase.  False for the event bubbling phase.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="WinJS.UI.AppBarCommand">
    <description locid="WinJS.UI.AppBarCommand" type="text/plain">AppBarCommands provide button, toggle button, flyout button, or separator functionality for AppBars.</description>
    <constructor>
      <description locid="WinJS.UI.AppBarCommand.constructor" type="text/plain">Constructs the AppBarCommand control</description>
      <parameter name="element" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.AppBarCommand.constructor_p:element" type="text/plain">The DOM element to be associated with the AppBarCommand control.  AppBarCommand will create one if null.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description locid="WinJS.UI.AppBarCommand.constructor_p:options" type="text/plain">The set of options to be applied initially to the AppBarCommand control.</description>
      </parameter>
      <returnType datatype="WinJS.UI.AppBarCommand">
        <description locid="WinJS.UI.AppBarCommand.constructor_returnValue" type="text/plain">A AppBarCommand control.</description>
      </returnType>
    </constructor>
    <properties>
      <property name="id" datatype="String" required="false" blend:isAdvanced="true">
        <description locid="WinJS.UI.AppBarCommand.id" type="text/plain">The Id of the AppBarCommand.</description>
      </property>
      <property name="type" datatype="WinJS.UI.AppBarCommand.type" required="false" readonly="true" blend:isAdvanced="true">
        <description locid="WinJS.UI.AppBarCommand.type" type="text/plain">The Type of the AppBarCommand, possible values are "button", "toggle", "flyout", or "separator"</description>
      </property>
      <property name="label" datatype="String" required="false">
        <description locid="WinJS.UI.AppBarCommand.label" type="text/plain">The label of the AppBarCommand</description>
      </property>
      <property name="icon" datatype="String" required="false">
        <description locid="WinJS.UI.AppBarCommand.icon" type="text/plain">The icon of the AppBarCommand</description>
      </property>
      <property name="onclick" datatype="Function" required="false">
        <description locid="WinJS.UI.AppBarCommand.onclick" type="text/plain">The click event to call when the AppBarCommand is invoked</description>
      </property>
      <property name="flyout" datatype="Object" required="false">
        <description locid="WinJS.UI.AppBarCommand.flyout" type="text/plain">For flyout type AppBarCommands, get returns the WinJS.UI.Flyout that this command invokes.  Set may also use the String id of the flyout to invoke, the DOM object of the flyout, or the flyout object itself</description>
      </property>
      <property name="section" datatype="WinJS.UI.AppBarCommand.section" required="false">
        <description locid="WinJS.UI.AppBarCommand.section" type="text/plain">Set or get the section to place the button in, either "global" or "selection"</description>
      </property>
      <property name="tooltip" datatype="String" required="false">
        <description locid="WinJS.UI.AppBarCommand.tooltip" type="text/plain">The tooltip text of the AppBarCommand</description>
      </property>
      <property name="selected" datatype="Boolean" required="false">
        <description locid="WinJS.UI.AppBarCommand.selected" type="text/plain">Set or get the selected state of a toggle button</description>
      </property>
      <property name="element" datatype="HTMLElement" required="false" hidden="true" readonly="true">
        <description locid="WinJS.UI.AppBarCommand.element" type="text/plain">The DOM element the AppBarCommad is attached to</description>
      </property>
      <property name="disabled" datatype="Boolean" required="false">
        <description locid="WinJS.UI.AppBarCommand.disabled" type="text/plain">Disable a command. It will get or set the HTML disabled attribute.</description>
      </property>
      <property name="hidden" datatype="Boolean" required="false" hidden="true">
        <description locid="WinJS.UI.AppBarCommand.hidden" type="text/plain">Determine if a command is currently hidden.</description>
      </property>
      <property name="extraClass" datatype="String" required="false" blend:isAdvanced="true">
        <description locid="WinJS.UI.AppBarCommand.extraClass" type="text/plain">Adds an extra CSS class during construction.</description>
      </property>
    </properties>
    <events />
    <methods>
      <method name="addEventListener">
        <description locid="WinJS.UI.AppBarCommand.addEventListener" type="text/plain">Add an event listener to the DOM element for this command</description>
        <parameter name="type" datatype="String">
          <description locid="WinJS.UI.AppBarCommand.addEventListener_p:type" type="text/plain">Required. Event type to add.</description>
        </parameter>
        <parameter name="listener" datatype="Function">
          <description locid="WinJS.UI._Overlay.addEventListener_p:listener" type="text/plain">Required. The event handler function to associate with this event.</description>
        </parameter>
        <parameter name="useCapture" datatype="Boolean">
          <description locid="WinJS.UI._Overlay.addEventListener_p:useCapture" type="text/plain">Optional. True, register for the event capturing phase.  False for the event bubbling phase.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="removeEventListener">
        <description locid="WinJS.UI.AppBarCommand.removeEventListener" type="text/plain">Remove an event listener to the DOM element for this command</description>
        <parameter name="type" datatype="String">
          <description locid="WinJS.UI.AppBarCommand.removeEventListener_p:type" type="text/plain">Required. Event type to remove.</description>
        </parameter>
        <parameter name="listener" datatype="Function">
          <description locid="WinJS.UI._Overlay.addEventListener_p:listener" type="text/plain">Required. The event handler function to associate with this event.</description>
        </parameter>
        <parameter name="useCapture" datatype="Boolean">
          <description locid="WinJS.UI._Overlay.addEventListener_p:useCapture" type="text/plain">Optional. True, register for the event capturing phase.  False for the event bubbling phase.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="WinJS.UI.AppBar">
    <ancestor datatype="WinJS.UI._Overlay" />
    <description locid="WinJS.UI.AppBar" type="text/plain">The AppBar control provides a surface for AppBarCommands or other information that the user can show or hide.</description>
    <constructor>
      <description locid="WinJS.UI.AppBar.constructor" type="text/plain">Constructs the AppBar control</description>
      <parameter name="element" datatype="HTMLElement" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.AppBar.constructor_p:element" type="text/plain">The DOM element to be associated with the AppBar control.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description locid="WinJS.UI.AppBar.constructor_p:options" type="text/plain">The set of options to be applied initially to the AppBar control.</description>
      </parameter>
      <returnType datatype="WinJS.UI.AppBar">
        <description locid="WinJS.UI.AppBar.constructor_returnValue" type="text/plain">A constructed AppBar control.</description>
      </returnType>
    </constructor>
    <properties>
      <property name="placement" datatype="WinJS.UI.AppBar.placement" required="false">
        <description locid="WinJS.UI.AppBar.placement" type="text/plain">The placement of the AppBar on the display.  Values are "top" or "bottom".</description>
      </property>
      <property name="layout" datatype="WinJS.UI.AppBar.layout" required="false">
        <description locid="WinJS.UI.AppBar.layout" type="text/plain">The layout of the AppBar contents, either "commands" or "custom".</description>
      </property>
      <property name="sticky" datatype="Boolean" required="false" blend:isAdvanced="true">
        <description locid="WinJS.UI.AppBar.sticky" type="text/plain">Whether the AppBar is sticky.</description>
      </property>
      <property name="commands" datatype="Array" required="false" blend:isAdvanced="true">
        <description locid="WinJS.UI.AppBar.commands" type="text/plain">The Commands for the AppBar, contains an array of AppBarCommand options.</description>
      </property>
    </properties>
    <events>
      <event name="beforeshow" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.AppBar_e:beforeshow" type="text/plain">Raised just before showing an AppBar.</description>
      </event>
      <event name="aftershow" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.AppBar_e:aftershow" type="text/plain">Raised immediately after an AppBar is fully shown.</description>
      </event>
      <event name="beforehide" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.AppBar_e:beforehide" type="text/plain">Raised just before hiding an AppBar.</description>
      </event>
      <event name="afterhide" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.AppBar_e:afterhide" type="text/plain">Raised immediately after an AppBar is fully hidden.</description>
      </event>
    </events>
    <methods>
      <method name="getCommandById">
        <description locid="WinJS.UI.AppBar.getCommandById" type="text/plain">Retrieve the command with the specified ID from this AppBar.  If more than one command is found, all are returned.</description>
        <parameter name="id" datatype="String">
          <description locid="WinJS.UI.AppBar.getCommandById_p:id" type="text/plain">Id of the command to return.</description>
        </parameter>
        <returnType datatype="object">
          <description locid="WinJS.UI.AppBar.getCommandById_returnValue" type="text/plain">The command found, an array of commands if more than one have the same id, or null if no command is found with that id.</description>
        </returnType>
      </method>
      <method name="showCommands">
        <description locid="WinJS.UI.AppBar.showCommands" type="text/plain">Show commands within this AppBar</description>
        <parameter name="commands" datatype="Array">
          <description locid="WinJS.UI.AppBar.showCommands_p:commands" type="text/plain">Required. Command or Commands to show, either String, DOM elements, or WinJS objects.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="hideCommands">
        <description locid="WinJS.UI.AppBar.hideCommands" type="text/plain">Hide commands within this AppBar</description>
        <parameter name="commands" datatype="Array">
          <description locid="WinJS.UI.AppBar.hideCommands_p:commands" type="text/plain">Required. Command or Commands to hide, either String, DOM elements, or WinJS objects.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="showOnlyCommands">
        <description locid="WinJS.UI.AppBar.showOnlyCommands" type="text/plain">Show the specified commands, hiding all of the others in the AppBar.</description>
        <parameter name="commands" datatype="Array">
          <description locid="WinJS.UI.AppBar.showCommands_p:commands" type="text/plain">Required. Command or Commands to show, either String, DOM elements, or WinJS objects.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="show">
        <description locid="WinJS.UI.AppBar.show" type="text/plain">Shows the AppBar, if hidden, regardless of other state</description>
        <returnType datatype="*" />
      </method>
      <method name="hide">
        <description locid="WinJS.UI.AppBar.hide" type="text/plain">Hides the AppBar, if visible, regardless of other state</description>
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="WinJS.UI.Flyout">
    <ancestor datatype="WinJS.UI._Overlay" />
    <title locid="WinJS.UI.Flyout_name" type="text/plain">Flyout</title>
    <description locid="WinJS.UI.Flyout" type="text/plain">Flyout controls provide temporary surfaces for small amounts of content.</description>
    <constructor>
      <description locid="WinJS.UI.Flyout.constructor" type="text/plain">Constructs the Flyout control and associates it with the underlying DOM element.</description>
      <parameter name="element" datatype="HTMLElement" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.Flyout.constructor_p:element" type="text/plain">The DOM element to be associated with the Flyout control.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description locid="WinJS.UI.Flyout.constructor_p:options" type="text/plain">The set of options to be applied initially to the Flyout control.</description>
      </parameter>
      <returnType datatype="WinJS.UI.Flyout">
        <description locid="WinJS.UI.Flyout.constructor_returnValue" type="text/plain">A fully constructed Flyout control.</description>
      </returnType>
    </constructor>
    <properties>
      <property name="anchor" datatype="String" required="false">
        <description locid="WinJS.UI.Flyout.anchor" type="text/plain">The anchor element is the HTML element which the flyout originates from and is positioned relative to. You can override it with the anchor that you pass in the show() method.</description>
      </property>
      <property name="placement" datatype="WinJS.UI.Flyout.placement" required="false">
        <description locid="WinJS.UI.Flyout.placement" type="text/plain">Default placement to be used for this flyout, overridden by placement passed in show().</description>
      </property>
      <property name="alignment" datatype="WinJS.UI.Flyout.alignment" required="false">
        <description locid="WinJS.UI.Flyout.alignment" type="text/plain">Default alignment to be used for this flyout, overridden by alignment passed in show().</description>
      </property>
    </properties>
    <events>
      <event name="beforeshow" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.Flyout_e:beforeshow" type="text/plain">Raised just before showing a flyout.</description>
      </event>
      <event name="aftershow" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.Flyout_e:aftershow" type="text/plain">Raised immediately after a flyout is fully shown.</description>
      </event>
      <event name="beforehide" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.Flyout_e:beforehide" type="text/plain">Raised just before hiding a flyout.</description>
      </event>
      <event name="afterhide" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.Flyout_e:afterhide" type="text/plain">Raised immediately after a flyout is fully hidden.</description>
      </event>
    </events>
    <methods>
      <method name="show">
        <description locid="WinJS.UI.Flyout.show" type="text/plain">Shows the Flyout, if hidden, regardless of other state</description>
        <parameter name="anchor" datatype="HTMLElement" p6:domElement="true" xmlns:p6="http://schemas.microsoft.com/winjs/2011">
          <description locid="WinJS.UI.Flyout.show_p:anchor" type="text/plain">The DOM element, or ID of a DOM element to anchor the Flyout, overriding the anchor property for this time only.</description>
        </parameter>
        <parameter name="placement" datatype="Object">
          <description locid="WinJS.UI.Flyout.show_p:placement" type="text/plain">The placement of the Flyout to the anchor: 'auto' (default), 'top', 'bottom', 'left', or 'right'.  This parameter overrides the placement property for this show only.</description>
        </parameter>
        <parameter name="alignment" datatype="Object">
          <description locid="WinJS.UI.Flyout.show:alignment" type="text/plain">For 'top' or 'bottom' placement, the alignment of the Flyout to the anchor's edge: 'center' (default), 'left', or 'right'.  This parameter overrides the alignment property for this show only.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="hide">
        <description locid="WinJS.UI.Flyout.hide" type="text/plain">Hides the Flyout, if visible, regardless of other state</description>
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="WinJS.UI.Menu">
    <ancestor datatype="WinJS.UI.Flyout" />
    <title locid="WinJS.UI.Menu_name" type="text/plain">Menu</title>
    <description locid="WinJS.UI.Menu" type="text/plain">The Menu control provides MenuCommands to the user.</description>
    <constructor>
      <description locid="WinJS.UI.Menu.constructor" type="text/plain">Constructs the Menu control and associates it with the underlying DOM element.</description>
      <parameter name="element" datatype="HTMLElement" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.Menu.constructor_p:element" type="text/plain">The DOM element to be associated with the Menu control.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description locid="WinJS.UI.Menu.constructor_p:options" type="text/plain">The set of options to be applied initially to the Menu control.</description>
      </parameter>
      <returnType datatype="WinJS.UI.Menu">
        <description locid="WinJS.UI.Menu.constructor_returnValue" type="text/plain">A fully constructed Menu control.</description>
      </returnType>
    </constructor>
    <properties>
      <property name="commands" datatype="Array" required="false" blend:isAdvanced="true">
        <description locid="WinJS.UI.Menu.commands" type="text/plain">The Commands for the Menu, contains an array of MenuCommand options.</description>
      </property>
    </properties>
    <events>
      <event name="beforeshow" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.Menu_e:beforeshow" type="text/plain">Raised just before showing a menu.</description>
      </event>
      <event name="aftershow" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.Menu_e:aftershow" type="text/plain">Raised immediately after a menu is fully shown.</description>
      </event>
      <event name="beforehide" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.Menu_e:beforehide" type="text/plain">Raised just before hiding a menu.</description>
      </event>
      <event name="afterhide" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.Menu_e:afterhide" type="text/plain">Raised immediately after a menu is fully hidden.</description>
      </event>
    </events>
    <methods>
      <method name="getCommandById">
        <description locid="WinJS.UI.Menu.getCommandById" type="text/plain">Retrieve the command with the specified ID from this Menu.  If more than one command is found, all are returned.</description>
        <parameter name="id" datatype="String">
          <description locid="WinJS.UI.AppBar.getCommandById_p:id" type="text/plain">Id of the command to return.</description>
        </parameter>
        <returnType datatype="object">
          <description locid="WinJS.UI.AppBar.getCommandById_returnValue" type="text/plain">The command found, an array of commands if more than one have the same id, or null if no command is found with that id.</description>
        </returnType>
      </method>
      <method name="showCommands">
        <description locid="WinJS.UI.Menu.showCommands" type="text/plain">Show commands within this Menu</description>
        <parameter name="commands" datatype="Array">
          <description locid="WinJS.UI.AppBar.showCommands_p:commands" type="text/plain">Required. Command or Commands to show, either String, DOM elements, or WinJS objects.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="hideCommands">
        <description locid="WinJS.UI.Menu.hideCommands" type="text/plain">Hide commands within this Menu</description>
        <parameter name="commands" datatype="Array">
          <description locid="WinJS.UI.AppBar.hideCommands_p:commands" type="text/plain">Required. Command or Commands to hide, either String, DOM elements, or WinJS objects.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="showOnlyCommands">
        <description locid="WinJS.UI.Menu.showOnlyCommands" type="text/plain">Show the specified commands, hiding all of the others in the Menu.</description>
        <parameter name="commands" datatype="Array">
          <description locid="WinJS.UI.AppBar.showCommands_p:commands" type="text/plain">Required. Command or Commands to show, either String, DOM elements, or WinJS objects.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="show">
        <description locid="WinJS.UI.Menu.show" type="text/plain">Shows the Menu, if hidden, regardless of other state</description>
        <parameter name="anchor" datatype="HTMLElement" p6:domElement="true" xmlns:p6="http://schemas.microsoft.com/winjs/2011">
          <description locid="WinJS.UI.Menu.show_p:anchor" type="text/plain">The DOM element, or ID of a DOM element to anchor the Menu, overriding the anchor property for this time only.</description>
        </parameter>
        <parameter name="placement" datatype="object">
          <description locid="WinJS.UI.Menu.show_p:placement" type="text/plain">The placement of the Menu to the anchor: 'auto' (default), 'top', 'bottom', 'left', or 'right'.  This parameter overrides the placement property for this show only.</description>
        </parameter>
        <parameter name="alignment" datatype="object">
          <description locid="WinJS.UI.Menu.show_p:alignment" type="text/plain">For 'top' or 'bottom' placement, the alignment of the Menu to the anchor's edge: 'center' (default), 'left', or 'right'.  This parameter overrides the alignment property for this show only.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="WinJS.UI.MenuCommand">
    <description locid="WinJS.UI.MenuCommand" type="text/plain">MenuCommands provide button, toggle button, flyout button, or separator functionality for Menus.</description>
    <constructor>
      <description locid="WinJS.UI.MenuCommand.constructor" type="text/plain">Constructs the MenuCommand control</description>
      <parameter name="element" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.MenuCommand.constructor_p:element" type="text/plain">The DOM element to be associated with the MenuCommand control.  MenuCommand will create one if null.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description locid="WinJS.UI.MenuCommand.constructor_p:options" type="text/plain">The set of options to be applied initially to the MenuCommand control.</description>
      </parameter>
      <returnType datatype="WinJS.UI.MenuCommand">
        <description locid="WinJS.UI.MenuCommand.constructor_returnValue" type="text/plain">A MenuCommand control.</description>
      </returnType>
    </constructor>
    <properties>
      <property name="id" datatype="String" required="false" blend:isAdvanced="true">
        <description locid="WinJS.UI.MenuCommand.id" type="text/plain">The Id of the MenuCommand.</description>
      </property>
      <property name="type" datatype="WinJS.UI.MenuCommand.type" required="false" readonly="true" blend:isAdvanced="true">
        <description locid="WinJS.UI.MenuCommand.type" type="text/plain">The Type of the MenuCommand, possible values are "button", "toggle", "flyout", or "separator"</description>
      </property>
      <property name="label" datatype="String" required="false">
        <description locid="WinJS.UI.MenuCommand.label" type="text/plain">The label of the MenuCommand</description>
      </property>
      <property name="onclick" datatype="Function" required="false">
        <description locid="WinJS.UI.MenuCommand.onclick" type="text/plain">The click event to call when the MenuCommand is invoked</description>
      </property>
      <property name="flyout" datatype="Object" required="false">
        <description locid="WinJS.UI.MenuCommand.flyout" type="text/plain">For flyout type MenuCommands, get returns the WinJS.UI.Flyout that this command invokes.  Set may also use the String id of the flyout to invoke, the DOM object of the flyout, or the flyout object itself</description>
      </property>
      <property name="selected" datatype="Boolean" required="false">
        <description locid="WinJS.UI.AppBarCommand.selected" type="text/plain">Set or get the selected state of a toggle button</description>
      </property>
      <property name="element" datatype="HTMLElement" required="false" hidden="true" readonly="true">
        <description locid="WinJS.UI.MenuCommand.element" type="text/plain">The DOM element the MenuCommand is attached to</description>
      </property>
      <property name="disabled" datatype="Boolean" required="false">
        <description locid="WinJS.UI.AppBarCommand.disabled" type="text/plain">Disable a command. It will get or set the HTML disabled attribute.</description>
      </property>
      <property name="hidden" datatype="Boolean" required="false" hidden="true">
        <description locid="WinJS.UI.AppBarCommand.hidden" type="text/plain">Determine if a command is currently hidden.</description>
      </property>
      <property name="extraClass" datatype="String" required="false" blend:isAdvanced="true">
        <description locid="WinJS.UI.AppBarCommand.extraClass" type="text/plain">Adds an extra CSS class during construction.</description>
      </property>
    </properties>
    <events />
    <methods>
      <method name="addEventListener">
        <description locid="WinJS.UI.AppBarCommand.addEventListener" type="text/plain">Add an event listener to the DOM element for this command</description>
        <parameter name="type" datatype="String">
          <description locid="WinJS.UI.AppBarCommand.addEventListener_p:type" type="text/plain">Required. Event type to add.</description>
        </parameter>
        <parameter name="listener" datatype="Function">
          <description locid="WinJS.UI._Overlay.addEventListener_p:listener" type="text/plain">Required. The event handler function to associate with this event.</description>
        </parameter>
        <parameter name="useCapture" datatype="Boolean">
          <description locid="WinJS.UI._Overlay.addEventListener_p:useCapture" type="text/plain">Optional. True, register for the event capturing phase.  False for the event bubbling phase.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="removeEventListener">
        <description locid="WinJS.UI.AppBarCommand.removeEventListener" type="text/plain">Remove an event listener to the DOM element for this command</description>
        <parameter name="type" datatype="String">
          <description locid="WinJS.UI.AppBarCommand.removeEventListener_p:type" type="text/plain">Required. Event type to remove.</description>
        </parameter>
        <parameter name="listener" datatype="Function">
          <description locid="WinJS.UI._Overlay.addEventListener_p:listener" type="text/plain">Required. The event handler function to associate with this event.</description>
        </parameter>
        <parameter name="useCapture" datatype="Boolean">
          <description locid="WinJS.UI._Overlay.addEventListener_p:useCapture" type="text/plain">Optional. True, register for the event capturing phase.  False for the event bubbling phase.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="WinJS.UI.SettingsFlyout">
    <ancestor datatype="WinJS.UI._Overlay" />
    <title locid="WinJS.UI.SettingsFlyout_name" type="text/plain">Settings Flyout</title>
    <description locid="WinJS.UI.SettingsFlyout" type="text/plain">The SettingsFlyout provides access to information from the Settings pane.</description>
    <constructor>
      <description locid="WinJS.UI.SettingsFlyout.constructor" type="text/plain">Constructs a SettingsFlyout control.</description>
      <parameter name="element" datatype="HTMLElement" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.SettingsFlyout.constructor_p:element" type="text/plain">The DOM element to be associated with the SettingsFlyout control.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description locid="WinJS.UI.SettingsFlyout.constructor_p:options" type="text/plain">The set of options to be applied initially to the SettingsFlyout control.</description>
      </parameter>
      <returnType datatype="WinJS.UI.SettingsFlyout">
        <description locid="WinJS.UI.SettingsFlyout.constructor_returnValue" type="text/plain">A constructed SettingsFlyout control.</description>
      </returnType>
    </constructor>
    <properties>
      <property name="width" datatype="WinJS.UI.SettingsFlyout.width" required="false">
        <description locid="WinJS.UI.SettingsFlyout.width" type="text/plain">Width of the SettingsFlyout, "narrow", or "wide".</description>
      </property>
      <property name="settingsCommandId" datatype="String" required="false">
        <description locid="WinJS.UI.SettingsFlyout.settingsCommandId" type="text/plain">Define the settings command Id for the SettingsFlyout control.</description>
      </property>
    </properties>
    <events>
      <event name="beforeshow" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.SettingsFlyout_e:beforeshow" type="text/plain">Raised just before showing a SettingsFlyout.</description>
      </event>
      <event name="aftershow" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.SettingsFlyout_e:aftershow" type="text/plain">Raised immediately after a SettingsFlyout is fully shown.</description>
      </event>
      <event name="beforehide" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.SettingsFlyout_e:beforehide" type="text/plain">Raised just before hiding a SettingsFlyout.</description>
      </event>
      <event name="afterhide" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.SettingsFlyout_e:afterhide" type="text/plain">Raised immediately after a SettingsFlyout is fully hidden.</description>
      </event>
    </events>
    <methods>
      <method name="show">
        <description locid="WinJS.UI.SettingsFlyout.show" type="text/plain">Shows the SettingsFlyout, if hidden.</description>
        <returnType datatype="*" />
      </method>
      <method name="hide">
        <description locid="WinJS.UI.SettingsFlyout.hide" type="text/plain">Hides the SettingsFlyout, if visible, regardless of other state.</description>
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="WinJS.UI.Tooltip">
    <description locid="WinJS.UI.Tooltip" type="text/plain">Displays a tooltip that can contain images and formatting.</description>
    <constructor>
      <description locid="WinJS.UI.Tooltip.constructor" type="text/plain">Creates a new Tooltip.</description>
      <parameter name="element" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.Tooltip.constructor_p:element" type="text/plain">The DOM element that hosts the Tooltip.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description locid="WinJS.UI.Tooltip.constructor_p:options" type="text/plain">An object that contains one or more property/value pairs to apply to the new control. 
 Each property of the options object corresponds to one of the control's properties or events. 
 Event names must begin with "on". For example, to provide a handler for the opened event,  
 add a property named "onopened" to the options object and set its value to the event handler.  
 This parameter is optional.</description>
      </parameter>
      <returnType datatype="WinJS.UI.Tooltip">
        <description locid="WinJS.UI.Tooltip.constructor_returnValue" type="text/plain">The new Tooltip.</description>
      </returnType>
    </constructor>
    <properties>
      <property name="innerHTML" datatype="String" required="false">
        <description locid="WinJS.UI.Tooltip.innerHTML" type="text/plain">Gets or sets the HTML content of the Tooltip.</description>
      </property>
      <property name="element" datatype="HTMLElement" required="false" hidden="true">
        <description locid="WinJS.UI.Tooltip.element" type="text/plain">Gets or sets the DOM element that hosts the Tooltip.</description>
      </property>
      <property name="contentElement" datatype="HTMLElement" required="false" blend:potentialValueSelector="div[style='display: none;']&gt;div[id], div[style='display: none;']&gt;div[class]">
        <description locid="WinJS.UI.Tooltip.contentElement" type="text/plain">Gets or sets the DOM element that is the content for the ToolTip.</description>
      </property>
      <property name="placement" datatype="WinJS.UI.Tooltip.placement" required="false">
        <description locid="WinJS.UI.Tooltip.placement" type="text/plain">Gets or sets the position for the Tooltip relative to its target element: top, bottom, left or right.</description>
      </property>
      <property name="infotip" datatype="Boolean" required="false">
        <description locid="WinJS.UI.Tooltip.infotip" type="text/plain">Gets or sets a value that specifies whether the Tooltip is an infotip, a tooltip that contains
 a lot of info and should be displayed for longer than a typical Tooltip. 
 The default value is false.</description>
      </property>
      <property name="extraClass" datatype="String" required="false" blend:isAdvanced="true">
        <description locid="WinJS.UI.Tooltip.extraClass" type="text/plain">Gets or sets additional CSS classes to apply to the Tooltip control's host element.</description>
      </property>
    </properties>
    <events>
      <event name="beforeopen" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.Tooltip_e:beforeopen" type="text/plain">Raised when the tooltip is about to appear.</description>
      </event>
      <event name="opened" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.Tooltip_e:opened" type="text/plain">Raised when the tooltip is showing.</description>
      </event>
      <event name="beforeclose" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.Tooltip_e:beforeclose" type="text/plain">Raised when the tooltip is about to become hidden.</description>
      </event>
      <event name="closed" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.Tooltip_e:close" type="text/plain">Raised when the tooltip is hidden.</description>
      </event>
    </events>
    <methods>
      <method name="addEventListener">
        <description locid="WinJS.UI.Rating.addEventListener" type="text/plain">Registers an event handler for the specified event.</description>
        <parameter name="eventName" datatype="String">
          <description locid="WinJS.UI.Rating.addEventListener_p:eventName" type="text/plain">The name of the event.</description>
        </parameter>
        <parameter name="eventCallback" datatype="Function">
          <description locid="WinJS.UI.Rating.addEventListener_p:eventCallback" type="text/plain">The event handler function to associate with this event.</description>
        </parameter>
        <parameter name="capture" datatype="Boolean">
          <description locid="WinJS.UI.Rating.addEventListener_p:capture" type="text/plain">Set to true to register the event handler for the capturing phase; set to false to register for the bubbling phase.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="removeEventListener">
        <description locid="WinJS.UI.Rating.removeEventListener" type="text/plain">Unregisters an event handler for the specified event.</description>
        <parameter name="eventName" datatype="String">
          <description locid="WinJS.UI.Rating.addEventListener_p:eventName" type="text/plain">The name of the event.</description>
        </parameter>
        <parameter name="eventCallback" datatype="Function">
          <description locid="WinJS.UI.Rating.removeEventListener_p:eventCallback" type="text/plain">The event handler function to remove.</description>
        </parameter>
        <parameter name="capture" datatype="Boolean">
          <description locid="WinJS.UI.Rating.removeEventListener_p:capture" type="text/plain">Set to true to unregister the event handler for the capturing phase; otherwise, set to false to unregister the event handler for the bubbling phase.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="open">
        <description locid="WinJS.UI.Tooltip.open" type="text/plain">Shows the Tooltip.</description>
        <parameter name="type" datatype="String">
          <description locid="WinJS.UI.Tooltip.open_p:type" type="text/plain">The type of tooltip to show: "touch", "mouseover", "mousedown", or "keyboard". The default value is "mousedown".</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="close">
        <description locid="WinJS.UI.Tooltip.close" type="text/plain">Hids the Tooltip.</description>
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="WinJS.UI.ViewBox">
    <title locid="WinJS.UI.ViewBox_name" type="text/plain">View Box</title>
    <description locid="WinJS.UI.ViewBox" type="text/plain">Scales a single child element to fill the available space without
 resizing it. This control reacts to changes in the size of the container as well as
 changes in size of the child element. For example, a media query may result in
 a change in aspect ratio.</description>
    <constructor>
      <description locid="WinJS.UI.ViewBox.constructor" type="text/plain">Initializes a new instance of the ViewBox control</description>
      <parameter name="element" datatype="HTMLElement" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description locid="WinJS.UI.ViewBox.constructor_p:element" type="text/plain">The DOM element that functions as the scaling box. This element fills 100% of the width and height allotted to it.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description locid="WinJS.UI.ViewBox.constructor_p:options" type="text/plain">The set of options to be applied initially to the ViewBox control.</description>
      </parameter>
      <returnType datatype="WinJS.UI.ViewBox">
        <description locid="WinJS.UI.ViewBox.constructor_returnValue" type="text/plain">A constructed ViewBox control.</description>
      </returnType>
    </constructor>
    <properties>
      <property name="element" datatype="HTMLElement" required="false" hidden="true">
        <description locid="WinJS.UI.ViewBox.element" type="text/plain">Gets the DOM element that functions as the scaling box.</description>
      </property>
    </properties>
    <events />
    <methods>
      <method name="forceLayout">
        <returnType datatype="*" />
      </method>
    </methods>
  </class><locale messages="ui_loc_oam.xml" />
</api>