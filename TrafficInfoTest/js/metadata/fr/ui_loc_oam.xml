<?xml version="1.0" encoding="utf-8"?>
<messagebundle>
  <msg name="WinJS.UI.StorageDataSource">Crée une source de données qui énumère une IStorageQueryResultBase.</msg>
  <msg name="WinJS.UI.StorageDataSource_p:query">Objet à énumérer. Il doit prendre en charge IStorageQueryResultBase.</msg>
  <msg name="WinJS.UI.StorageDataSource_p:options">Objet qui spécifie des options pour la source de données. Ce paramètre est optionnel. Il peut contenir les propriétés suivantes : mode : Un Windows.Storage.FileProperties.ThumbnailMode - valeur qui spécifie s'il faut demander des miniatures et le type de miniature à demander. requestedThumbnailSize : Un nombre qui spécifie la taille des miniatures. thumbnailOptions : une valeur de Windows.Storage.FileProperties.ThumbnailOptions qui spécifie des options supplémentaires pour les miniatures. waitForFileLoad : Si vous définissez cette valeur sur True, la source de données retourne des éléments uniquement après avoir chargé leurs propriétés et miniatures.</msg>
  <msg name="WinJS.UI.FlipView">Affiche une collection, telle qu'un ensemble de photos, un élément à la fois.</msg>
  <msg name="WinJS.UI.FlipView_e:datasourcecountchanged">Déclenché lorsque le nombre d'éléments dans l'itemDataSource change.</msg>
  <msg name="WinJS.UI.FlipView_e:pagevisibilitychanged">Déclenché lorsqu'une page de FlipView devient visible ou invisible.</msg>
  <msg name="WinJS.UI.FlipView_e:pageselected">Déclenché lorsque le FlipView retourne à une page.</msg>
  <msg name="WinJS.UI.FlipView_e:pagecompleted">Déclenché lorsque le FlipView retourne à une page et que sa fonction de convertisseur se termine.</msg>
  <msg name="WinJS.UI.FlipView_part:flipView">Contrôle FlipView entier.</msg>
  <msg name="WinJS.UI.FlipView_part:navigationButton">Classe générale pour tous les boutons de navigation de FlipView.</msg>
  <msg name="WinJS.UI.FlipView_part:leftNavigationButton">Bouton de navigation gauche.</msg>
  <msg name="WinJS.UI.FlipView_part:rightNavigationButton">Bouton de navigation droit.</msg>
  <msg name="WinJS.UI.FlipView_part:topNavigationButton">Bouton de navigation supérieur.</msg>
  <msg name="WinJS.UI.FlipView_part:bottomNavigationButton">Bouton de navigation inférieur.</msg>
  <msg name="WinJS.UI.FlipView.constructor">Crée un nouveau FlipView.</msg>
  <msg name="WinJS.UI.FlipView.constructor_p:element">Élément DOM qui héberge le contrôle.</msg>
  <msg name="WinJS.UI.FlipView.constructor_p:options">Objet qui contient une ou plusieurs paires propriété/valeur pour appliquer le nouveau contrôle. Chaque propriété de l'objet d'options correspond à l'une des propriétés ou à l'un des événements du contrôle. Les noms des événements doivent commencer par "on". Par exemple, pour fournir un gestionnaire pour l'événement pageselected, ajoutez une propriété nommée « onpageselected » à l'objet d'options et affectez sa valeur au gestionnaire d'événements. Ce paramètre est optionnel.</msg>
  <msg name="WinJS.UI.FlipView.constructor_returnValue">Nouveau contrôle de FlipView.</msg>
  <msg name="WinJS.UI.FlipView.next">Accède à l'élément suivant.</msg>
  <msg name="WinJS.UI.FlipView.next_returnValue">True si le FlipView commence à accéder à la page suivante ; False si le FlipView est à la dernière page ou se trouve au milieu d'une autre animation de navigation.</msg>
  <msg name="WinJS.UI.FlipView.previous">Accède à l'élément précédent.</msg>
  <msg name="WinJS.UI.FlipView.previous_returnValue">True si le FlipView commence à accéder à la page précédente ; False si le FlipView est déjà à la première page ou se trouve au milieu d'une autre animation de navigation.</msg>
  <msg name="WinJS.UI.FlipView.element">Élément DOM qui héberge le contrôle FlipView.</msg>
  <msg name="WinJS.UI.FlipView.currentPage">Obtient ou définit l'index de la page actuellement affichée. La valeur minimale est 0 et la valeur maximale est inférieure de un au total d'éléments retournés par la source de données.</msg>
  <msg name="WinJS.UI.FlipView.orientation">Obtient ou définit l’orientation de la disposition du FlipView : horizontale ou verticale.</msg>
  <msg name="WinJS.UI.FlipView.itemDataSource">Obtient ou définit la source de données qui fournit au FlipView des éléments à afficher. Le FlipView affiche un élément à la fois, chacun sur sa propre page.</msg>
  <msg name="WinJS.UI.FlipView.itemTemplate">Obtient ou définit un WinJS.Binding.Template ou une fonction qui définit le HTML pour la page de chaque élément.</msg>
  <msg name="WinJS.UI.FlipView.itemSpacing">Obtient ou définit l'espacement entre les éléments, en pixels.</msg>
  <msg name="WinJS.UI.FlipView.count">Retourne le nombre d'éléments dans l'itemDataSource de l'objet FlipView.</msg>
  <msg name="WinJS.UI.FlipView.count_returnValue">Promesse qui contient le nombre d'éléments dans la liste ou WinJS.UI.CountResult.unknown si le nombre n'est pas disponible.</msg>
  <msg name="WinJS.UI.FlipView.setCustomAnimations">Définit des animations personnalisées pour le FlipView à utiliser lors de la navigation entre les pages.</msg>
  <msg name="WinJS.UI.FlipView.setCustomAnimations_p:animations">Un objet contenant jusqu'à trois champs, un pour chaque action de navigation : suivant, précédent, et accéder. Chacun de ces champs doit être une fonction avec cette signature : fonction (outgoingPage, incomingPage). Cette fonction retourne un objet WinJS.Promise qui se termine une fois les animations terminées. Si un champ est null ou non défini, le FlipView retourne à son animation par défaut pour cette action.</msg>
  <msg name="WinJS.UI.FlipView.forceLayout">Force le FlipView à mettre à jour sa disposition. Utilisez cette fonction lorsque vous rendez le FlipView visible à nouveau après que sa propriété style.display a été définie sur "none".</msg>
  <msg name="WinJS.UI._LayoutCommon.init">Cette méthode prend en charge l'infrastructure Bibliothèque Windows pour JavaScript et n'est pas conçue pour être utilisée directement à partir de votre code.</msg>
  <msg name="WinJS.UI._LayoutCommon.setSite_p:layoutSite"></msg>
  <msg name="WinJS.UI._LayoutCommon.disableBackdrop">Obtient ou définit une valeur qui indique si la mise en page doit désactiver la fonctionnalité de fond qui évite les zones vides lors d'un panorama dans une liste virtualisée.</msg>
  <msg name="WinJS.UI._LayoutCommon.backdropColor">Obtient ou définit la couleur de remplissage pour le modèle par défaut utilisé pour les fonds. La valeur par défaut est « RVBA(155,155,155,0.23) ».</msg>
  <msg name="WinJS.UI._LayoutCommon.itemInfo">Détermine la taille de l'élément et si l'élément doit être placé dans une nouvelle colonne.</msg>
  <msg name="WinJS.UI._LayoutCommon.groupInfo">Indique si un groupe a des éléments de tailles variables.</msg>
  <msg name="WinJS.UI.GridLayout">Crée une nouvelle GridLayout.</msg>
  <msg name="WinJS.UI.GridLayout_p:options">Ensemble de propriétés et de valeurs à appliquer à la nouvelle GridLayout.</msg>
  <msg name="WinJS.UI.GridLayout_returnValue">Nouvelle GridLayout.</msg>
  <msg name="WinJS.UI.GridLayout.horizontal">Obtient une valeur qui indique si les éléments sont disposés horizontalement. Cette propriété retourne toujours la valeur True pour GridLayout.</msg>
  <msg name="WinJS.UI.GridLayout.groupHeaderPosition">Obtient ou définit la position des en-têtes de groupes par rapport à leurs éléments. La valeur par défaut est "top".</msg>
  <msg name="WinJS.UI.GridLayout.maxRows">Nombre maximal de lignes que le ListView affiche.</msg>
  <msg name="WinJS.UI.ListLayout">Crée un objet ListLayout.</msg>
  <msg name="WinJS.UI.ListLayout_p:options">Ensemble de propriétés et de valeurs à appliquer à la nouvelle ListLayout.</msg>
  <msg name="WinJS.UI.ListLayout_returnValue">Nouvel objet ListLayout.</msg>
  <msg name="WinJS.UI.ListLayout.horizontal">Obtient une valeur qui indique si les éléments sont disposés horizontalement. Cette propriété retourne toujours la valeur False pour ListLayout.</msg>
  <msg name="WinJS.UI.ListLayout.getKeyboardNavigatedItem">Cet API prend en charge l'infrastructure Bibliothèque Windows pour JavaScript et n'est pas conçu pour être utilisé directement à partir de votre code.</msg>
  <msg name="WinJS.UI.ListView">Affiche les éléments dans une liste ou une grille personnalisable.</msg>
  <msg name="WinJS.UI.ListView_e:contentanimating">Déclenché lorsque le ListView est sur le point de jouer une animation d'entrée ou de transition.</msg>
  <msg name="WinJS.UI.ListView_e:iteminvoked">Déclenché lorsque l'utilisateur tape ou clique sur un élément.</msg>
  <msg name="WinJS.UI.ListView_e:selectionchanging">Déclenché avant que les éléments soient sélectionnés ou désélectionnés.</msg>
  <msg name="WinJS.UI.ListView_e:selectionchanged">Déclenché après que les éléments sont sélectionnés ou désélectionnés.</msg>
  <msg name="WinJS.UI.ListView_e:loadingstatechanged">Déclenché lorsque l'état de chargement change.</msg>
  <msg name="WinJS.UI.ListView_e:keyboardnavigating">Déclenché lorsque l'élément ayant le focus est modifié.</msg>
  <msg name="WinJS.UI.ListView_part:listView">Contrôle ListView entier.</msg>
  <msg name="WinJS.UI.ListView_part:viewport">Fenêtre d'affichage du ListView.</msg>
  <msg name="WinJS.UI.ListView_part:surface">Zone déroulante du ListView.</msg>
  <msg name="WinJS.UI.ListView_part:item">Élément du ListView.</msg>
  <msg name="WinJS.UI.ListView_part:selectionbackground">Arrière-plan d'une coche de sélection.</msg>
  <msg name="WinJS.UI.ListView_part:selectioncheckmark">Coche de sélection.</msg>
  <msg name="WinJS.UI.ListView_part:groupHeader">En-tête d'un groupe.</msg>
  <msg name="WinJS.UI.ListView_part:progressbar">Indicateur de progression du ListView.</msg>
  <msg name="WinJS.UI.ListView.constructor">Crée un nouveau ListView.</msg>
  <msg name="WinJS.UI.ListView.constructor_p:element">Élément DOM qui héberge le contrôle ListView.</msg>
  <msg name="WinJS.UI.ListView.constructor_p:options">Objet qui contient une ou plusieurs paires propriété/valeur pour appliquer le nouveau contrôle. Chaque propriété de l'objet d'options correspond à l'une des propriétés ou à l'un des événements du contrôle. Les noms des événements doivent commencer par "on". Par exemple, pour fournir un gestionnaire pour l'événement selectionchanged, ajoutez une propriété nommée « onselectionchanged » à l'objet d'options et affectez sa valeur au gestionnaire d'événements.</msg>
  <msg name="WinJS.UI.ListView.constructor_returnValue">Nouveau ListView.</msg>
  <msg name="WinJS.UI.ListView.element">Obtient l'élément DOM qui héberge le ListView.</msg>
  <msg name="WinJS.UI.ListView.layout">Obtient ou définit un objet qui contrôle la disposition de ListView.</msg>
  <msg name="WinJS.UI.ListView.pagesToLoad">Obtient ou définit le nombre de pages à charger lorsque l'utilisateur fait défiler au delà du seuil spécifié par la propriété pagesToLoadThreshold si la propriété loadingBehavior est définie sur incremental.</msg>
  <msg name="WinJS.UI.ListView.pagesToLoadThreshold">Obtient ou définit le seuil (en pages) pour initialiser une charge incrémentielle. Lorsque le dernier élément visible se trouve dans le nombre spécifié de pages à partir de la fin de la partie chargée de la liste, et si automaticallyLoadPages a la valeur True et loadingBehavior a la valeur « incremental », le ListView initialise une charge incrémentielle.</msg>
  <msg name="WinJS.UI.ListView.groupDataSource">Obtient ou définit la source de données qui contient les groupes pour les éléments d'itemDataSource.</msg>
  <msg name="WinJS.UI.ListView.automaticallyLoadPages">Obtient ou définit une valeur qui indique si l'ensemble de pages suivant est automatiquement chargé lorsque l'utilisateur effectue un défilement au delà du nombre de pages spécifiées par la propriété pagesToLoadThreshold.</msg>
  <msg name="WinJS.UI.ListView.loadingBehavior">Obtient ou définit une valeur qui détermine le nombre d'éléments de données chargés dans le DOM.</msg>
  <msg name="WinJS.UI.ListView.selectionMode">Obtient ou définit une valeur qui spécifie le nombre d'éléments ListView que l'utilisateur peut sélectionner : « none », « single », ou « multi ».</msg>
  <msg name="WinJS.UI.ListView.tapBehavior">Obtient ou définit la façon dont le ListView réagit lorsque l'utilisateur tape ou clique sur un élément. L'action de taper ou de cliquer peut appeler l'élément, le sélectionner et l'invoquer, ou n'avoir aucun effet.</msg>
  <msg name="WinJS.UI.ListView.swipeBehavior">Obtient ou définit la façon dont le ListView réagit à l'interaction de passage. Le mouvement de passage peut sélectionner les éléments passés ou elle peut n'avoir aucun effet sur la sélection actuelle.</msg>
  <msg name="WinJS.UI.ListView.itemDataSource">Obtient ou définit la source de données fournissant les éléments pour le ListView.</msg>
  <msg name="WinJS.UI.ListView.itemTemplate">Obtient ou définit la fonction de création de modèles qui crée des éléments DOM pour chaque élément de l'itemDataSource. Chaque élément peut contenir plusieurs éléments DOM, mais nous recommandons qu'il ait un élément racine unique.</msg>
  <msg name="WinJS.UI.ListView.resetItem">Obtient ou définit la fonction appelée lorsque le ListView recycle la représentation d'un élément.</msg>
  <msg name="WinJS.UI.ListView.groupHeaderTemplate">Obtient ou définit la fonction de création de modèles qui crée des éléments DOM pour chaque en-tête de groupe dans la groupDataSource. Chaque en-tête de groupe peut contenir plusieurs éléments, mais doit avoir un élément racine unique.</msg>
  <msg name="WinJS.UI.ListView.resetGroupHeader">Obtient ou définit la fonction appelée lorsque le ListView recycle la représentation d'élément DOM d'un en-tête de groupe.</msg>
  <msg name="WinJS.UI.ListView.loadingState">Obtient une valeur qui indique si le ListView charge toujours en cours de chargement ou si le chargement est terminé. Cette propriété peut retourner une de ces valeurs : « itemsLoading », « viewPortLoaded », « itemsLoaded », ou « complete ».</msg>
  <msg name="WinJS.UI.ListView.selection">Obtient un objet ISelection qui contient les éléments actuellement sélectionnés.</msg>
  <msg name="WinJS.UI.ListView.indexOfFirstVisible">Obtient ou définit le premier élément visible. Lorsque cette propriété est définie, le ListView défile afin que l'élément de l'index spécifié soit en haut de la liste.</msg>
  <msg name="WinJS.UI.ListView.indexOfLastVisible">Obtient l'index du dernier élément visible.</msg>
  <msg name="WinJS.UI.ListView.currentItem">Obtient ou définit un objet qui indique quel élément doit obtenir le focus clavier et son mode de focus. L'objet a les propriétés suivantes : index : l'index de l'élément dans l'itemDataSource. clé : la clé de l'élément dans l'itemDataSource. hasFocus : lorsque cette propriété est obtenue, cette valeur est True si l'élément a déjà le focus ; sinon, elle est False. Lorsque cette propriété est définie, définissez cette valeur sur True si l'élément doit obtenir le focus immédiatement ; sinon, attribuez-lui la valeur False et l'élément obtiendra le focus par la suite. showFocus : True si l'élément affiche le rectangle de focus ; sinon, False.</msg>
  <msg name="WinJS.UI.ListView.zoomableView">Obtient un ZoomableView. Cet API prend en charge l'infrastructure SemanticZoom et n'est pas destinée à être utilisée directement à partir de votre code.</msg>
  <msg name="WinJS.UI.ListView.elementFromIndex">Retourne l'élément DOM représentant l'élément à l'index spécifié.</msg>
  <msg name="WinJS.UI.ListView.elementFromIndex_p:itemIndex">Index de l'élément.</msg>
  <msg name="WinJS.UI.ListView.elementFromIndex_returnValue">Élément DOM qui représente l'élément spécifié.</msg>
  <msg name="WinJS.UI.ListView.indexOfElement">Retourne l'index de l'élément que l'élément DOM spécifié affiche.</msg>
  <msg name="WinJS.UI.ListView.indexOfElement_p:element">Élément DOM qui affiche l'élément.</msg>
  <msg name="WinJS.UI.ListView.indexOfElement_returnValue">Index de l'élément que l'élément DOM spécifié affiche.</msg>
  <msg name="WinJS.UI.ListView.ensureVisible">Rend l'élément spécifié visible. ListView défile vers l'élément si nécessaire.</msg>
  <msg name="WinJS.UI.ListView.ensureVisible_p:itemIndex">Index de l'élément à afficher.</msg>
  <msg name="WinJS.UI.ListView.loadMorePages">Charge l'ensemble de pages suivant si le loadingBehavior de l'objet ListView est défini sur incremental.</msg>
  <msg name="WinJS.UI.ListView.recalculateItemPosition">Repositionne tous les éléments visibles dans le ListView pour ajuster les éléments dont la taille a changé. La plupart des applications n'auront pas jamais besoin d'appeler cette méthode.</msg>
  <msg name="WinJS.UI.ListView.forceLayout">Force le ListView à mettre à jour sa disposition. Utilisez cette fonction lorsque vous rendez le ListView visible à nouveau après avoir défini sa propriété style.display sur "none".</msg>
  <msg name="WinJS.UI.ListView.scrollPosition">Obtient ou définit la position de la barre de défilement du ListView.</msg>
  <msg name="WinJS.UI.ListView.triggerDispose">Déclenche manuellement le service de suppression ListView. En fonctionnement normal, ce service est déclenché au moment de l'instanciation ListView. Toutefois dans certains scénarios, il peut être approprié d'exécuter manuellement le service de suppression.</msg>
  <msg name="WinJS.UI._Selection.prototype.clear">Efface la sélection.</msg>
  <msg name="WinJS.UI._Selection.prototype.clear_returnValue">Promesse qui est remplie lorsque l'opération d'effacement se termine.</msg>
  <msg name="WinJS.UI._Selection.prototype.set">Efface la sélection actuelle et la remplace par les éléments spécifiés.</msg>
  <msg name="WinJS.UI._Selection.prototype.set_items">Index ou clés des éléments qui composent la sélection. Vous pouvez fournir différents types d'objets pour le paramètre d'éléments : vous pouvez spécifier un index, une clé, ou une plage d'index. Il peut également s'agir d'un tableau qui contient un ou plusieurs de ces objets.</msg>
  <msg name="WinJS.UI._Selection.prototype.set_returnValue">Promesse qui est remplie lorsque l'opération se termine.</msg>
  <msg name="WinJS.UI._Selection.prototype.add">Ajoute un ou plusieurs éléments à la sélection.</msg>
  <msg name="WinJS.UI._Selection.prototype.add_items">Index ou clés des éléments à ajouter. Vous pouvez fournir différents types d'objets pour le paramètre d'éléments : vous pouvez spécifier un index, une clé, ou une plage d'index. Il peut également s'agir d'un tableau qui contient un ou plusieurs de ces objets.</msg>
  <msg name="WinJS.UI._Selection.prototype.remove">Supprime les éléments spécifiés de la sélection.</msg>
  <msg name="WinJS.UI._Selection.prototype.remove_items">Index ou clés des éléments à supprimer. Vous pouvez fournir différents types d'objets pour le paramètre d'éléments : vous pouvez spécifier un index, une clé, ou une plage d'index. Il peut également s'agir d'un tableau qui contient un ou plusieurs de ces objets.</msg>
  <msg name="WinJS.UI.DatePicker">Permet aux utilisateurs de choisir une valeur de date.</msg>
  <msg name="WinJS.UI.DatePicker_name">Sélecteur de dates</msg>
  <msg name="WinJS.UI.DatePicker_e:change">Se produit lorsque la date actuelle change.</msg>
  <msg name="WinJS.UI.DatePicker.constructor">Initialise une nouvelle instance du contrôle DatePicker.</msg>
  <msg name="WinJS.UI.DatePicker.constructor_p:element">Élément DOM associé au contrôle DatePicker.</msg>
  <msg name="WinJS.UI.DatePicker.constructor_p:options">Ensemble d'options à appliquer au départ au contrôle DatePicker.</msg>
  <msg name="WinJS.UI.DatePicker.constructor_returnValue">Contrôle DatePicker construit.</msg>
  <msg name="WinJS.UI.DatePicker.calendar">Obtient ou définit le calendrier à utiliser.</msg>
  <msg name="WinJS.UI.DatePicker.current">Obtient ou définit l'a date actuelle du DatePicker.</msg>
  <msg name="WinJS.UI.DatePicker.disabled">Spécifie si le DatePicker est désactivé.</msg>
  <msg name="WinJS.UI.DatePicker.datePattern">Obtient ou définit le modèle d'affichage de la date.</msg>
  <msg name="WinJS.UI.DatePicker.element">Obtient l'élément DOM pour le DatePicker.</msg>
  <msg name="WinJS.UI.DatePicker.minYear">Obtient ou définit l'année grégorienne minimale disponible à la sélection.</msg>
  <msg name="WinJS.UI.DatePicker.maxYear">Obtient ou définit l'année grégorienne maximale disponible à la sélection.</msg>
  <msg name="WinJS.UI.DatePicker.monthPattern">Obtient ou définit le modèle d'affichage du mois.</msg>
  <msg name="WinJS.UI.DatePicker.yearPattern">Obtient ou définit le modèle d'affichage de l'année.</msg>
  <msg name="WinJS.UI.TimePicker">Permet aux utilisateurs de sélectionner des valeurs de temps.</msg>
  <msg name="WinJS.UI.TimePicker_name">Sélecteur de temps</msg>
  <msg name="WinJS.UI.TimePicker_e:change">Se produit lorsque l'heure est modifiée.</msg>
  <msg name="WinJS.UI.TimePicker.constructor">Initialise une nouvelle instance du contrôle TimePicker.</msg>
  <msg name="WinJS.UI.TimePicker.constructor_p:element">Élément DOM associé au contrôle TimePicker.</msg>
  <msg name="WinJS.UI.TimePicker.constructor_p:options">Ensemble d'options à appliquer au départ au contrôle TimePicker.</msg>
  <msg name="WinJS.UI.TimePicker.constructor_returnValue">Contrôle TimePicker construit.</msg>
  <msg name="WinJS.UI.TimePicker.clock">Obtient ou définit le type d'horloge à afficher (12HourClock ou 24HourClock). Sa valeur par défaut correspond au paramètre utilisateur.</msg>
  <msg name="WinJS.UI.TimePicker.current">Obtient ou définit la date (et l'heure) actuels du TimePicker.</msg>
  <msg name="WinJS.UI.TimePicker.disabled">Spécifie si le TimePicker est désactivé.</msg>
  <msg name="WinJS.UI.TimePicker.element">Obtient l'élément DOM pour le TimePicker.</msg>
  <msg name="WinJS.UI.TimePicker.hourPattern">Obtient ou définit le modèle d'affichage de l'heure.</msg>
  <msg name="WinJS.UI.TimePicker.minuteIncrement">Obtient ou définit l'incrément minute. Par exemple, « 15 » spécifie que le contrôle de minutes de TimePicker doit afficher uniquement les choix 00, 15, 30, 45.</msg>
  <msg name="WinJS.UI.TimePicker.minutePattern">Obtient ou définit le modèle d'affichage de la minute.</msg>
  <msg name="WinJS.UI.TimePicker.periodPattern">Obtient ou définit le modèle d'affichage de la période.</msg>
  <msg name="WinJS.UI.Rating">Le contrôle d'évaluation permet aux utilisateurs de fournir un numéro sur une échelle de 1 à maxRating (5 est la valeur par défaut).</msg>
  <msg name="WinJS.UI.Rating_e:previewchange">Déclenché lorsque l'utilisateur choisit une nouvelle évaluation temporaire mais n'a pas validé la modification.</msg>
  <msg name="WinJS.UI.Rating_e:cancel">Déclenché lorsque l'utilisateur termine d'interagir avec le contrôle d'évaluation sans valider une évaluation temporaire.</msg>
  <msg name="WinJS.UI.Rating_e:change">Déclenché lorsque l'utilisateur valide une modification à userRating.</msg>
  <msg name="WinJS.UI.Rating_part:rating">Contrôle entier d'évaluation.</msg>
  <msg name="WinJS.UI.Rating_part:average-empty">L'étoile est vide lorsque le contrôle d'évaluation montre l'évaluation moyenne.</msg>
  <msg name="WinJS.UI.Rating_part:average-full">L'étoile est pleine lorsque le contrôle d'évaluation montre l'évaluation moyenne.</msg>
  <msg name="WinJS.UI.Rating_part:user-empty">L'étoile est vide lorsque le contrôle d'évaluation montre l'évaluation de l'utilisateur.</msg>
  <msg name="WinJS.UI.Rating_part:user-full">L'étoile est pleine lorsque le contrôle d'évaluation montre l'évaluation de l'utilisateur.</msg>
  <msg name="WinJS.UI.Rating_part:tentative-empty">L'étoile est vide lorsque le contrôle d'évaluation montre l'évaluation temporaire.</msg>
  <msg name="WinJS.UI.Rating_part:tentative-full">L'étoile est pleine lorsque le contrôle d'évaluation montre l'évaluation temporaire.</msg>
  <msg name="WinJS.UI.Rating_part:disabled-empty">L'étoile est vide lorsque le contrôle est désactivé.</msg>
  <msg name="WinJS.UI.Rating_part:disabled-full">L'étoile est pleine lorsque le contrôle est désactivé.</msg>
  <msg name="WinJS.UI.Rating.constructor">Crée une évaluation.</msg>
  <msg name="WinJS.UI.Rating.constructor_p:element">Élément DOM qui héberge la nouvelle évaluation.</msg>
  <msg name="WinJS.UI.Rating.constructor_p:options">Objet qui contient une ou plusieurs paires propriété/valeur pour appliquer le nouveau contrôle. Chaque propriété de l'objet d'options correspond à l'une des propriétés ou à l'un des événements du contrôle. Les noms des événements doivent commencer par "on". Par exemple, pour fournir un gestionnaire pour l'événement cancel, ajoutez une propriété nommée « oncancel » à l'objet d'options et affectez sa valeur au gestionnaire d'événements. Ce paramètre est optionnel.</msg>
  <msg name="WinJS.UI.Rating.constructor_returnValue">Nouvelle évaluation.</msg>
  <msg name="WinJS.UI.Rating.maxRating">Obtient ou définit la valeur d'évaluation possible maximale. La valeur par défaut est 5.</msg>
  <msg name="WinJS.UI.Rating.userRating">Obtient ou définit l'évaluation de l'utilisateur. Cette valeur doit se trouver entre la valeur supérieure ou égale à zéro et la valeur inférieure ou égale à maxRating.</msg>
  <msg name="WinJS.UI.Rating.averageRating">Obtient ou définit l'évaluation moyenne comme valeur flottante. Cette valeur doit être [égale à zéro] OU [supérieure ou égale à 1 ET inférieure ou égale à maxRating].</msg>
  <msg name="WinJS.UI.Rating.disabled">Obtient ou définit une valeur qui indique si le contrôle est désactivé. Lorsque le contrôle est désactivé, l'utilisateur ne peut pas spécifier une nouvelle évaluation ou modifier une évaluation existante.</msg>
  <msg name="WinJS.UI.Rating.enableClear">Obtient ou définit une valeur indiquant si le contrôle permet à l'utilisateur d'effacer l'évaluation.</msg>
  <msg name="WinJS.UI.Rating.tooltipStrings">Obtient ou définit un ensemble de descriptions à afficher pour les valeurs d'évaluation dans l'info-bulle. Le tableau doit contenir une chaîne pour chaque valeur d'évaluation disponible, et elle peut contenir une chaîne facultative (à la fin du tableau) pour l'option d'évaluation de l'effacement.</msg>
  <msg name="WinJS.UI.Rating.element">Obtient l'élément DOM qui héberge l'évaluation.</msg>
  <msg name="WinJS.UI.Rating.addEventListener">Enregistre un gestionnaire d'événements pour l'événement spécifié.</msg>
  <msg name="WinJS.UI.Rating.addEventListener_p:eventName">Nom de l'événement.</msg>
  <msg name="WinJS.UI.Rating.addEventListener_p:eventCallback">Fonction du gestionnaire d'événements à associer à cet événement.</msg>
  <msg name="WinJS.UI.Rating.addEventListener_p:capture">Définie sur True pour inscrire le gestionnaire d'événements pour la phase de capture ; définie sur False pour l'inscrire pour la phase de propagation.</msg>
  <msg name="WinJS.UI.Rating.removeEventListener">Annule l'enregistrement d'un gestionnaire d'événements pour l'événement spécifié.</msg>
  <msg name="WinJS.UI.Rating.removeEventListener_p:eventCallback">Fonction du gestionnaire d'événements à supprimer.</msg>
  <msg name="WinJS.UI.Rating.removeEventListener_p:capture">Définie sur True pour annuler l'inscription du gestionnaire d'événements pour la phase de capture ; sinon, définie sur False pour annuler l'inscription du gestionnaire d'événements pour la phase de propagation.</msg>
  <msg name="WinJS.UI.ToggleSwitch">Contrôle qui permet à l'utilisateur d'activer ou de désactiver une option.</msg>
  <msg name="WinJS.UI.ToggleSwitch_e:change">Déclenché lorsque le commutateur est placé sur activé (checked a la valeur true) ou désactivé (checked a la valeur false).</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:toggle">Contrôle ToggleSwitch entier.</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:switch">Curseur qui permet à l'utilisateur de basculer l'état du ToggleSwitch.</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:title">Texte principal pour le contrôle du ToggleSwitch.</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:label-on">Texte pour lorsque le contrôle est activé.</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:label-off:">Texte pour lorsque le contrôle est désactivé.</msg>
  <msg name="WinJS.UI.ToggleSwitch.constructor">Crée un ToggleSwitch.</msg>
  <msg name="WinJS.UI.ToggleSwitch.constructor_p:element">Élément DOM qui héberge le ToggleSwitch.</msg>
  <msg name="WinJS.UI.ToggleSwitch.constructor_p:options">Objet qui contient une ou plusieurs paires propriété/valeur pour appliquer le nouveau contrôle. Chaque propriété de l'objet d'options correspond à l'une des propriétés ou à l'un des événements du contrôle. Les noms des événements doivent commencer par "on". Par exemple, pour fournir un gestionnaire pour l'événement change, ajoutez une propriété nommée « onchange » à l'objet d'options et affectez sa valeur au gestionnaire d'événements. Ce paramètre est optionnel.</msg>
  <msg name="WinJS.UI.ToggleSwitch.constructor_returnValue">Nouveau ToggleSwitch.</msg>
  <msg name="WinJS.UI.ToggleSwitch.checked">Obtient ou définit l'information qui indique si le contrôle est activé (checked a la valeur true) ou désactivé (checked a la valeur false).</msg>
  <msg name="WinJS.UI.ToggleSwitch.disabled">Obtient ou définit une valeur qui indique si le contrôle est désactivé.</msg>
  <msg name="WinJS.UI.ToggleSwitch.element">Élément DOM qui héberge le contrôle ToggleSwitch.</msg>
  <msg name="WinJS.UI.ToggleSwitch.labelOn">Obtient ou définit le texte qui s'affiche lorsque le contrôle est activé (checked a la valeur true). La valeur par défaut est « On ».</msg>
  <msg name="WinJS.UI.ToggleSwitch.labelOff">Obtient ou définit le texte qui s'affiche lorsque le contrôle est désactivé (checked a la valeur false). La valeur par défaut est « Off ».</msg>
  <msg name="WinJS.UI.ToggleSwitch.title">Obtient ou définit le texte principal pour le contrôle ToggleSwitch. Ce texte est toujours affiché, que le contrôle soit activé ou désactivé.</msg>
  <msg name="WinJS.UI.SemanticZoom">Permet à l'utilisateur de zoomer entre deux vues différentes fournies par deux contrôles enfants. Un contrôle enfant fournit la vue zoom arrière et l'autre fournit la vue zoom avant.</msg>
  <msg name="WinJS.UI.SemanticZoom_part:semanticZoom">Contrôle SemanticZoom entier.</msg>
  <msg name="WinJS.UI.SemanticZoom.constructor">Crée un SemanticZoom.</msg>
  <msg name="WinJS.UI.SemanticZoom.constructor_p:element">Élément DOM qui héberge le SemanticZoom.</msg>
  <msg name="WinJS.UI.SemanticZoom.constructor_p:options">Objet qui contient une ou plusieurs paires propriété/valeur pour appliquer le nouveau contrôle. Chaque propriété de l'objet d'options correspond à l'une des propriétés ou à l'un des événements du contrôle. Ce paramètre est optionnel.</msg>
  <msg name="WinJS.UI.SemanticZoom.constructor_returnValue">Nouveau contrôle SemanticZoom.</msg>
  <msg name="WinJS.UI.SemanticZoom.element">Élément DOM qui héberge le contrôle SemanticZoom.</msg>
  <msg name="WinJS.UI.SemanticZoom.enableButton">Obtient ou définit une valeur qui spécifie, que le bouton de zoom sémantique doit s'afficher ou non</msg>
  <msg name="WinJS.UI.SemanticZoom.zoomedOut">Obtient ou définit une valeur qui indique si la vue zoom arrière est actuellement affichée.</msg>
  <msg name="WinJS.UI.SemanticZoom.zoomFactor">Obtient ou définit une valeur comprise entre 0,2 et 0,85 qui spécifie l'échelle de la vue zoom arrière. La valeur par défaut est 0.65.</msg>
  <msg name="WinJS.UI.SemanticZoom.locked">Obtient ou définit une valeur qui indique si SemanticZoom est verrouillé et que le zoom entre les vues est désactivé.</msg>
  <msg name="WinJS.UI.SemanticZoom.forceLayout">Force le SemanticZoom à mettre à jour sa disposition. Utilisez cette fonction lorsque vous rendez le SemanticZoom visible à nouveau après que sa propriété style.display a été définie sur "none".</msg>
  <msg name="WinJS.UI._Overlay">Construit le contrôle Overlay et l'associe à l'élément DOM sous-jacent.</msg>
  <msg name="WinJS.UI._Overlay_p:element">Élément DOM à associer au contrôle Overlay.</msg>
  <msg name="WinJS.UI._Overlay_p:options">Ensemble d'options à appliquer au départ au contrôle Overlay.</msg>
  <msg name="WinJS.UI._Overlay_returnValue">Contrôle Overlay entièrement construit.</msg>
  <msg name="WinJS.UI._Overlay.element">Élément DOM auquel l'Overlay est attaché</msg>
  <msg name="WinJS.UI._Overlay.disabled">Désactive un Overlay, en définissant ou en obtenant l'attribut disabled du HTML. Lorsqu'il est désactivé, l'Overlay ne s'affiche plus avec show(), et sera masqué s'il est actuellement visible.</msg>
  <msg name="WinJS.UI._Overlay.show">Affiche l'Overlay, s'il est masqué, indépendamment de l'autre état</msg>
  <msg name="WinJS.UI._Overlay.hide">Masque l'Overlay, s'il est visible, indépendamment de l'autre état</msg>
  <msg name="WinJS.UI._Overlay.hidden">Lecture seule, True si un chevauchement n'est pas actuellement visible.</msg>
  <msg name="WinJS.UI._Overlay.addEventListener">Ajoutez un écouteur d'événements à l'élément DOM pour cet Overlay</msg>
  <msg name="WinJS.UI._Overlay.addEventListener_p:type">Requis. Type d'événement à ajouter, « beforehide », « afterhide », « beforeshow », ou « aftershow »</msg>
  <msg name="WinJS.UI._Overlay.addEventListener_p:listener">Requis. Fonction du gestionnaire d'événements à associer à cet événement.</msg>
  <msg name="WinJS.UI._Overlay.addEventListener_p:useCapture">Optionnel. True, inscription à la phase de capture de l'événement. False pour la phase de propagation de l'événement.</msg>
  <msg name="WinJS.UI._Overlay.removeEventListener">Supprime un écouteur d'événements à l'élément DOM pour cet Overlay</msg>
  <msg name="WinJS.UI._Overlay.removeEventListener_p:type">Requis. Type d'événement à supprimer, « beforehide », « afterhide », « beforeshow », ou « aftershow »</msg>
  <msg name="WinJS.UI.AppBarCommand">Les AppBarCommands fournissent le bouton, le bouton bascule, le bouton volant, ou la fonctionnalité de séparateur pour AppBars.</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommand">Contrôle AppBarCommand lui-même</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandIcon">Zone d'icône de l'AppBarCommand</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandImage">Mise en forme de l'image de l'icône de l'AppBarCommand</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandRing">Boucle de l'icône de l'AppBarCommand</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandLabel">Étiquette de l'AppBarCommand</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor">Construit le contrôle AppBarCommand</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor_p:element">Élément DOM à associer au contrôle AppBarCommand. AppBarCommand crée une valeur de un si null.</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor_p:options">Ensemble d'options à appliquer au départ au contrôle AppBarCommand.</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor_returnValue">Contrôle AppBarCommand.</msg>
  <msg name="WinJS.UI.AppBarCommand.id">ID d'AppBarCommand.</msg>
  <msg name="WinJS.UI.AppBarCommand.type">Type d'AppBarCommand, les valeurs possibles sont « button », « toggle », « flyout » ou « separator »</msg>
  <msg name="WinJS.UI.AppBarCommand.label">Étiquette de l'AppBarCommand</msg>
  <msg name="WinJS.UI.AppBarCommand.icon">Icône de l'AppBarCommand</msg>
  <msg name="WinJS.UI.AppBarCommand.onclick">Événement de clic à appeler lorsque l'AppBarCommand est appelé</msg>
  <msg name="WinJS.UI.AppBarCommand.flyout">Pour les AppBarCommands de type volant, la méthode Get retourne le WinJS.UI.Flyout que cette commande appelle. La méthode Set peut également utiliser l'ID de chaîne de l'élément volant à appeler, l'objet DOM de l'élément volant, ou l'objet volant lui-même</msg>
  <msg name="WinJS.UI.AppBarCommand.section">Définit ou obtient la section pour placer le bouton dans « global » ou « selection »</msg>
  <msg name="WinJS.UI.AppBarCommand.tooltip">Texte info-bulle de l'AppBarCommand</msg>
  <msg name="WinJS.UI.AppBarCommand.selected">Définit ou obtient l'état sélectionné d'un bouton bascule</msg>
  <msg name="WinJS.UI.AppBarCommand.element">Élément DOM auquel l'AppBarCommand est attaché</msg>
  <msg name="WinJS.UI.AppBarCommand.disabled">Désactive une commande. Il obtiendra ou définira l'attribut de désactivation de l'HTML.</msg>
  <msg name="WinJS.UI.AppBarCommand.hidden">Déterminer si une commande est actuellement masquée.</msg>
  <msg name="WinJS.UI.AppBarCommand.addEventListener">Ajoute un écouteur d'événements à l'élément DOM pour cette commande</msg>
  <msg name="WinJS.UI.AppBarCommand.addEventListener_p:type">Requis. Type d'événement à ajouter.</msg>
  <msg name="WinJS.UI.AppBarCommand.removeEventListener">Supprime un écouteur d'événements à l'élément DOM pour cette commande</msg>
  <msg name="WinJS.UI.AppBarCommand.removeEventListener_p:type">Requis. Type d'événement à supprimer.</msg>
  <msg name="WinJS.UI.AppBarCommand.extraClass">Ajoute une classe CSS supplémentaire pendant la construction.</msg>
  <msg name="WinJS.UI.AppBar">Le contrôle AppBar fournit une surface de AppBarCommands ou d'autres informations que l'utilisateur peut afficher ou masquer.</msg>
  <msg name="WinJS.UI.AppBar_e:beforeshow">Déclenché juste avant d'afficher un AppBar.</msg>
  <msg name="WinJS.UI.AppBar_e:aftershow">Déclenché juste après l'affichage complet d'un AppBar.</msg>
  <msg name="WinJS.UI.AppBar_e:beforehide">Déclenché juste avant de masquer un AppBar.</msg>
  <msg name="WinJS.UI.AppBar_e:afterhide">Déclenché juste après le masquage complet d'un AppBar.</msg>
  <msg name="WinJS.UI.AppBar_part:appbar">Contrôle AppBar lui-même</msg>
  <msg name="WinJS.UI.AppBar_part:appBarCustom">Style pour un AppBar de disposition personnalisée</msg>
  <msg name="WinJS.UI.AppBar.constructor">Construit le contrôle d'AppBar</msg>
  <msg name="WinJS.UI.AppBar.constructor_p:element">Élément DOM à associer au contrôle AppBar.</msg>
  <msg name="WinJS.UI.AppBar.constructor_p:options">Ensemble d'options à appliquer au départ au contrôle AppBar.</msg>
  <msg name="WinJS.UI.AppBar.constructor_returnValue">Contrôle AppBar construit.</msg>
  <msg name="WinJS.UI.AppBar.placement">Placement de l'AppBar sur l'affichage. Les valeurs sont « top » ou « bottom ».</msg>
  <msg name="WinJS.UI.AppBar.layout">Disposition du contenu de l'AppBar, « commands » ou « custom ».</msg>
  <msg name="WinJS.UI.AppBar.sticky">Si l'AppBar est en mode pense-bête.</msg>
  <msg name="WinJS.UI.AppBar.commands">Commandes pour l'AppBar, contient un tableau d'options d'AppBarCommand.</msg>
  <msg name="WinJS.UI.AppBar.getCommandById">Récupère la commande avec l'ID spécifié depuis cet AppBar. Si plusieurs commandes sont trouvées, toutes sont retournées.</msg>
  <msg name="WinJS.UI.AppBar.getCommandById_p:id">ID de la commande à retourner.</msg>
  <msg name="WinJS.UI.AppBar.getCommandById_returnValue">Commande trouvée, tableau de commandes si plusieurs ont le même ID, ou null si aucune commande n'est trouvée avec cet ID.</msg>
  <msg name="WinJS.UI.AppBar.showCommands">Affiche les commandes dans cet AppBar</msg>
  <msg name="WinJS.UI.AppBar.showCommands_p:commands">Requis. Commande ou commandes à afficher, chaîne, éléments DOM, ou objets WinJS.</msg>
  <msg name="WinJS.UI.AppBar.hideCommands">Masque les commandes dans cet AppBar</msg>
  <msg name="WinJS.UI.AppBar.hideCommands_p:commands">Requis. Commande ou commandes à masquer, chaîne, éléments DOM, ou objets WinJS.</msg>
  <msg name="WinJS.UI.AppBar.showOnlyCommands">Affiche les commandes spécifiées, en masquant toutes les autres dans l'AppBar.</msg>
  <msg name="WinJS.UI.AppBar.show">Affiche l'AppBar, si elle est masquée, indépendamment de l'autre état</msg>
  <msg name="WinJS.UI.AppBar.hide">Masque l'AppBar, si elle est visible, indépendamment de l'autre état</msg>
  <msg name="WinJS.UI.Flyout">Les contrôles volants fournissent des surfaces temporaires pour de petites quantités de contenu.</msg>
  <msg name="WinJS.UI.Flyout_name">Menu volant</msg>
  <msg name="WinJS.UI.Flyout_e:beforeshow">Déclenché juste avant d'afficher un menu volant.</msg>
  <msg name="WinJS.UI.Flyout_e:aftershow">Déclenché juste après qu'un menu volant est entièrement affiché.</msg>
  <msg name="WinJS.UI.Flyout_e:beforehide">Déclenché juste avant de masquer un menu volant.</msg>
  <msg name="WinJS.UI.Flyout_e:afterhide">Déclenché juste après qu'un menu volant est entièrement masqué.</msg>
  <msg name="WinJS.UI.Flyout_part:flyout">Contrôle Flyout lui-même</msg>
  <msg name="WinJS.UI.Flyout.constructor">Construit le contrôle Flyout et l'associe à l'élément DOM sous-jacent.</msg>
  <msg name="WinJS.UI.Flyout.constructor_p:element">Élément DOM à associer au contrôle Flyout.</msg>
  <msg name="WinJS.UI.Flyout.constructor_p:options">Ensemble d'options à appliquer au départ au contrôle Flyout.</msg>
  <msg name="WinJS.UI.Flyout.constructor_returnValue">Contrôle Flyout entièrement construit.</msg>
  <msg name="WinJS.UI.Flyout.anchor">L'élément d'ancrage est l'élément HTML d'où le menu volant provient et par rapport auquel il est positionné. Vous pouvez le substituer avec l'ancre que vous passez dans la méthode show().</msg>
  <msg name="WinJS.UI.Flyout.placement">Placement par défaut à utiliser pour ce menu volant, remplacé par positionnement passé dans la fonction show().</msg>
  <msg name="WinJS.UI.Flyout.alignment">Alignement par défaut à utiliser pour ce menu volant, remplacé par alignement passé dans la fonction show().</msg>
  <msg name="WinJS.UI.Flyout.show">Affiche le Flyout, s'il est masqué, indépendamment de l'autre état</msg>
  <msg name="WinJS.UI.Flyout.show_p:anchor">Élément DOM, ou ID d'un élément DOM pour ancrer le menu volant, en substituant la propriété d'ancrage pour cette fois uniquement.</msg>
  <msg name="WinJS.UI.Flyout.show_p:placement">Positionnement du menu volant par rapport à l'ancre : « auto » (valeur par défaut), « top », « bottom », « left », ou « right ». Ce paramètre remplace la propriété de positionnement pour cet affichage uniquement.</msg>
  <msg name="WinJS.UI.Flyout.show:alignment">Pour le positionnement « top » ou « bottom », alignement du Flyout au bord de l'ancre : « center » (valeur par défaut), « left », ou « right ». Ce paramètre remplace la propriété d'alignement pour cet affichage uniquement.</msg>
  <msg name="WinJS.UI.Flyout.hide">Masque le Flyout, s'il est visible, indépendamment de l'autre état</msg>
  <msg name="WinJS.UI.Menu">Le contrôle Menu fournit MenuCommands à l'utilisateur.</msg>
  <msg name="WinJS.UI.Menu_name">Menu</msg>
  <msg name="WinJS.UI.Menu_e:beforeshow">Déclenché juste avant d'afficher un menu.</msg>
  <msg name="WinJS.UI.Menu_e:aftershow">Déclenché juste après qu'un menu est entièrement affiché.</msg>
  <msg name="WinJS.UI.Menu_e:beforehide">Déclenché juste avant de masquer un menu.</msg>
  <msg name="WinJS.UI.Menu_e:afterhide">Déclenché juste après qu'un menu est entièrement masqué.</msg>
  <msg name="WinJS.UI.Menu_part:menu">Contrôle Menu lui-même</msg>
  <msg name="WinJS.UI.Menu.constructor">Construit le contrôle Menu et l'associe à l'élément DOM sous-jacent.</msg>
  <msg name="WinJS.UI.Menu.constructor_p:element">Élément DOM à associer au contrôle Menu.</msg>
  <msg name="WinJS.UI.Menu.constructor_p:options">Ensemble d'options à appliquer au départ au contrôle Menu.</msg>
  <msg name="WinJS.UI.Menu.constructor_returnValue">Contrôle Menu complètement construit.</msg>
  <msg name="WinJS.UI.Menu.commands">Commandes du menu, contient un tableau d'options MenuCommand.</msg>
  <msg name="WinJS.UI.Menu.getCommandById">Récupère la commande avec l'ID spécifié depuis ce Menu. Si plusieurs commandes sont trouvées, toutes sont retournées.</msg>
  <msg name="WinJS.UI.Menu.showCommands">Affiche les commandes dans ce Menu</msg>
  <msg name="WinJS.UI.Menu.hideCommands">Masque les commandes dans ce Menu</msg>
  <msg name="WinJS.UI.Menu.showOnlyCommands">Affiche les commandes spécifiées, en masquant toutes les autres dans le Menu.</msg>
  <msg name="WinJS.UI.Menu.show">Affiche le Menu, s'il est masqué, indépendamment de l'autre état</msg>
  <msg name="WinJS.UI.Menu.show_p:anchor">Élément DOM, ou ID d'un élément DOM pour ancrer le Menu, en substituant la propriété d'ancrage pour cette fois uniquement.</msg>
  <msg name="WinJS.UI.Menu.show_p:placement">Positionnement du Menu par rapport à l'ancre : « auto » (valeur par défaut), « top », « bottom », « left », ou « right ». Ce paramètre remplace la propriété de positionnement pour cet affichage uniquement.</msg>
  <msg name="WinJS.UI.Menu.show_p:alignment">Pour le positionnement « top » ou « bottom », alignement du Menu au bord de l'ancre : « center » (valeur par défaut), « left », ou « right ». Ce paramètre remplace la propriété d'alignement pour cet affichage uniquement.</msg>
  <msg name="WinJS.UI.MenuCommand">Les MenuCommands fournissent le bouton, le bouton bascule, le bouton volant, ou la fonctionnalité de séparateur pour Menus.</msg>
  <msg name="WinJS.UI.MenuCommand_name">Contrôle MenuCommand lui-même</msg>
  <msg name="WinJS.UI.MenuCommand.constructor">Construit le contrôle MenuCommand</msg>
  <msg name="WinJS.UI.MenuCommand.constructor_p:element">Élément DOM à associer au contrôle MenuCommand. MenuCommand crée une valeur de un si null.</msg>
  <msg name="WinJS.UI.MenuCommand.constructor_p:options">Ensemble d'options à appliquer au départ au contrôle MenuCommand.</msg>
  <msg name="WinJS.UI.MenuCommand.constructor_returnValue">Contrôle MenuCommand.</msg>
  <msg name="WinJS.UI.MenuCommand.id">ID de MenuCommand.</msg>
  <msg name="WinJS.UI.MenuCommand.type">Type de MenuCommand, les valeurs possibles sont « button », « toggle », « flyout » ou « separator »</msg>
  <msg name="WinJS.UI.MenuCommand.label">Étiquette de MenuCommand</msg>
  <msg name="WinJS.UI.MenuCommand.onclick">Événement de clic à appeler lorsque le MenuCommand est appelé</msg>
  <msg name="WinJS.UI.MenuCommand.flyout">Pour les MenuCommands de type volant, la méthode Get retourne le WinJS.UI.Flyout que cette commande appelle. La méthode Set peut également utiliser l'ID de chaîne de l'élément volant à appeler, l'objet DOM de l'élément volant, ou l'objet volant lui-même</msg>
  <msg name="WinJS.UI.MenuCommand.element">Élément DOM auquel le MenuCommand est attaché</msg>
  <msg name="WinJS.UI.SettingsFlyout">Le SettingsFlyout fournit l'accès aux données depuis le volet Settings.</msg>
  <msg name="WinJS.UI.SettingsFlyout_name">Menu volant Settings</msg>
  <msg name="WinJS.UI.SettingsFlyout_e:beforeshow">Déclenché juste avant d'afficher un SettingsFlyout.</msg>
  <msg name="WinJS.UI.SettingsFlyout_e:aftershow">Déclenché juste après qu'un SettingsFlyout est entièrement affiché.</msg>
  <msg name="WinJS.UI.SettingsFlyout_e:beforehide">Déclenché juste avant de masquer un SettingsFlyout.</msg>
  <msg name="WinJS.UI.SettingsFlyout_e:afterhide">Déclenché juste après qu'un SettingsFlyout est entièrement masqué.</msg>
  <msg name="WinJS.UI.SettingsFlyout_part:settings">Contrôle SettingsFlyout lui-même.</msg>
  <msg name="WinJS.UI.SettingsFlyout.constructor">Construit un contrôle SettingsFlyout.</msg>
  <msg name="WinJS.UI.SettingsFlyout.constructor_p:element">Élément DOM à associer au contrôle SettingsFlyout.</msg>
  <msg name="WinJS.UI.SettingsFlyout.constructor_p:options">Ensemble d'options à appliquer au départ au contrôle SettingsFlyout.</msg>
  <msg name="WinJS.UI.SettingsFlyout.constructor_returnValue">Contrôle SettingsFlyout construit.</msg>
  <msg name="WinJS.UI.SettingsFlyout.width">Largeur du SettingsFlyout, « narrow, » ou « wide ».</msg>
  <msg name="WinJS.UI.SettingsFlyout.settingsCommandId">Définit l'ID de commande de paramètres pour le contrôle SettingsFlyout.</msg>
  <msg name="WinJS.UI.SettingsFlyout.show">Affiche la SettingsFlyout, si masqué.</msg>
  <msg name="WinJS.UI.SettingsFlyout.hide">Masque le SettingsFlyout, s'il est visible, indépendamment de l'autre état.</msg>
  <msg name="WinJS.UI.Tooltip">Affiche une info-bulle qui peut contenir des images et une mise en forme.</msg>
  <msg name="WinJS.UI.Tooltip_e:beforeopen">Déclenché lorsque l'info-bulle est sur le point d'apparaître.</msg>
  <msg name="WinJS.UI.Tooltip_e:opened">Déclenché lorsque l'info-bulle s'affiche.</msg>
  <msg name="WinJS.UI.Tooltip_e:beforeclose">Déclenché lorsque l'info-bulle est sur le point de devenir masquée.</msg>
  <msg name="WinJS.UI.Tooltip_e:close">Déclenché lorsque l'info-bulle est masquée.</msg>
  <msg name="WinJS.UI.Tooltip_e:tooltip">Contrôle ToolTip complet.</msg>
  <msg name="WinJS.UI.Tooltip.constructor">Crée un Tooltip.</msg>
  <msg name="WinJS.UI.Tooltip.constructor_p:element">l'élément DOM qui héberge le Tooltip.</msg>
  <msg name="WinJS.UI.Tooltip.constructor_p:options">Objet qui contient une ou plusieurs paires propriété/valeur pour appliquer le nouveau contrôle. Chaque propriété de l'objet d'options correspond à l'une des propriétés ou à l'un des événements du contrôle. Les noms des événements doivent commencer par "on". Par exemple, pour fournir un gestionnaire pour l'événement opened, ajoutez une propriété nommée « onopened » à l'objet d'options et affectez sa valeur au gestionnaire d'événements. Ce paramètre est optionnel.</msg>
  <msg name="WinJS.UI.Tooltip.constructor_returnValue">Nouveau Tooltip.</msg>
  <msg name="WinJS.UI.Tooltip.innerHTML">Obtient ou définit le contenu HTML du Tooltip.</msg>
  <msg name="WinJS.UI.Tooltip.element">Obtient ou définit l’élément DOM qui héberge le Tooltip.</msg>
  <msg name="WinJS.UI.Tooltip.contentElement">Obtient ou définit l'élément DOM qui est le contenu du Tooltip.</msg>
  <msg name="WinJS.UI.Tooltip.placement">Obtient ou définit la position du Tooltip par rapport à son élément cible : en haut, en bas, à gauche ou à droite.</msg>
  <msg name="WinJS.UI.Tooltip.infotip">Obtient ou définit une valeur qui indique si le Tooltip est une info-bulle qui contient beaucoup d'informations et doit être affichée plus longtemps qu'une info-bulle classique. La valeur par défaut est false.</msg>
  <msg name="WinJS.UI.Tooltip.extraClass">Obtient ou définit des classes supplémentaires CSS à appliquer à l'élément hôte du contrôle Tooltip.</msg>
  <msg name="WinJS.UI.Tooltip.open">Affiche le Tooltip.</msg>
  <msg name="WinJS.UI.Tooltip.open_p:type">Type d'info-bulle à afficher : « touch », « mouseover », « mousedown », ou « keyboard ». La valeur par défaut est "mousedown".</msg>
  <msg name="WinJS.UI.Tooltip.close">Masque le Tooltip.</msg>
  <msg name="WinJS.UI.ViewBox">Met à l'échelle un élément enfant unique pour remplir l'espace disponible sans le redimensionner. Ce contrôle réagit aux modifications de la taille du conteneur ainsi qu'aux modifications en taille de l'élément enfant. Par exemple, une requête du média peut entraîner une modification des proportions.</msg>
  <msg name="WinJS.UI.ViewBox_name">Zone d'affichage</msg>
  <msg name="WinJS.UI.ViewBox.constructor">Initialise une nouvelle instance du contrôle ViewBox.</msg>
  <msg name="WinJS.UI.ViewBox.constructor_p:element">Élément DOM qui s'exécute en tant que zone de mise à l'échelle. Cet élément remplit 100% de la largeur et de la hauteur allouée à celui-ci.</msg>
  <msg name="WinJS.UI.ViewBox.constructor_p:options">Ensemble d'options à appliquer au départ au contrôle ViewBox.</msg>
  <msg name="WinJS.UI.ViewBox.constructor_returnValue">Contrôle ViewBox construit.</msg>
  <msg name="WinJS.UI.ViewBox.element">Obtient l'élément DOM qui s'exécute en tant que zone de mise à l'échelle.</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation">Crée une animation de développement. Après avoir créé l'objet ExpandAnimation, modifiez le document pour déplacer les éléments dans leurs nouveaux emplacements, puis appelez la méthode à exécuter sur l'objet ExpandAnimation.</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation_p:revealed">Élément unique ou collection d'éléments qui ont été affichés.</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation_p:affected">Élément unique ou collection d'éléments dont les positions ont été affectées par le développement.</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation_returnValue">L'objet ExpandAnimation qui exécute une méthode retourne une promesse qui se termine lorsque l'animation est terminée.</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation">Crée une animation de réduction. Après avoir créé l'objet CollapseAnimation, modifiez le document pour déplacer les éléments dans leurs nouveaux emplacements, puis appelez la méthode à exécuter sur l'objet CollapseAnimation.</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation_p:hidden">Élément unique ou collection d'éléments supprimés de l'affichage. Lorsque l'animation est terminée, l'application doit masquer les éléments ou les supprimer du document.</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation_p:affected">Élément unique ou collection d'éléments dont les positions ont été affectées par la réduction.</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation_returnValue">L'objet CollapseAnimation qui exécute une méthode retourne une promesse qui se termine lorsque l'animation est terminée.</msg>
  <msg name="WinJS.UI.Animation.createRepositionAnimation">Crée une animation de repositionnement. Après avoir créé l'objet RepositionAnimation, modifiez le document pour déplacer les éléments dans leurs nouveaux emplacements, puis appelez la méthode à exécuter sur l'objet RepositionAnimation.</msg>
  <msg name="WinJS.UI.Animation.createRepositionAnimation_p:element">Élément unique ou collection d'éléments qui ont été repositionnés.</msg>
  <msg name="WinJS.UI.Animation.createRepositionAnimation_returnValue">L'objet RepositionAnimation qui exécute une méthode retourne une promesse qui se termine lorsque l'animation est terminée.</msg>
  <msg name="WinJS.UI.Animation.fadeIn">Exécute une animation d'apparition en fondu.</msg>
  <msg name="WinJS.UI.Animation.fadeIn_p:element">Élément unique ou collection d'éléments à faire apparaître en fondu. À la fin de l'animation, l'opacité des éléments est de 1.</msg>
  <msg name="WinJS.UI.Animation.fadeIn_returnValue">Objet de promesse qui se termine lorsque l'animation est terminée.</msg>
  <msg name="WinJS.UI.Animation.fadeOut">Exécute une animation de disparition en fondu.</msg>
  <msg name="WinJS.UI.Animation.fadeOut_p:element">Élément unique ou collection d'éléments à faire disparaître en fondu. À la fin de l'animation, l'opacité des éléments est de 0.</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation">Crée une animation pour ajouter à une liste. Après avoir créé l'objet AddToListAnimation, modifiez le document pour déplacer les éléments dans leurs nouveaux emplacements, puis appelez la méthode à exécuter sur l'objet AddToListAnimation.</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation_p:added">Élément unique ou collection d'éléments qui ont été ajoutés.</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation_p:affected">Élément unique ou collection d'éléments dont les positions ont été affectées par l'ajout.</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation_returnValue">L'objet AddToListAnimation qui exécute une méthode retourne une promesse qui se termine lorsque l'animation est terminée.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation">Crée une animation de suppression d'une liste. Après avoir créé l'objet DeleteFromListAnimation, modifiez le document pour refléter la suppression, puis appelez la méthode à exécuter sur l'objet DeleteFromListAnimation.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation_p:deleted">Élément unique ou collection d'éléments qui seront supprimés. Lorsque l'animation est terminée, l'application doit masquer les éléments ou les supprimer du document.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation_p:remaining">Élément unique ou collection d'éléments dont les positions ont été affectées par la suppression.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation_returnValue">L'objet DeleteFromListAnimation qui exécute une méthode retourne une promesse qui se termine lorsque l'animation est terminée.</msg>
  <msg name="WinJS.UI.Animation.createAddToSearchListAnimation">Crée une animation pour ajouter à la liste des résultats de la recherche. Cela revient à un AddToListAnimation, mais plus rapide. Après avoir créé l'objet AddToSearchListAnimation, modifiez le document pour déplacer les éléments dans leurs nouveaux emplacements, puis appelez la méthode à exécuter sur l'objet AddToSearchListAnimation.</msg>
  <msg name="WinJS.UI.Animation.createAddToSearchListAnimation_returnValue">L'objet AddToSearchListAnimation qui exécute une méthode retourne une promesse qui se termine lorsque l'animation est terminée.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromSearchListAnimation">Crée une animation de suppression d'une liste de résultats de la recherche. Cela revient à un DeleteFromListAnimation, mais plus rapide. Après avoir créé l'objet DeleteFromListAnimation, modifiez le document pour déplacer les éléments dans leurs nouveaux emplacements, puis appelez la méthode à exécuter sur l'objet DeleteFromListAnimation.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromSearchListAnimation_returnValue">L'objet DeleteFromListAnimation qui exécute une méthode retourne une promesse qui se termine lorsque l'animation est terminée.</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI">Fait glisser un élément ou des éléments vers leur position au bord de l'écran. Cette animation est conçue pour un petit objet comme un appbar.</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI_p:element">Élément unique ou collection d'éléments à faire glisser vers sa position. Les éléments doivent être à leurs positions finales lorsque la fonction est appelée.</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI_p:offset">Tableau de l'objet offset facultatif ou de la collection d'objets offset décrivant le point de départ de l'animation. Si le nombre d'objets offset est inférieur à la longueur du paramètre d'élément, la dernière valeur est répétée pour tous les éléments restants. Si ce paramètre est omis, la valeur par défaut est utilisée.</msg>
  <msg name="WinJS.UI.Animation.showPanel">Fait glisser un élément ou des éléments vers leur position au bord de l'écran. Cette animation est conçue pour un objet volumineux comme un clavier.</msg>
  <msg name="WinJS.UI.Animation.showPanel_returnValue">Objet de promesse</msg>
  <msg name="WinJS.UI.Animation.hideEdgeUI">Fait glisser un élément ou des éléments vers leur position hors de l'écran. Cette animation est conçue pour un petit objet comme un appbar.</msg>
  <msg name="WinJS.UI.Animation.hideEdgeUI_p:element">Élément unique ou collection d'éléments à faire glisser hors de l'écran. Les éléments doivent être à leurs positions à l'écran lorsque la fonction est appelée.</msg>
  <msg name="WinJS.UI.Animation.hideEdgeUI_p:offset">Tableau de l'objet offset facultatif ou de la collection d'objets offset décrivant le point d'arrivée de l'animation. Si le nombre d'objets offset est inférieur à la longueur du paramètre d'élément, la dernière valeur est répétée pour tous les éléments restants. Si ce paramètre est omis, la valeur par défaut est utilisée.</msg>
  <msg name="WinJS.UI.Animation.hidePanel">Fait glisser un élément ou des éléments vers leur position hors de l'écran. Cette animation est conçue pour un objet volumineux comme un clavier.</msg>
  <msg name="WinJS.UI.Animation.showPopup">Affiche un élément ou des éléments sous forme de fenêtre contextuelle.</msg>
  <msg name="WinJS.UI.Animation.showPopup_p:element">Élément unique ou collection d'éléments à afficher comme une fenêtre contextuelle.</msg>
  <msg name="WinJS.UI.Animation.hidePopup">Supprime une fenêtre contextuelle de l'écran.</msg>
  <msg name="WinJS.UI.Animation.hidePopup_p:element">Élément unique ou collection d'éléments à masquer comme une fenêtre contextuelle. Lorsque l'animation est terminée, l'application doit masquer les éléments ou les supprimer du document.</msg>
  <msg name="WinJS.UI.Animation.pointerDown">Exécute une animation de pointeur vers le bas. Utilisez l'animation pointerUp pour inverser l'effet de cette animation.</msg>
  <msg name="WinJS.UI.Animation.pointerDown_p:element">Élément unique ou collection d'éléments qui répondent à l'événement de pointeur vers le bas. À la fin de l'animation, les propriétés des éléments ont été modifiées pour refléter l'état de pointeur vers le bas.</msg>
  <msg name="WinJS.UI.Animation.pointerUp">Exécute une animation de pointeur vers le haut. Cette opération inverse l'effet d'une animation pointerDown.</msg>
  <msg name="WinJS.UI.Animation.pointerUp_p:element">Élément unique ou collection d'éléments qui répondent à l'événement de pointeur vers le haut. À la fin de l'animation, les propriétés des éléments sont retournées à la normale.</msg>
  <msg name="WinJS.UI.Animation.dragSourceStart">Exécute une animation de début de glissement. Utilisez l'animation dragSourceEnd pour inverser les effets de cette animation.</msg>
  <msg name="WinJS.UI.Animation.dragSourceStart_p:dragSource">Élément unique ou collection d'éléments concernés par l'opération de glissement. À la fin de l'animation, les propriétés des éléments ont été modifiées pour refléter l'état de glissement.</msg>
  <msg name="WinJS.UI.Animation.dragSourceStart_p:affected">Élément unique ou collection d'éléments à mettre en surbrillance comme n'étant pas déplacés. À la fin de l'animation, les propriétés des éléments ont été modifiées pour refléter l'état de glissement.</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd">Exécute une animation de fin de glissement. Cela inverse l'effet de l'animation dragSourceStart.</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd_p:dragSource">Élément unique ou collection d'éléments qui ne sont plus déplacés. À la fin de l'animation, les propriétés des éléments sont retournées à la normale.</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd_p:offset">Tableau de l'objet offset facultatif ou de la collection d'objets offset décrivant le point de départ de l'animation. Si le nombre d'objets offset est inférieur à la longueur du paramètre dragSource, la dernière valeur est répétée pour tous les éléments restants. Si ce paramètre est omis, la valeur par défaut est utilisée.</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd_p:affected">Élément unique ou collection d'éléments mis en surbrillance comme n'étant pas déplacés. À la fin de l'animation, les propriétés des éléments sont retournées à la normale.</msg>
  <msg name="WinJS.UI.Animation.enterContent">Exécute une animation d'entrée de contenu.</msg>
  <msg name="WinJS.UI.Animation.enterContent_p:incoming">Élément unique ou collection d'éléments qui représentent le contenu entrant. À la fin de l'animation, l'opacité des éléments est de 1.</msg>
  <msg name="WinJS.UI.Animation.enterContent_p:offset">Tableau de l'objet offset facultatif ou de la collection d'objets offset décrivant le point de départ de l'animation. Si le nombre d'objets offset est inférieur à la longueur du paramètre entrant, la dernière valeur est répétée pour tous les éléments restants. Si ce paramètre est omis, la valeur par défaut est utilisée.</msg>
  <msg name="WinJS.UI.Animation.exitContent">Exécute une animation de sortie de contenu.</msg>
  <msg name="WinJS.UI.Animation.exitContent_p:outgoing">Élément unique ou collection d'éléments qui représentent le contenu sortant. À la fin de l'animation, l'opacité des éléments est de 0.</msg>
  <msg name="WinJS.UI.Animation.exitContent_p:offset">Tableau de l'objet offset facultatif ou de la collection d'objets offset décrivant le point d'arrivée de l'animation. Si le nombre d'objets offset est inférieur à la longueur du paramètre sortant, la dernière valeur est répétée pour tous les éléments restants. Si ce paramètre est omis, la valeur par défaut est utilisée.</msg>
  <msg name="WinJS.UI.Animation.dragBetweenEnter">Exécute une animation qui indique qu'un objet glissé peut être déplacé entre d'autres éléments. Utilisez l'animation dragBetweenLeave pour inverser les effets de cette animation.</msg>
  <msg name="WinJS.UI.Animation.dragBetweenEnter_p:target">Élément unique ou collection d'éléments (généralement deux) entre lesquels l'objet glissé peut être déplacé. À la fin de l'animation, les propriétés des éléments ont été modifiées pour refléter l'état de glissement entre des éléments.</msg>
  <msg name="WinJS.UI.Animation.dragBetweenLeave">Exécute une animation qui indique qu'un objet glissé ne sera plus déplacé entre d'autres éléments. Cela inverse l'effet de l'animation dragBetweenEnter.</msg>
  <msg name="WinJS.UI.Animation.dragBetweenLeave_p:target">Élément unique ou collection d'éléments (généralement deux) entre lesquels l'objet glissé ne sera déplacé. À la fin de l'animation, les propriétés des éléments ont été définies à l'état dragSourceStart.</msg>
  <msg name="WinJS.UI.Animation.swipeSelect">Fais glisser un objet sélectionné pour le passage dans sa position lorsque le pointeur est relâché, et affiche la marque de sélection.</msg>
  <msg name="WinJS.UI.Animation.swipeSelect_p:selected">Élément unique ou collection d'éléments sélectionnés. À la fin de l'animation, les propriétés des éléments sont retournées à la normale.</msg>
  <msg name="WinJS.UI.Animation.swipeSelect_p:selection">Élément unique ou collection d'éléments qui sont la marque de sélection.</msg>
  <msg name="WinJS.UI.Animation.swipeDeselect">Fais glisser un objet désélectionné pour le passage dans sa position lorsque le pointeur est relâché, et masque la marque de sélection.</msg>
  <msg name="WinJS.UI.Animation.swipeDeselect_p:deselected">Élément unique ou collection d'éléments désélectionnés. À la fin de l'animation, les propriétés des éléments sont retournées à la normale.</msg>
  <msg name="WinJS.UI.Animation.swipeReveal">Révèle un objet comme résultat d'un passage, ou fait glisser l'objet sélectionné pour le passage dans sa position après la révélation.</msg>
  <msg name="WinJS.UI.Animation.swipeReveal_p:target">Élément unique ou collection d'éléments sélectionnés. À la fin de l'animation, les propriétés des éléments ont été modifiées pour refléter l'offset spécifié.</msg>
  <msg name="WinJS.UI.Animation.swipeReveal_p:offset">Tableau de l'objet offset facultatif ou de la collection d'objets offset décrivant le point d'arrivée de l'animation. En remettant l'objet dans sa position, le décalage doit être {haut : « 0px », gauche : « 0px »}. Si le nombre d'objets offset est inférieur à la longueur du paramètre d'élément, la dernière valeur est répétée pour tous les éléments restants. Si ce paramètre est omis, la valeur par défaut est utilisée. La valeur par défaut décrit le mouvement d'une révélation.</msg>
  <msg name="WinJS.UI.Animation.enterPage">Exécute une animation enterPage.</msg>
  <msg name="WinJS.UI.Animation.enterPage_p:element">Élément unique ou collection d'éléments représentant la page entrante. À la fin de l'animation, l'opacité des éléments est de 1.</msg>
  <msg name="WinJS.UI.Animation.exitPage">Exécute une animation exitPage.</msg>
  <msg name="WinJS.UI.Animation.exitPage_p:outgoing">Élément unique ou collection d'éléments représentant la page sortante. À la fin de l'animation, l'opacité des éléments est de 0.</msg>
  <msg name="WinJS.UI.Animation.crossFade">Exécute une animation crossFade.</msg>
  <msg name="WinJS.UI.Animation.crossFade_p:incoming">Élément unique ou collection d'éléments entrants. À la fin de l'animation, l'opacité des éléments est de 1.</msg>
  <msg name="WinJS.UI.Animation.crossFade_p:outgoing">Élément unique ou collection d'éléments sortants. À la fin de l'animation, l'opacité des éléments est de 0.</msg>
  <msg name="WinJS.UI.Animation.createPeekAnimation">Crée une animation de lecture. Après avoir créé l'objet PeekAnimation, modifiez le document pour déplacer les éléments dans leurs nouveaux emplacements, puis appelez la méthode à exécuter sur l'objet PeekAnimation.</msg>
  <msg name="WinJS.UI.Animation.createPeekAnimation_p:element">Élément unique ou collection d'éléments à repositionner pour la lecture.</msg>
  <msg name="WinJS.UI.Animation.createPeekAnimation_returnValue">L'objet PeekAnimation qui exécute une méthode retourne une promesse qui se termine lorsque l'animation est terminée.</msg>
  <msg name="WinJS.UI.Animation.updateBadge">Exécute une animation updateBadge.</msg>
  <msg name="WinJS.UI.Animation.updateBadge_p:incoming">Élément unique ou collection d'éléments représentant le badge entrant.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource._baseDataSourceConstructor">Initialise la classe de base VirtualizedDataSource d'une source de données personnalisée.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource._baseDataSourceConstructor_p:itemIndex">Objet qui implémente IListDataAdapter et fournit des données à VirtualizedDataSource.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource._baseDataSourceConstructor_p:options">Objet qui contient des propriétés qui spécifient des options supplémentaires pour la VirtualizedDataSource : cacheSize. Nombre qui spécifie le nombre minimal d'éléments non demandés à mettre en cache au cas où ils seraient demandés. Le paramètre options est facultatif.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler">Implémentation d'IListDataNotificationHandler passé à la méthode IListDataAdapter.setNotificationHandler.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.invalidateAll">Informe la VirtualizedDataSource que certaines données ont changé, sans spécifier les données. Il peut se révéler peu pratique pour certaines sources de données d'appeler cette méthode pour une ou l'ensemble des modifications, donc cet appel est facultatif. Mais si un adaptateur de données fourni ne l'appelle jamais, l'application doit régulièrement appeler invalidateAll sur la VirtualizedDataSource pour actualiser les données.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.invalidateAll_returnValue">Promesse qui est remplie lorsque les données ont été entièrement actualisées et que toutes les notifications de modifications ont été envoyées.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.reload">Informe la source de données de liste que les données de liste ont beaucoup changé et qu'il est préférable de recharger les données à partir de zéro.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.beginNotifications">Indique le début d'un lot de notification. Appelez-le avant une séquence d'autres appels de notification pour réduire le nombre de notifications countChanged et indexChanged envoyées au client de la VirtualizedDataSource. Vous devez l'associer à un appel à endNotifications, et les paires ne peuvent pas être imbriquées.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted">Déclenche une notification indiquant qu'un élément a été inséré.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:newItem">Élément inséré. Il doit avoir une clé et une propriété de données (il doit implémenter l'interface IItem).</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:previousKey">Clé de l'élément avant le point d'insertion, ou null si l'élément est inséré au début de la liste. Il peut être null si vous avez spécifié nextKey.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:nextKey">Clé de l'élément après le point d'insertion, ou null si l'élément est inséré à la fin de la liste. Il peut être null si vous avez spécifié previousKey.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:index">Index de l'élément inséré.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.changed">Déclenche une notification indiquant qu'un élément a été modifié.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.changed_p:item">IItem qui représente l'élément qui a été modifié.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved">Déclenche une notification indiquant qu'un élément a été déplacé.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:item">Élément déplacé.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:previousKey">Clé de l'élément avant le point d'insertion, ou null si l'élément a été déplacé au début de la liste. Il peut être null si vous avez spécifié nextKey.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:nextKey">Clé de l'élément après le point d'insertion, ou null si l'élément a été déplacé à la fin de la liste. Il peut être null si vous avez spécifié previousKey.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:oldIndex">Index de l'élément avant son déplacement.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:newIndex">Index de l'élément après son déplacement.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.removed">Déclenche une notification indiquant qu'un élément a été supprimé.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.removed_p:key">Clé de l'élément supprimé.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.removed_p:index">Index de l'élément ayant été supprimé.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.endNotifications">Conclut une séquence de notifications qui ont commencé par un appel à beginNotifications.</msg>
  <msg name="WinJS.UI.IListDataSource.createListBinding">Crée un objet IListBinding qui permet à un client de lire à partir de la liste et de recevoir des notifications pour les modifications qui affectent les parties de la liste que le client a déjà lues.</msg>
  <msg name="WinJS.UI.IListDataSource.createListBinding_p:notificationHandler">Objet qui implémente l'interface IListNotificationHandler. Si vous omettez ce paramètre, les notifications de modifications ne seront pas disponibles.</msg>
  <msg name="WinJS.UI.IListDataSource.createListBinding_returnValue">Objet qui implémente l'interface IListBinding.</msg>
  <msg name="WinJS.UI.IListBinding">Une interface qui permet à un client de lire à partir de la liste et de recevoir des notifications pour les modifications qui affectent les parties de la liste que le client a déjà lues. IListBinding peut également énumérer des listes qui peuvent changer à tout moment.</msg>
  <msg name="WinJS.UI.IListBinding.jumpToItem">Définit l'élément spécifié comme l'élément actuel.</msg>
  <msg name="WinJS.UI.IListBinding.jumpToItem_p:item">IItem ou IItemPromise pour faire l'élément actuel.</msg>
  <msg name="WinJS.UI.IListBinding.jumpToItem_returnValue">Objet qui implémente l'interface IItemPromise et sert de promesse à l'élément spécifié. Si l'élément spécifié n'est pas dans la liste, la promesse est remplie avec une valeur null.</msg>
  <msg name="WinJS.UI.IListBinding.current">Récupère l'élément actuel.</msg>
  <msg name="WinJS.UI.IListBinding.current_returnValue">Objet qui implémente l'interface IItemPromise et sert de promesse à l'élément actuel. Si le curseur est déplacé au delà du début ou de la fin de la liste, la promesse est remplie avec une valeur null. Si l'élément actuel a été supprimé ou déplacé, la promesse retourne une erreur.</msg>
  <msg name="WinJS.UI.IListBinding.previous">Récupère l'élément avant l'élément actuel et en fait l'élément actuel.</msg>
  <msg name="WinJS.UI.IListBinding.previous_returnValue">Objet qui implémente l'interface IItemPromise et sert de promesse à l'élément précédent. Si le curseur se déplace au delà du début de la liste, la promesse est remplie avec une valeur null.</msg>
  <msg name="WinJS.UI.IListBinding.next">Récupère l'élément après l'élément actuel et en fait l'élément actuel.</msg>
  <msg name="WinJS.UI.IListBinding.next_returnValue">Objet qui implémente l'interface IItemPromise et sert de promesse à l'élément suivant. Si le curseur se déplace au delà de la fin de la liste, la promesse est remplie avec une valeur null.</msg>
  <msg name="WinJS.UI.IListBinding.releaseItem">Crée une demande d'arrêt des notifications de modification pour l'élément spécifié. L'élément est publié uniquement lorsque le nombre d'appels de publications correspond au nombre d'appels d'IItemPromise.retain. Le nombre d'appels de publication ne peut pas dépasser le nombre d'appels de conservation. Cette méthode est présente uniquement si vous avez passé un IListNotificationHandler à IListDataSource.createListBinding lorsqu'il a créé cet IListBinding.</msg>
  <msg name="WinJS.UI.IListBinding.releaseItem_p:item">IItem ou IItemPromise à publier.</msg>
  <msg name="WinJS.UI.IListBinding.release">Publie des ressources, arrête des notifications, et annule des promesses en attente pour tous les éléments suivis que cet IListBinding retourne.</msg>
  <msg name="WinJS.UI.IListBinding.first">Récupère le premier élément de la liste et en fait l'élément actuel.</msg>
  <msg name="WinJS.UI.IListBinding.first_returnValue">IItemPromise qui sert de promesse à l'élément demandé. Si la liste est vide, la promesse est remplie avec une valeur null.</msg>
  <msg name="WinJS.UI.IListBinding.last">Récupère le dernier élément de la liste et en fait l'élément actuel.</msg>
  <msg name="WinJS.UI.IListBinding.fromKey">Récupère l'élément avec la clé spécifiée et en fait l'élément actuel.</msg>
  <msg name="WinJS.UI.IListBinding.fromKey_p:key">Clé de l'élément demandé. Il doit s'agir d'une chaîne non vide.</msg>
  <msg name="WinJS.UI.IListBinding.fromKey_p:hints">Astuces spécifiques au domaine à l'IListDataAdapter concernant l'emplacement de l'élément pour améliorer le temps de récupération.</msg>
  <msg name="WinJS.UI.IListBinding.fromKey_returnValue">IItemPromise qui sert de promesse à l'élément demandé. Si la liste ne contient aucun élément avec la clé spécifiée, la promesse est remplie avec une valeur null.</msg>
  <msg name="WinJS.UI.IListBinding.fromIndex">Récupère l'élément avec l'index spécifié et en fait l'élément actuel.</msg>
  <msg name="WinJS.UI.IListBinding.fromIndex_p:index">Valeur supérieure ou égale à 0 qui est l'index de l'élément à récupérer.</msg>
  <msg name="WinJS.UI.IListBinding.fromIndex_returnValue">IItemPromise qui sert de promesse à l'élément demandé. Si la liste ne contient aucun élément avec l'index spécifié, IItemPromise se termine avec une valeur null.</msg>
  <msg name="WinJS.UI.IListBinding.fromDescription">Récupère l'élément avec la description spécifiée et en fait l'élément actuel.</msg>
  <msg name="WinJS.UI.IListDataSource.fromDescription_p:description">Description spécifique au domaine de l'élément demandé, à faire interpréter par l'adaptateur de données de liste.</msg>
  <msg name="WinJS.UI.IListDataSource.fromDescription_returnValue">Promesse pour l'élément demandé. Si la liste ne contient aucun élément avec la description spécifiée, IItemPromise se termine avec une valeur null.</msg>
  <msg name="WinJS.UI.IListDataSource.invalidateAll">Oblige la source de données à actualiser ses éléments mis en cache en les redemandant depuis l'adaptateur de données. La source de données génère des notifications si les données ont changé.</msg>
  <msg name="WinJS.UI.IListDataSource.invalidateAll_returnValue">Promesse qui est remplie lorsque les données ont été entièrement actualisées et que toutes les notifications de modifications ont été envoyées.</msg>
  <msg name="WinJS.UI.IListDataSource.getCount">Récupère le nombre d'éléments dans la source de données.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromKey">Récupère l'élément avec la clé spécifiée.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromKey_p:hints">Astuces spécifiques au domaine à l'IListDataAdapter concernant l'emplacement de l'élément pour améliorer le temps de récupération.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromKey_returnValue">Promesse pour l'élément demandé. Si la liste ne contient aucun élément avec la clé spécifiée, la promesse est remplie avec une valeur null.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromIndex">Récupère l'élément à l'index spécifié.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromIndex_p:index">Valeur supérieure ou égale à zéro qui est l'index de l'élément demandé.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromIndex_returnValue">Promesse pour l'élément demandé. Si la liste ne contient aucun élément avec l'index spécifié, la promesse est remplie avec une valeur null.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromDescription">Récupère l'élément avec la description spécifiée.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromDescription_p:description">Informations spécifiques au domaine qui décrivent l'élément à récupérer, devant être interprété par l'IListDataAdapter,</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromDescription_returnValue">Promesse pour l'élément demandé. Si la liste ne contient aucun élément avec la description spécifiée, la promesse est remplie avec une valeur null.</msg>
  <msg name="WinJS.UI.IListDataSource.beginEdits">Informe la source de données qu'une séquence de modifications est sur le point de débuter. La source de données appelle IListNotificationHandler.beginNotifications et endNotifications une fois chacun pour une séquence de modifications.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart">Ajoute un élément au début de la source de données.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart_p:key">Clé de l'élément à insérer, si elle est connue ; sinon, valeur null.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart_p:data">Données de l'élément à ajouter.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart_returnValue">Promesse qui contient l'IItem ajouté ou un EditError si une erreur s'est produite.</msg>
  <msg name="WinJS.UI.IListDataSource.insertBefore">Insère un élément avant un autre élément.</msg>
  <msg name="WinJS.UI.IListDataSource.insertBefore_p:data">Données de l'élément à insérer.</msg>
  <msg name="WinJS.UI.IListDataSource.insertBefore_p:nextKey">Clé d'un élément dans la source de données. Les nouvelles données sont insérées avant cet élément.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAfter">Insère un élément après un autre élément.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAfter_p:previousKey">Clé d'un élément dans la source de données. Le nouvel élément est ajouté après cet élément.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtEnd">Ajoute un élément à la fin de la source de données.</msg>
  <msg name="WinJS.UI.IListDataSource.change">Remplace les données de l'élément spécifié.</msg>
  <msg name="WinJS.UI.IListDataSource.change_p:key">Clé de l'élément à remplacer.</msg>
  <msg name="WinJS.UI.IListDataSource.change_p:newData">Nouvelles données de l'élément.</msg>
  <msg name="WinJS.UI.IListDataSource.change_returnValue">Promesse qui contient l'IItem mis à jour ou un EditError si une erreur s'est produite.</msg>
  <msg name="WinJS.UI.IListDataSource.moveToStart">Déplace l'élément spécifié au début de la source de données.</msg>
  <msg name="WinJS.UI.IListDataSource.moveToStart_p:key">Clé de l'élément à déplacer.</msg>
  <msg name="WinJS.UI.IListDataSource.moveToStart_returnValue">Promesse qui contient l'IItem déplacé ou un EditError si une erreur s'est produite.</msg>
  <msg name="WinJS.UI.IListDataSource.moveBefore">Déplace l'élément spécifié avant un autre élément.</msg>
  <msg name="WinJS.UI.IListDataSource.moveBefore_p:nextKey">Clé d'un autre élément dans la source de données. L'élément spécifié par le paramètre de clé est déplacé vers une position immédiatement avant cet élément.</msg>
  <msg name="WinJS.UI.IListDataSource.moveAfter">Déplace un élément après un autre élément.</msg>
  <msg name="WinJS.UI.IListDataSource.moveAfter_p:previousKey">Clé d'un autre élément dans la source de données. L'élément spécifié par le paramètre de clé sera déplacé vers une position immédiatement après cet élément.</msg>
  <msg name="WinJS.UI.IListDataSource.moveToEnd">Déplace un élément à la fin de la source de données.</msg>
  <msg name="WinJS.UI.IListDataSource.remove">Supprime un élément de la source de données.</msg>
  <msg name="WinJS.UI.IListDataSource.remove_p:key">Clé de l'élément à supprimer.</msg>
  <msg name="WinJS.UI.IListDataSource.remove_returnValue">Promesse qui ne contient rien si l'opération a réussi ou un EditError si une erreur s'est produite.</msg>
  <msg name="WinJS.UI.IListDataSource.endEdits">Informe la source de données qu'une séquence de modifications est terminée. La source de données va appeler IListNotificationHandler.beginNotifications et endNotifications une fois chacun pour une séquence de modifications.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource">Utilise comme classe de base lors de la définition d'une source de données personnalisée. N'instanciez pas directement.</msg>
  <msg name="WinJS.UI.computeDataSourceGroups">Retourne une source de données qui ajoute des informations de groupe aux éléments d'une autre source de données. La propriété "groups" de cette source de données prend la valeur d'encore une autre source de données qui énumère les groupes eux-mêmes.</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:listDataSource">Source de données pour les éléments individuels à regrouper.</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:groupKey">Fonction de rappel qui prend un élément dans la liste comme argument. La fonction est appelée pour chaque élément de la liste et retourne la clé de groupe pour l'élément comme une chaîne.</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:groupData">Fonction de rappel qui prend un élément dans la IListDataSource comme argument. La fonction est appelée sur un élément dans chaque groupe et retourne un objet qui représente l'en-tête de ce groupe.</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:options">Objet qui peut contenir des propriétés qui spécifient des options supplémentaires : groupCountEstimate : une valeur numérique qui est l'estimation initiale du nombre de groupes. Si vous spécifiez -1, cette fonction ne retourne aucun résultat jusqu'à ce que le nombre réel de groupes a été déterminé. batchSize : Un nombre supérieur à 0 qui spécifie le nombre d'éléments à extraire lors de chaque série de traitement lors de la recherche des groupes. (En plus du nombre spécifié, un élément du lot précédent est toujours inclus.)</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_returnValue">IListDataSource qui contient les éléments dans la source de données d'origine et fournit des informations de groupe supplémentaires dans une propriété « groups ». La propriété « groups » retourne un autre IListDataSource qui énumère les différents groupes dans la liste.</msg>
  <msg name="WinJS.UI.StorageDataSource.loadThumbnail">Retourne une promesse faite pour un élément image qui est remplie lorsque la miniature de qualité complète de l'élément fourni est dessinée sur l'élément image.</msg>
  <msg name="WinJS.UI.StorageDataSource.loadThumbnail_p:item">Élément pour lequel récupérer une miniature.</msg>
  <msg name="WinJS.UI.StorageDataSource.loadThumbnail_p:image">Élément image à utiliser. S'il n'est pas fourni, un nouvel élément image est créé.</msg>
  <msg name="WinJS.UI.BrowseMode.selectionchanging.setPromise">Utilisé pour informer la ListView que le travail asynchrone est exécuté, et que ce gestionnaire d'événements ne doit pas être considéré comme terminé jusqu'à ce que la promesse se termine.</msg>
  <msg name="WinJS.UI.BrowseMode.selectionchanging.setPromise_p:promise">Promesse qu'il faut attendre.</msg>
  <msg name="WinJS.UI.Layout.constructor">Crée un objet Layout.</msg>
  <msg name="WinJS.UI.Layout.constructor_p:options">Ensemble d'options à appliquer au départ au nouvel objet Layout.</msg>
  <msg name="WinJS.UI.Layout.constructor_returnValue">Nouvel objet Layout.</msg>
  <msg name="WinJS.UI.ListView.SelectionMode">Spécifie le mode de sélection pour un ListView.</msg>
  <msg name="WinJS.UI.ListView.SelectionMode.none">Les éléments ne peuvent pas être sélectionnés.</msg>
  <msg name="WinJS.UI.ListView.SelectionMode.single">Un seul élément peut être sélectionné.</msg>
  <msg name="WinJS.UI.ListView.SelectionMode.multi">Plusieurs éléments peuvent être sélectionnés.</msg>
  <msg name="WinJS.UI.ListView.TapBehavior">Spécifie comment les éléments dans un ListView répondent à l'interaction d'appui.</msg>
  <msg name="WinJS.UI.ListView.TapBehavior.directSelect">Le fait d'appuyer sur l'élément l'appelle et le sélectionne. Naviguer jusqu'à l'élément avec le clavier modifie la sélection de sorte que l'élément ayant le focus soit le seul élément sélectionné.</msg>
  <msg name="WinJS.UI.ListView.TapBehavior.toggleSelect">Le fait d'appuyer sur l'élément l'appelle. Si l'élément était sélectionné, le fait d'appuyer dessus supprime la sélection. Si l'élément n'était pas sélectionné, le fait d'appuyer dessus le sélectionne. Naviguer jusqu'à l'élément avec le clavier ne le sélectionne pas ou ne l'appelle pas.</msg>
  <msg name="WinJS.UI.ListView.TapBehavior.invokeOnly">Le fait d'appuyer sur l'élément l'appelle. Naviguer jusqu'à l'élément avec le clavier ne le sélectionne pas ou ne l'appelle pas.</msg>
  <msg name="WinJS.UI.ListView.TapBehavior.none">Rien ne se produit.</msg>
  <msg name="WinJS.UI.ListView.SwipeBehavior">Spécifie si les éléments sont sélectionnés lorsque l'utilisateur exécute une interaction de passage.</msg>
  <msg name="WinJS.UI.ListView.SwipeBehavior.select">L'interaction de passage sélectionne les éléments survolés par le passage</msg>
  <msg name="WinJS.UI.ListView.SwipeBehavior.none">L'interaction de passage ne modifie pas les éléments sélectionnés.</msg>
  <msg name="WinJS.UI.ListView.ListViewAnimationType">Spécifie si l'animation ListView est une animation d'entrée ou une animation de transition.</msg>
  <msg name="WinJS.UI.ListView.ListViewAnimationType.entrance">L'animation est lue lorsque le ListView est d'abord affiché.</msg>
  <msg name="WinJS.UI.ListView.ListViewAnimationType.contentTransition">L'animation est lue lorsque le ListView modifie son contenu.</msg>
  <msg name="WinJS.UI._Selection.prototype.selectAll">Ajoute tous les éléments du ListView à la sélection.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.count">Retourne le nombre d'éléments dans la sélection.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.count_returnValue">Nombre d'éléments dans la sélection.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getIndices">Retourne une liste des index des éléments dans la sélection.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getIndices_returnValue">Liste des index des éléments dans la sélection comme un tableau d'objets Number.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getItems">Retourne un tableau qui contient les éléments de la sélection.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getItems_returnValue">Promesse qui contient un tableau des objets IItem demandés.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getRanges">Obtient un tableau des plages d'index pour les éléments sélectionnés.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getRanges_returnValue">Un tableau qui contient un objet ISelectionRange pour chaque plage d'index dans la sélection.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.isEverything">Retourne une valeur qui indique si la sélection contient chaque élément de la source de données.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.isEverything_returnValue">True si la sélection contient chaque élément de la source de données ; sinon, False.</msg>
  <msg name="WinJS.UI.AppBarIcon">L'énumération d'AppBarIcon fournit un jeu de glyphes à utiliser avec la propriété d'icône AppBarCommand.</msg>
  <msg name="WinJS.UI.SettingsFlyout.show_static">Active la fenêtre talisman de paramètres.</msg>
  <msg name="WinJS.UI.SettingsFlyout.populateSettings">Remplit les commandes de paramètres devant être affichées dans la fenêtre talisman des paramètres.</msg>
  <msg name="WinJS.UI.SettingsFlyout.showSettings_p:e">Objet événement contenant le tableau de commandes de paramètres à afficher dans la fenêtre talisman des paramètres.</msg>
  <msg name="WinJS.UI.SettingsFlyout.showSettings">Affiche le SettingsFlyout en utilisant le chemin d'accès de la page contenant l'élément de paramètres et l'ID de l'élément de paramètres</msg>
</messagebundle>