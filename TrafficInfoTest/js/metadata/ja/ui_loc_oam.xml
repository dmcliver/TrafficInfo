<?xml version="1.0" encoding="utf-8"?>
<messagebundle>
  <msg name="WinJS.UI.StorageDataSource">IStorageQueryResultBase を列挙するデータ ソースを作成します。</msg>
  <msg name="WinJS.UI.StorageDataSource_p:query">列挙するオブジェクト。これは IStorageQueryResultBase をサポートする必要があります。</msg>
  <msg name="WinJS.UI.StorageDataSource_p:options">データ ソースのためのオプションを指定するオブジェクト。このパラメーターは省略できます。これは、以下のプロパティを含むことがあります。mode: Windows.Storage.FileProperties.ThumbnailMode - サムネイルを要求するかどうかと、要求するサムネイルの型を指定する値。requestedThumbnailSize: サムネイルのサイズを指定する数値。thumbnailOptions: サムネイル用に追加のオプションを指定する Windows.Storage.FileProperties.ThumbnailOptions 値。waitForFileLoad: True に設定すると、データ ソースはプロパティとサムネイルを読み込んだ後に項目を返します。</msg>
  <msg name="WinJS.UI.FlipView">一連の写真などのコレクションを一度に 1 項目ずつ表示します。</msg>
  <msg name="WinJS.UI.FlipView_e:datasourcecountchanged">itemDataSource の項目の数が変更されると発生します。</msg>
  <msg name="WinJS.UI.FlipView_e:pagevisibilitychanged">FlipView のページが表示または非表示に切り替わったときに発生します。</msg>
  <msg name="WinJS.UI.FlipView_e:pageselected">FlipView がページをめくるときに発生します。</msg>
  <msg name="WinJS.UI.FlipView_e:pagecompleted">FlipView がページをめくり、レンダラーの関数が完了するときに発生します。</msg>
  <msg name="WinJS.UI.FlipView_part:flipView">FlipView のコントロール全体。</msg>
  <msg name="WinJS.UI.FlipView_part:navigationButton">FlipView のすべてのナビゲーション ボタンのための汎用クラス。</msg>
  <msg name="WinJS.UI.FlipView_part:leftNavigationButton">ナビゲーションの左ボタン。</msg>
  <msg name="WinJS.UI.FlipView_part:rightNavigationButton">ナビゲーションの右ボタン。</msg>
  <msg name="WinJS.UI.FlipView_part:topNavigationButton">ナビゲーションの上ボタン。</msg>
  <msg name="WinJS.UI.FlipView_part:bottomNavigationButton">ナビゲーションの下ボタン。</msg>
  <msg name="WinJS.UI.FlipView.constructor">新しい FlipView を作成します。</msg>
  <msg name="WinJS.UI.FlipView.constructor_p:element">コントロールをホストする DOM 要素。</msg>
  <msg name="WinJS.UI.FlipView.constructor_p:options">新しいコントロールに適用するプロパティと値のペアを 1 つ以上含むオブジェクト。オプションのオブジェクトの各プロパティは、コントロールのプロパティまたはイベントの 1 つに対応します。イベント名は &quot;on&quot; で始めてください。たとえば、pageselected イベントのハンドラーを作成するには、&quot;onpageselected&quot; という名前のプロパティをオプションのオブジェクトに追加し、イベント ハンドラーに値を設定します。このパラメーターは省略できます。</msg>
  <msg name="WinJS.UI.FlipView.constructor_returnValue">新しい FlipView コントロール。</msg>
  <msg name="WinJS.UI.FlipView.next">次のアイテムに移動します。</msg>
  <msg name="WinJS.UI.FlipView.next_returnValue">FlipView が次のページに移動し始めたら True、FlipView が最後のページにあるか、別のナビゲーションのアニメーション中である場合は False。</msg>
  <msg name="WinJS.UI.FlipView.previous">前の項目に移動します。</msg>
  <msg name="WinJS.UI.FlipView.previous_returnValue">FlipView が前のページに移動し始めたら True、FlipView が既に最初のページにあるか、別のナビゲーションのアニメーション中である場合は False。</msg>
  <msg name="WinJS.UI.FlipView.element">FlipView コントロールをホストする DOM 要素。</msg>
  <msg name="WinJS.UI.FlipView.currentPage">現在表示されているページのインデックスを取得または設定します。最小値は 0、最大値はデータ ソースによって返される項目の合計数よりも 1 つ少ない数です。</msg>
  <msg name="WinJS.UI.FlipView.orientation">FlipView の配置が水平方向か垂直方向かを取得または設定します。</msg>
  <msg name="WinJS.UI.FlipView.itemDataSource">表示する項目を FlipView に提供するデータ ソースを取得または設定します。FlipView は一度に 1 項目ずつ、各ページに表示します。</msg>
  <msg name="WinJS.UI.FlipView.itemTemplate">WinJS.Binding.Template または各項目のページの HTML を定義する関数を取得または設定します。</msg>
  <msg name="WinJS.UI.FlipView.itemSpacing">項目の間隔をピクセル単位で取得または設定します。</msg>
  <msg name="WinJS.UI.FlipView.count">FlipView のオブジェクトの itemDataSource の項目数を返します。</msg>
  <msg name="WinJS.UI.FlipView.count_returnValue">リストまたは数が使用できない場合は WinJS.UI.CountResult.unknown の項目数を含む約束。</msg>
  <msg name="WinJS.UI.FlipView.setCustomAnimations">ページ間を移動すると FlipView のカスタム アニメーションを使用するように設定します。</msg>
  <msg name="WinJS.UI.FlipView.setCustomAnimations_p:animations">次へ、前へ、ジャンプの各ナビゲーション操作のための 3 フィールドを最大で含むオブジェクト。これらの各フィールドは function (outgoingPage, incomingPage) のシグニチャを持つ関数である必要があります。この関数はアニメーションが一度終了したら完了する WinJS.Promise オブジェクトを返します。フィールドが空白または未定義の場合、FlipView はその操作の既定のアニメーションに戻ります。</msg>
  <msg name="WinJS.UI.FlipView.forceLayout">FlipView のレイアウトを強制的に更新します。FlipView を再度表示するときに、style.display のプロパティを &quot;none&quot; に設定した後でこの関数を使用します。</msg>
  <msg name="WinJS.UI._LayoutCommon.init">このメソッドは、Windows Library for JavaScript インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</msg>
  <msg name="WinJS.UI._LayoutCommon.setSite_p:layoutSite"></msg>
  <msg name="WinJS.UI._LayoutCommon.disableBackdrop">仮想化されたリストをパンする間に空白領域を避けるバックドロップ機能を、レイアウトが無効にする必要があるかどうかを示す値を取得または設定します。</msg>
  <msg name="WinJS.UI._LayoutCommon.backdropColor">バックドロップで使用する既定のパターンの塗りつぶしの色を取得または設定します。既定値は &quot;rgba(155,155,155,0.23)&quot; です。</msg>
  <msg name="WinJS.UI._LayoutCommon.itemInfo">項目のサイズと、項目を新しい列に配置する必要があるかどうかを決定します。</msg>
  <msg name="WinJS.UI._LayoutCommon.groupInfo">グループに可変サイズの項目があるかどうかを示します。</msg>
  <msg name="WinJS.UI.GridLayout">新しい GridLayout を作成します。</msg>
  <msg name="WinJS.UI.GridLayout_p:options">新しい GridLayout に適用するプロパティと値のセット。</msg>
  <msg name="WinJS.UI.GridLayout_returnValue">新しい GridLayout。</msg>
  <msg name="WinJS.UI.GridLayout.horizontal">項目を水平に並べて置けるかどうかを示す値を取得します。このプロパティは GridLayout に対して常に True を返します。</msg>
  <msg name="WinJS.UI.GridLayout.groupHeaderPosition">アイテムに関連するグループ ヘッダーの位置を取得または設定します。既定値は &quot;上&quot; です。</msg>
  <msg name="WinJS.UI.GridLayout.maxRows">ListView に表示される最大行数。</msg>
  <msg name="WinJS.UI.ListLayout">新規 ListView オブジェクトを作成します。</msg>
  <msg name="WinJS.UI.ListLayout_p:options">新しい ListLayout に適用するプロパティと値のセット。</msg>
  <msg name="WinJS.UI.ListLayout_returnValue">新しい ListLayout オブジェクト。</msg>
  <msg name="WinJS.UI.ListLayout.horizontal">項目を水平に並べて置けるかどうかを示す値を取得します。このプロパティは GridLayout に対して常に False を返します。</msg>
  <msg name="WinJS.UI.ListLayout.getKeyboardNavigatedItem">この API は、Windows Library for JavaScript インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</msg>
  <msg name="WinJS.UI.ListView">項目をカスタマイズ可能な一覧またはグリッド形式で表示します。</msg>
  <msg name="WinJS.UI.ListView_e:contentanimating">ListView が開始または遷移のアニメーションを再生しようとしているときに発生します。</msg>
  <msg name="WinJS.UI.ListView_e:iteminvoked">ユーザーが項目をタップまたはクリックしたときに発生します。</msg>
  <msg name="WinJS.UI.ListView_e:selectionchanging">項目が選択または選択解除される前に発生します。</msg>
  <msg name="WinJS.UI.ListView_e:selectionchanged">項目が選択または選択解除された後に発生します。</msg>
  <msg name="WinJS.UI.ListView_e:loadingstatechanged">読み込みの状態が変更されたときに発生します。</msg>
  <msg name="WinJS.UI.ListView_e:keyboardnavigating">フォーカスしている項目が変更されたときに発生します。</msg>
  <msg name="WinJS.UI.ListView_part:listView">ListView のコントロール全体。</msg>
  <msg name="WinJS.UI.ListView_part:viewport">ListView のビューポート。</msg>
  <msg name="WinJS.UI.ListView_part:surface">ListView のスクロール可能な領域。</msg>
  <msg name="WinJS.UI.ListView_part:item">ListView の項目。</msg>
  <msg name="WinJS.UI.ListView_part:selectionbackground">選択のチェックマークの背景。</msg>
  <msg name="WinJS.UI.ListView_part:selectioncheckmark">選択のチェックマーク。</msg>
  <msg name="WinJS.UI.ListView_part:groupHeader">グループのヘッダー。</msg>
  <msg name="WinJS.UI.ListView_part:progressbar">ListView の進行状況インジケーター。</msg>
  <msg name="WinJS.UI.ListView.constructor">新しい ListView を作成します。</msg>
  <msg name="WinJS.UI.ListView.constructor_p:element">ListView コントロールをホストする DOM 要素。</msg>
  <msg name="WinJS.UI.ListView.constructor_p:options">新しいコントロールに適用するプロパティと値のペアを 1 つ以上含むオブジェクト。オプションのオブジェクトの各プロパティは、コントロールのプロパティまたはイベントの 1 つに対応します。イベント名は &quot;on&quot; で始めてください。たとえば、selectionchanged イベントのハンドラーを作成するには、&quot;onselectionchange&quot; という名前のプロパティをオプションのオブジェクトに追加し、イベント ハンドラーに値を設定します。</msg>
  <msg name="WinJS.UI.ListView.constructor_returnValue">新しい ListView。</msg>
  <msg name="WinJS.UI.ListView.element">ListView をホストする DOM 要素を取得します。</msg>
  <msg name="WinJS.UI.ListView.layout">ListView のレイアウトをコントロールするオブジェクトを取得または設定します。</msg>
  <msg name="WinJS.UI.ListView.pagesToLoad">loadingBehavior のプロパティがインクリメンタルに設定されている場合に、pagesToLoadThreshold のプロパティで指定したしきい値を超えてユーザーがスクロールするときに読み込むページ数を取得または設定します。</msg>
  <msg name="WinJS.UI.ListView.pagesToLoadThreshold">インクリメンタル読み取りを開始するためのしきい値 (ページ数) を取得または設定します。リストの読み込まれた部分の終わりから数えて、表示される最後の項目が指定したページ数以内のとき、automaticallyLoadPages が True かつ loadingBehavior が &quot;incremental&quot; に設定されている場合に、ListView はインクリメンタル読み取りを開始します。</msg>
  <msg name="WinJS.UI.ListView.groupDataSource">itemDataSource の項目のグループを含むデータ ソースを取得または設定します。</msg>
  <msg name="WinJS.UI.ListView.automaticallyLoadPages">pagesToLoadThreshold のプロパティで指定したページ数を超えてユーザーがスクロールするときに、次の数ページが自動的に読み込まれるかどうかを示す値を取得または設定します。</msg>
  <msg name="WinJS.UI.ListView.loadingBehavior">DOM に読み込まれるデータ項目の数を決定する値を取得または設定します。</msg>
  <msg name="WinJS.UI.ListView.selectionMode">ユーザーが選択できる ListView の項目数を指定する値を、&quot;none&quot;、&quot;single&quot;、&quot;multi&quot; から取得または設定します。</msg>
  <msg name="WinJS.UI.ListView.tapBehavior">ユーザーが項目をタップまたはクリックしたときの ListView の動作を取得または設定します。タップまたはクリックで、項目を起動する、項目を選択して起動する、または何もしない設定にすることができます。</msg>
  <msg name="WinJS.UI.ListView.swipeBehavior">スワイプ操作したときの ListView の動作を取得または設定します。スワイプ操作でスワイプした項目を選択することも、現在選択している項目のままにすることもできます。</msg>
  <msg name="WinJS.UI.ListView.itemDataSource">ListView の項目を提供するデータ ソースを取得または設定します。</msg>
  <msg name="WinJS.UI.ListView.itemTemplate">itemDataSource の項目ごとに DOM 要素を作成するテンプレート関数を取得または設定します。各項目に複数の DOM 要素を含めることができますが、ルート要素は単一にすることをお勧めします。</msg>
  <msg name="WinJS.UI.ListView.resetItem">ListView が項目の要素表現を再利用すると呼び出される関数を取得または設定します。</msg>
  <msg name="WinJS.UI.ListView.groupHeaderTemplate">groupDataSource のグループ ヘッダーごとに DOM 要素を作成するテンプレート関数を取得または設定します。各グループ ヘッダーに複数の要素を含めることができますが、ルート要素は単一にしてください。</msg>
  <msg name="WinJS.UI.ListView.resetGroupHeader">ListView がグループ ヘッダーの DOM 要素表現を再利用すると呼び出される関数を取得または設定します。</msg>
  <msg name="WinJS.UI.ListView.loadingState">ListView が読み込み中かどうか、読み込みが完了したかどうかを示す値を取得します。このプロパティは &quot;itemsLoading&quot;、&quot;viewPortLoaded&quot;、&quot;itemsLoaded&quot;、&quot;complete&quot; から、どれか 1 つを返すことができます。</msg>
  <msg name="WinJS.UI.ListView.selection">現在選択されている項目を含む ISelection オブジェクトを取得します。</msg>
  <msg name="WinJS.UI.ListView.indexOfFirstVisible">表示される最初の項目を取得または設定します。このプロパティを設定するときに、指定されたインデックスを持つ項目がリストの先頭になるように ListView がスクロールします。</msg>
  <msg name="WinJS.UI.ListView.indexOfLastVisible">表示される最後の項目のインデックスを取得します。</msg>
  <msg name="WinJS.UI.ListView.currentItem">どの項目がキーボード フォーカスとフォーカスの状態を取得するかを示すオブジェクトを取得または設定します。オブジェクトには以下のプロパティがあります。index: itemDataSource の項目のインデックス。key: itemDataSource の項目のキー。hasFocus: このプロパティを取得するときに、項目に既にフォーカスがある場合はこの値は True になり、それ以外の場合は False になります。このプロパティを設定するときに、項目をすぐにフォーカスする場合はこの値を True に設定し、それ以外の場合は False に設定して項目を最終的にフォーカスするようにします。showFocus: 項目がフォーカス四角形を表示する場合は True、それ以外の場合は False にします。★SegError★</msg>
  <msg name="WinJS.UI.ListView.zoomableView">ZoomableView を取得します。この API は SemanticZoom インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</msg>
  <msg name="WinJS.UI.ListView.elementFromIndex">指定したインデックスにある項目を表す DOM 要素を返します。</msg>
  <msg name="WinJS.UI.ListView.elementFromIndex_p:itemIndex">項目のインデックス。</msg>
  <msg name="WinJS.UI.ListView.elementFromIndex_returnValue">指定された項目を表す DOM 要素。</msg>
  <msg name="WinJS.UI.ListView.indexOfElement">指定された DOM 要素を表示する項目のインデックスを返します。</msg>
  <msg name="WinJS.UI.ListView.indexOfElement_p:element">指定された項目を表示する DOM 要素。</msg>
  <msg name="WinJS.UI.ListView.indexOfElement_returnValue">指定された DOM 要素を表示する項目のインデックス。</msg>
  <msg name="WinJS.UI.ListView.ensureVisible">指定された項目を表示します。必要に応じて ListView が項目のところまでスクロールします。</msg>
  <msg name="WinJS.UI.ListView.ensureVisible_p:itemIndex">表示する項目のインデックス。</msg>
  <msg name="WinJS.UI.ListView.loadMorePages">ListView のオブジェクトの loadingBehavior がインクリメンタルに設定されている場合、次のページ セットを読み込みます。</msg>
  <msg name="WinJS.UI.ListView.recalculateItemPosition">サイズが変更された項目を調整するために、ListView の表示される項目すべての位置を変更します。ほとんどのアプリケーションはこのメソッドを呼び出す必要はありません。</msg>
  <msg name="WinJS.UI.ListView.forceLayout">ListView のレイアウトを強制的に更新します。ListView を再度表示するときに、style.display のプロパティを &quot;none&quot; に設定した後でこの関数を使用します。</msg>
  <msg name="WinJS.UI.ListView.scrollPosition">ListView のスクロール バーの位置を取得または設定します。</msg>
  <msg name="WinJS.UI.ListView.triggerDispose">ListView の廃棄サービスを手動でトリガーします。通常の操作では、ListView のインスタンス作成時にトリガーされます。ただし、シナリオによっては廃棄サービスを手動で実行する方が適切な場合があります。</msg>
  <msg name="WinJS.UI._Selection.prototype.clear">選択を解除します。</msg>
  <msg name="WinJS.UI._Selection.prototype.clear_returnValue">解除が完了したときに満たされる約束。</msg>
  <msg name="WinJS.UI._Selection.prototype.set">現在の選択が解除され、指定された項目と置換します。</msg>
  <msg name="WinJS.UI._Selection.prototype.set_items">選択を構成する項目のインデックスまたはキー。項目パラメーターに異なる型のオブジェクトを提供できます。インデックス、キー、インデックス範囲を指定できます。これらのオブジェクトを 1 つ以上含む配列であることもあります。</msg>
  <msg name="WinJS.UI._Selection.prototype.set_returnValue">操作が完了したときに満たされる約束。</msg>
  <msg name="WinJS.UI._Selection.prototype.add">1 つ以上の項目を選択に追加します。</msg>
  <msg name="WinJS.UI._Selection.prototype.add_items">追加する項目のインデックスまたはキー。項目パラメーターに異なる型のオブジェクトを提供できます。インデックス、キー、インデックス範囲を指定できます。これらのオブジェクトを 1 つ以上含む配列であることもあります。</msg>
  <msg name="WinJS.UI._Selection.prototype.remove">指定した項目を選択から削除します。</msg>
  <msg name="WinJS.UI._Selection.prototype.remove_items">削除する項目のインデックスまたはキー。項目パラメーターに異なる型のオブジェクトを提供できます。インデックス、キー、インデックス範囲を指定できます。これらのオブジェクトを 1 つ以上含む配列であることもあります。</msg>
  <msg name="WinJS.UI.DatePicker">ユーザーが日付の値を指定できるようにします。</msg>
  <msg name="WinJS.UI.DatePicker_name">日付選択</msg>
  <msg name="WinJS.UI.DatePicker_e:change">現在の日付が変更されたときに発生します。</msg>
  <msg name="WinJS.UI.DatePicker.constructor">DatePicker コントロールの新しいインスタンスを初期化します。</msg>
  <msg name="WinJS.UI.DatePicker.constructor_p:element">DatePicker コントロールに関連付けられた DOM 要素。</msg>
  <msg name="WinJS.UI.DatePicker.constructor_p:options">DatePicker コントロールに初期状態で適用されるオプションのセット。</msg>
  <msg name="WinJS.UI.DatePicker.constructor_returnValue">構築された DatePicker コントロール。</msg>
  <msg name="WinJS.UI.DatePicker.calendar">使用するカレンダーを取得または設定します。</msg>
  <msg name="WinJS.UI.DatePicker.current">DatePicker の現在の日付を取得または設定します。</msg>
  <msg name="WinJS.UI.DatePicker.disabled">DatePicker が無効であるかどうかを示します。</msg>
  <msg name="WinJS.UI.DatePicker.datePattern">日付表示パターンを取得または設定します。</msg>
  <msg name="WinJS.UI.DatePicker.element">DatePicker の DOM 要素を取得します。</msg>
  <msg name="WinJS.UI.DatePicker.minYear">グレゴリオ暦の年の指定可能な最小値を取得または設定します。</msg>
  <msg name="WinJS.UI.DatePicker.maxYear">グレゴリオ暦の年の指定可能な最大値を取得または設定します。</msg>
  <msg name="WinJS.UI.DatePicker.monthPattern">月の表示パターンを取得または設定します。</msg>
  <msg name="WinJS.UI.DatePicker.yearPattern">年の表示パターンを取得または設定します。</msg>
  <msg name="WinJS.UI.TimePicker">ユーザーが時刻の値を選択できるようにします。</msg>
  <msg name="WinJS.UI.TimePicker_name">日時指定</msg>
  <msg name="WinJS.UI.TimePicker_e:change">時刻が変更された場合に発生します。</msg>
  <msg name="WinJS.UI.TimePicker.constructor">TimePicker コントロールの新しいインスタンスを初期化します。</msg>
  <msg name="WinJS.UI.TimePicker.constructor_p:element">TimePicker コントロールに関連付けられた DOM 要素。</msg>
  <msg name="WinJS.UI.TimePicker.constructor_p:options">TimePicker コントロールに初期状態で適用されるオプションのセット。</msg>
  <msg name="WinJS.UI.TimePicker.constructor_returnValue">構築された TimePicker コントロール。</msg>
  <msg name="WinJS.UI.TimePicker.clock">表示する時計の種類を取得または設定します (12HourClock か 24HourClock)。これが既定のユーザー設定になります。</msg>
  <msg name="WinJS.UI.TimePicker.current">TimePicker の現在の日付 (および時刻) を取得または設定します。</msg>
  <msg name="WinJS.UI.TimePicker.disabled">TimePicker が無効であるかどうかを示します。</msg>
  <msg name="WinJS.UI.TimePicker.element">TimePicker の DOM 要素を取得します。</msg>
  <msg name="WinJS.UI.TimePicker.hourPattern">時の表示パターンを取得または設定します。</msg>
  <msg name="WinJS.UI.TimePicker.minuteIncrement">分のインクリメントを取得または設定します。たとえば、&quot;15&quot; は TimePicker の分のコントロールが 00、15、30、45 だけを表示することを指定します。</msg>
  <msg name="WinJS.UI.TimePicker.minutePattern">分の表示パターンを取得または設定します。</msg>
  <msg name="WinJS.UI.TimePicker.periodPattern">期間の表示パターンを取得または設定します。</msg>
  <msg name="WinJS.UI.Rating">評価コントロールは、ユーザーが 1 から maxRating (5 が既定値です) の範囲の数を与えられるようにします。</msg>
  <msg name="WinJS.UI.Rating_e:previewchange">ユーザーが新しい一時的な評価を選択したが、変更をコミットしていない場合に発生します。</msg>
  <msg name="WinJS.UI.Rating_e:cancel">ユーザーが一時的な評価をコミットせずに評価コントロールとのやり取りを終了するときに発生します。</msg>
  <msg name="WinJS.UI.Rating_e:change">ユーザーが userRating へ変更をコミットすると発生します。</msg>
  <msg name="WinJS.UI.Rating_part:rating">評価のコントロール全体。</msg>
  <msg name="WinJS.UI.Rating_part:average-empty">評価コントロールが平均評価を表示するときに星なし。</msg>
  <msg name="WinJS.UI.Rating_part:average-full">評価コントロールが平均評価を表示するときに星満点。</msg>
  <msg name="WinJS.UI.Rating_part:user-empty">評価コントロールがユーザーの評価を表示するときに星なし。</msg>
  <msg name="WinJS.UI.Rating_part:user-full">評価コントロールがユーザーの評価を表示するときに星満点。</msg>
  <msg name="WinJS.UI.Rating_part:tentative-empty">評価コントロールが一時的な評価を表示するときに星なし。</msg>
  <msg name="WinJS.UI.Rating_part:tentative-full">評価コントロールが一時的な評価を表示するときに星満点。</msg>
  <msg name="WinJS.UI.Rating_part:disabled-empty">コントロールが無効な場合に星なし。</msg>
  <msg name="WinJS.UI.Rating_part:disabled-full">コントロールが無効な場合に星満点。</msg>
  <msg name="WinJS.UI.Rating.constructor">新しい評価を作成します。</msg>
  <msg name="WinJS.UI.Rating.constructor_p:element">新しい評価をホストする DOM 要素。</msg>
  <msg name="WinJS.UI.Rating.constructor_p:options">新しいコントロールに適用するプロパティと値のペアを 1 つ以上含むオブジェクト。オプションのオブジェクトの各プロパティは、コントロールのプロパティまたはイベントの 1 つに対応します。イベント名は &quot;on&quot; で始めてください。たとえば、cancel イベントのハンドラーを作成するには、&quot;oncancel&quot; という名前のプロパティをオプションのオブジェクトに追加し、イベント ハンドラーに値を設定します。このパラメーターは省略できます。</msg>
  <msg name="WinJS.UI.Rating.constructor_returnValue">新しい評価。</msg>
  <msg name="WinJS.UI.Rating.maxRating">指定可能な最大評価値を取得または設定します。既定値は 5 です。</msg>
  <msg name="WinJS.UI.Rating.userRating">ユーザーの評価を取得または設定します。この値は、0 以上、maxRating 以下である必要があります。</msg>
  <msg name="WinJS.UI.Rating.averageRating">浮動小数点値として平均評価を取得または設定します。この値は、&quot;0&quot; であるか、&quot;1 以上、maxRating 以下&quot; である必要があります。</msg>
  <msg name="WinJS.UI.Rating.disabled">コントロールが無効かどうかを指定する値を取得または設定します。コントロールが無効の場合、ユーザーは新しい値を指定するか、既存の評価を変更することができません。</msg>
  <msg name="WinJS.UI.Rating.enableClear">コントロールがユーザーに評価を削除できるようにするかどうかを、取得または設定します。</msg>
  <msg name="WinJS.UI.Rating.tooltipStrings">ツールヒントの評価値に表示する説明のセットを取得または設定します。配列は使用可能な評価値ごとの文字列を含める必要があり、評価削除オプション用の省略可能な文字列を (配列の末尾に) 含めることができます。</msg>
  <msg name="WinJS.UI.Rating.element">評価をホストする DOM 要素を取得します。</msg>
  <msg name="WinJS.UI.Rating.addEventListener">指定したイベントのイベント ハンドラーを登録します。</msg>
  <msg name="WinJS.UI.Rating.addEventListener_p:eventName">イベント名を指定します。</msg>
  <msg name="WinJS.UI.Rating.addEventListener_p:eventCallback">このイベントに関連付けるイベント ハンドラー関数。</msg>
  <msg name="WinJS.UI.Rating.addEventListener_p:capture">キャプチャ フェーズのイベント ハンドラーを登録するには True に設定します。バブル フェーズのイベント ハンドラーを登録するには False に設定します。</msg>
  <msg name="WinJS.UI.Rating.removeEventListener">指定したイベントのイベント ハンドラーの登録を解除します。</msg>
  <msg name="WinJS.UI.Rating.removeEventListener_p:eventCallback">削除するイベント ハンドラー関数。</msg>
  <msg name="WinJS.UI.Rating.removeEventListener_p:capture">キャプチャ フェーズのイベント ハンドラーの登録を解除するには True に設定します。それ以外は、False に設定してバブル フェーズのイベント ハンドラーの登録を解除します。</msg>
  <msg name="WinJS.UI.ToggleSwitch">ユーザーがオプションのオンとオフを切り替えるためのコントロール。</msg>
  <msg name="WinJS.UI.ToggleSwitch_e:change">スイッチがオン (checked は True に設定されます) かオフ (checked は False に設定されます) に切り替わると発生します。</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:toggle">ToggleSwitch コントロール全体。</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:switch">ToggleSwitch の状態をユーザーが切り替えることができるようにするスライダー。</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:title">ToggleSwitch コントロールのメイン テキストです。</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:label-on">スイッチがオンのときのテキスト。</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:label-off:">スイッチがオフのときのテキスト。</msg>
  <msg name="WinJS.UI.ToggleSwitch.constructor">新しい ToggleSwitch を作成します。</msg>
  <msg name="WinJS.UI.ToggleSwitch.constructor_p:element">ToggleSwitch をホストする DOM 要素。</msg>
  <msg name="WinJS.UI.ToggleSwitch.constructor_p:options">新しいコントロールに適用するプロパティと値のペアを 1 つ以上含むオブジェクト。オプションのオブジェクトの各プロパティは、コントロールのプロパティまたはイベントの 1 つに対応します。イベント名は &quot;on&quot; で始めてください。たとえば、change イベントのハンドラーを作成するには、&quot;onchange&quot; という名前のプロパティをオプションのオブジェクトに追加し、イベント ハンドラーに値を設定します。このパラメーターは省略できます。</msg>
  <msg name="WinJS.UI.ToggleSwitch.constructor_returnValue">新しい ToggleSwitch。</msg>
  <msg name="WinJS.UI.ToggleSwitch.checked">コントロールがオン (checked は True に設定されます) かオフ (checked は False に設定されます) かどうかを取得または設定します。</msg>
  <msg name="WinJS.UI.ToggleSwitch.disabled">コントロールが無効かどうかを指定する値を取得または設定します。</msg>
  <msg name="WinJS.UI.ToggleSwitch.element">ToggleSwitch コントロールをホストする DOM 要素。</msg>
  <msg name="WinJS.UI.ToggleSwitch.labelOn">コントロールがオン (checked は True に設定されます) のときに表示されるテキストを取得または設定します。既定値は &quot;On&quot; です。</msg>
  <msg name="WinJS.UI.ToggleSwitch.labelOff">コントロールがオフ (checked は False に設定されます) のときに表示されるテキストを取得または設定します。既定値は &quot;Off&quot; です。</msg>
  <msg name="WinJS.UI.ToggleSwitch.title">ToggleSwitch コントロールのメイン テキストを取得または設定します。このテキストは、コントロールがオンかオフに切り替わったかどうかに関係なく、常に表示されます。</msg>
  <msg name="WinJS.UI.SemanticZoom">2 つの子コントロールによって提供される 2 種類の異なるビューの間でユーザーがズームできるようにします。片方の子コントロールは縮小ビューを提供し、もう一方は拡大ビューを提供します。</msg>
  <msg name="WinJS.UI.SemanticZoom_part:semanticZoom">SemanticZoom コントロール全体。</msg>
  <msg name="WinJS.UI.SemanticZoom.constructor">新しい SemanticZoom を作成します。</msg>
  <msg name="WinJS.UI.SemanticZoom.constructor_p:element">SemanticZoom をホストする DOM 要素。</msg>
  <msg name="WinJS.UI.SemanticZoom.constructor_p:options">新しいコントロールに適用するプロパティと値のペアを 1 つ以上含むオブジェクト。オプションのオブジェクトの各プロパティは、コントロールのプロパティまたはイベントの 1 つに対応します。このパラメーターは省略できます。</msg>
  <msg name="WinJS.UI.SemanticZoom.constructor_returnValue">新しい SemanticZoom コントロール。</msg>
  <msg name="WinJS.UI.SemanticZoom.element">SemanticZoom コントロールをホストする DOM 要素。</msg>
  <msg name="WinJS.UI.SemanticZoom.enableButton">セマンティック ズーム ボタンを表示するかどうかを指定する値を取得または設定します。</msg>
  <msg name="WinJS.UI.SemanticZoom.zoomedOut">縮小ビューが現在表示されているかどうかを指定する値を取得または設定します。</msg>
  <msg name="WinJS.UI.SemanticZoom.zoomFactor">縮小ビューの縮尺を指定する値を 0.2 から 0.85 の範囲で取得または設定します。既定値は 0.65 です。</msg>
  <msg name="WinJS.UI.SemanticZoom.locked">SemanticZoom はロックされていて、ビューの間でのズームが無効かどうかを示す値を取得または設定します。</msg>
  <msg name="WinJS.UI.SemanticZoom.forceLayout">SemanticZoom のレイアウトを強制的に更新します。SemanticZoom を再度表示するときに、style.display のプロパティを &quot;none&quot; に設定した後でこの関数を使用します。</msg>
  <msg name="WinJS.UI._Overlay">オーバーレイ コントロールを作成し、基になる DOM 要素に関連付けます。</msg>
  <msg name="WinJS.UI._Overlay_p:element">オーバーレイ コントロールに関連付けられる DOM 要素。</msg>
  <msg name="WinJS.UI._Overlay_p:options">オーバーレイ コントロールに初期状態で適用されるオプションのセット。</msg>
  <msg name="WinJS.UI._Overlay_returnValue">完全に構築されたオーバーレイ コントロール。</msg>
  <msg name="WinJS.UI._Overlay.element">オーバーレイが関連付けられた DOM 要素。</msg>
  <msg name="WinJS.UI._Overlay.disabled">オーバーレイを無効にし、HTML の disabled 属性を取得または設定します。無効にした場合は、オーバーレイは show() と共に表示されなくなり、現在表示されている場合は非表示になります。</msg>
  <msg name="WinJS.UI._Overlay.show">他の状態にかかわらず、非表示の場合、オーバーレイを表示します</msg>
  <msg name="WinJS.UI._Overlay.hide">他の状態にかかわらず、表示されている場合、オーバーレイを非表示にします</msg>
  <msg name="WinJS.UI._Overlay.hidden">読み取り専用、オーバーレイが現在表示されていない場合は True。</msg>
  <msg name="WinJS.UI._Overlay.addEventListener">このオーバーレイの DOM 要素にイベント リスナーを追加します</msg>
  <msg name="WinJS.UI._Overlay.addEventListener_p:type">必須。追加する、&quot;beforehide&quot;、&quot;afterhide&quot;、&quot;beforeshow&quot; または &quot;aftershow&quot; のイベントの種類</msg>
  <msg name="WinJS.UI._Overlay.addEventListener_p:listener">必須。このイベントに関連付けるイベント ハンドラー関数。</msg>
  <msg name="WinJS.UI._Overlay.addEventListener_p:useCapture">省略可能。True の場合、イベント キャプチャ フェーズに登録します。イベント バブル フェーズの場合は False。</msg>
  <msg name="WinJS.UI._Overlay.removeEventListener">このオーバーレイの DOM 要素からイベント リスナーを削除します。</msg>
  <msg name="WinJS.UI._Overlay.removeEventListener_p:type">必須。削除する、&quot;beforehide&quot;、&quot;afterhide&quot;、&quot;beforeshow&quot; または &quot;aftershow&quot; のイベントの種類</msg>
  <msg name="WinJS.UI.AppBarCommand">AppBars の AppBarCommands プロバイド ボタン、トグル ボタン、フライアウト ボタン、または区切り記号の機能。</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommand">AppBarCommand コントロール自体。</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandIcon">AppBarCommand のアイコン ボックス</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandImage">AppBarCommand のアイコンのイメージの形式</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandRing">AppBarCommand のアイコン リング</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandLabel">AppBarCommand のラベル</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor">AppBarCommand コントロールを作成します。</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor_p:element">AppBarCommand コントロールに関連付けられる DOM 要素。AppBarCommand は null の場合に 1 を作成します。</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor_p:options">AppBarCommand コントロールに初期状態で適用されるオプションのセット。</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor_returnValue">AppBarCommand のコントロール。</msg>
  <msg name="WinJS.UI.AppBarCommand.id">AppBarCommand の ID。</msg>
  <msg name="WinJS.UI.AppBarCommand.type">AppBarCommand の種類、有効な値は &quot;button&quot;、&quot;toggle&quot;、&quot;flyout&quot;、または &quot;separator&quot;</msg>
  <msg name="WinJS.UI.AppBarCommand.label">AppBarCommand のラベル。</msg>
  <msg name="WinJS.UI.AppBarCommand.icon">AppBarCommand のアイコン。</msg>
  <msg name="WinJS.UI.AppBarCommand.onclick">AppBarCommand が呼び出されたときに呼び出すクリック イベント</msg>
  <msg name="WinJS.UI.AppBarCommand.flyout">フライアウト型の AppBarCommands では、このコマンドが呼び出した WinJS.UI.Flyout の戻りを取得します。設定は、呼び出そうとしているフライアウトの文字列 ID、フライアウトの DOM オブジェクト、またはフライアウトのオブジェクト自体を使用する場合があります。</msg>
  <msg name="WinJS.UI.AppBarCommand.section">ボタンを配置するセクション (&quot;global&quot; または &quot;selection&quot; のどちらか) を設定または取得します。</msg>
  <msg name="WinJS.UI.AppBarCommand.tooltip">AppBarCommand のツールヒント テキスト</msg>
  <msg name="WinJS.UI.AppBarCommand.selected">トグル ボタンの選択状態を設定または取得します</msg>
  <msg name="WinJS.UI.AppBarCommand.element">AppBarCommad が関連付けられた DOM 要素</msg>
  <msg name="WinJS.UI.AppBarCommand.disabled">コマンドを無効にします。これは HTML の disabled 属性を取得または設定します。</msg>
  <msg name="WinJS.UI.AppBarCommand.hidden">コマンドが現在非表示かどうかを判断します。</msg>
  <msg name="WinJS.UI.AppBarCommand.addEventListener">このコマンドの DOM 要素にイベント リスナーを追加します。</msg>
  <msg name="WinJS.UI.AppBarCommand.addEventListener_p:type">必須。追加するイベントの種類。</msg>
  <msg name="WinJS.UI.AppBarCommand.removeEventListener">このコマンドの DOM 要素からイベント リスナーを削除します。</msg>
  <msg name="WinJS.UI.AppBarCommand.removeEventListener_p:type">必須。削除するイベントの種類。</msg>
  <msg name="WinJS.UI.AppBarCommand.extraClass">構築時に余分な CSS クラスを追加します。</msg>
  <msg name="WinJS.UI.AppBar">AppBar のコントロールは、AppBarCommands またはユーザーが表示または非表示にできるその他の情報のサーフェイスを提供します。</msg>
  <msg name="WinJS.UI.AppBar_e:beforeshow">AppBar を表示する直前に発生します。</msg>
  <msg name="WinJS.UI.AppBar_e:aftershow">AppBar が完全に表示された直後に発生します。</msg>
  <msg name="WinJS.UI.AppBar_e:beforehide">AppBar を非表示にする直前に発生します。</msg>
  <msg name="WinJS.UI.AppBar_e:afterhide">AppBar が完全に非表示にされた直後に発生します。</msg>
  <msg name="WinJS.UI.AppBar_part:appbar">AppBar コントロール自体。</msg>
  <msg name="WinJS.UI.AppBar_part:appBarCustom">appbar カスタム レイアウトのスタイル</msg>
  <msg name="WinJS.UI.AppBar.constructor">AppBar コントロールを作成します。</msg>
  <msg name="WinJS.UI.AppBar.constructor_p:element">AppBar コントロールに関連付けられる DOM 要素。</msg>
  <msg name="WinJS.UI.AppBar.constructor_p:options">AppBar コントロールに初期状態で適用されるオプションのセット。</msg>
  <msg name="WinJS.UI.AppBar.constructor_returnValue">作成された AppBar コントロール。</msg>
  <msg name="WinJS.UI.AppBar.placement">ディスプレイ上の AppBar の位置。値は &quot;top&quot; または &quot;bottom&quot; です。</msg>
  <msg name="WinJS.UI.AppBar.layout">AppBar のコンテンツのレイアウト、&quot;commands&quot; または &quot;custom&quot; のどちらか。</msg>
  <msg name="WinJS.UI.AppBar.sticky">AppBar が付箋かどうか。</msg>
  <msg name="WinJS.UI.AppBar.commands">AppBar のコマンド、AppBarCommand のオプションの配列を含みます。</msg>
  <msg name="WinJS.UI.AppBar.getCommandById">この AppBar の指定された ID のコマンドを取得します。複数のコマンドがある場合、すべてが返されます。</msg>
  <msg name="WinJS.UI.AppBar.getCommandById_p:id">返すコマンドの ID。</msg>
  <msg name="WinJS.UI.AppBar.getCommandById_returnValue">コマンドが見つかったとき、複数のコマンドに同じ ID がある場合はコマンドの配列、またはその ID のコマンドが見つからない場合は null。</msg>
  <msg name="WinJS.UI.AppBar.showCommands">この AppBar 内のコマンドを表示</msg>
  <msg name="WinJS.UI.AppBar.showCommands_p:commands">必須。表示するコマンド。文字列、DOM 要素、WinJS のオブジェクトのいずれか。</msg>
  <msg name="WinJS.UI.AppBar.hideCommands">この AppBar 内のコマンドを非表示にする</msg>
  <msg name="WinJS.UI.AppBar.hideCommands_p:commands">必須。非表示にするコマンド。文字列、DOM 要素、WinJS のオブジェクトのいずれか。</msg>
  <msg name="WinJS.UI.AppBar.showOnlyCommands">指定されたコマンドを表示し、AppBar のその他すべてのコマンドを非表示にします。</msg>
  <msg name="WinJS.UI.AppBar.show">他の状態にかかわらず、非表示の場合、AppBar を表示します</msg>
  <msg name="WinJS.UI.AppBar.hide">他の状態にかかわらず、表示されている場合、AppBar を非表示にします</msg>
  <msg name="WinJS.UI.Flyout">フライアウトのコントロールは、少量のコンテンツの一時的なサーフェイスを提供します。</msg>
  <msg name="WinJS.UI.Flyout_name">フライアウト</msg>
  <msg name="WinJS.UI.Flyout_e:beforeshow">フライアウトを表示する直前に発生します。</msg>
  <msg name="WinJS.UI.Flyout_e:aftershow">フライアウトが完全に表示された直後に発生します。</msg>
  <msg name="WinJS.UI.Flyout_e:beforehide">フライアウトを非表示にする直前に発生します。</msg>
  <msg name="WinJS.UI.Flyout_e:afterhide">フライアウトが完全に非表示にされた直後に発生します。</msg>
  <msg name="WinJS.UI.Flyout_part:flyout">フライアウト コントロール自体。</msg>
  <msg name="WinJS.UI.Flyout.constructor">フライアウト コントロールを作成し、基になる DOM 要素に関連付けます。</msg>
  <msg name="WinJS.UI.Flyout.constructor_p:element">フライアウト コントロールに関連付けられる DOM 要素。</msg>
  <msg name="WinJS.UI.Flyout.constructor_p:options">フライアウト コントロールに初期状態で適用されるオプションのセット。</msg>
  <msg name="WinJS.UI.Flyout.constructor_returnValue">完全に構築されたフライアウト コントロール。</msg>
  <msg name="WinJS.UI.Flyout.anchor">アンカー要素は、フライアウトを生成し、フライアウトの基準となる HTML 要素です。show() メソッドに渡したアンカーでオーバーライドできます。</msg>
  <msg name="WinJS.UI.Flyout.placement">このフライアウトに使用され、show() に渡された位置によってオーバーライドされる、既定の位置。</msg>
  <msg name="WinJS.UI.Flyout.alignment">このフライアウトに使用され、show() に渡された配置によってオーバーライドされる、既定の配置。</msg>
  <msg name="WinJS.UI.Flyout.show">他の状態にかかわらず、非表示の場合、フライアウトを表示します</msg>
  <msg name="WinJS.UI.Flyout.show_p:anchor">今回だけアンカーのプロパティをオーバーライドし、フライアウトを固定する DOM 要素、または DOM 要素の ID。</msg>
  <msg name="WinJS.UI.Flyout.show_p:placement">アンカーに対するフライアウトの位置 (&quot;auto&quot; (既定)、&quot;top&quot;、&quot;bottom&quot;、&quot;left&quot; または &quot;right&quot;)。このパラメーターは、この表示のみ位置プロパティをオーバーライドします。</msg>
  <msg name="WinJS.UI.Flyout.show:alignment">&quot;top&quot; または &quot;bottom&quot; 位置の場合、アンカーの端に対するフライアウトの配置 (&quot;center&quot; (既定)、&quot;left&quot; または &quot;right&quot;)。このパラメーターは、この表示のみ配置プロパティをオーバーライドします。</msg>
  <msg name="WinJS.UI.Flyout.hide">他の状態にかかわらず、表示されている場合、フライアウトを非表示にします</msg>
  <msg name="WinJS.UI.Menu">メニュー コントロールは、ユーザーに MenuCommands を提供します。</msg>
  <msg name="WinJS.UI.Menu_name">メニュー</msg>
  <msg name="WinJS.UI.Menu_e:beforeshow">メニューを表示する直前に発生します。</msg>
  <msg name="WinJS.UI.Menu_e:aftershow">メニューが完全に表示された直後に発生します。</msg>
  <msg name="WinJS.UI.Menu_e:beforehide">メニューを非表示にする直前に発生します。</msg>
  <msg name="WinJS.UI.Menu_e:afterhide">メニューが完全に非表示にされた直後に発生します。</msg>
  <msg name="WinJS.UI.Menu_part:menu">メニュー コントロール自体。</msg>
  <msg name="WinJS.UI.Menu.constructor">メニュー コントロールを作成し、基になる DOM 要素に関連付けます。</msg>
  <msg name="WinJS.UI.Menu.constructor_p:element">メニュー コントロールに関連付けられる DOM 要素。</msg>
  <msg name="WinJS.UI.Menu.constructor_p:options">メニュー コントロールに初期状態で適用されるオプションのセット。</msg>
  <msg name="WinJS.UI.Menu.constructor_returnValue">完全に構築されたメニュー コントロール。</msg>
  <msg name="WinJS.UI.Menu.commands">メニューのコマンド、MenuCommand のオプションの配列を含みます。</msg>
  <msg name="WinJS.UI.Menu.getCommandById">このメニューの指定された ID のコマンドを取得します。複数のコマンドがある場合、すべてが返されます。</msg>
  <msg name="WinJS.UI.Menu.showCommands">このメニュー内のコマンドを表示</msg>
  <msg name="WinJS.UI.Menu.hideCommands">このメニュー内のコマンドを非表示にする</msg>
  <msg name="WinJS.UI.Menu.showOnlyCommands">指定されたコマンドを表示し、メニューのその他すべてのコマンドを非表示にします。</msg>
  <msg name="WinJS.UI.Menu.show">他の状態にかかわらず、非表示の場合、メニューを表示します</msg>
  <msg name="WinJS.UI.Menu.show_p:anchor">今回だけアンカーのプロパティをオーバーライドし、メニューを固定する DOM 要素、または DOM 要素の ID。</msg>
  <msg name="WinJS.UI.Menu.show_p:placement">アンカーに対するメニューの位置 (&quot;auto&quot; (既定)、&quot;top&quot;、&quot;bottom&quot;、&quot;left&quot; または &quot;right&quot;)。このパラメーターは、この表示のみ位置プロパティをオーバーライドします。</msg>
  <msg name="WinJS.UI.Menu.show_p:alignment">&quot;top&quot; または &quot;bottom&quot; 位置の場合、アンカーの端に対するメニューの配置 (&quot;center&quot; (既定)、&quot;left&quot; または &quot;right&quot;)。このパラメーターは、この表示のみ配置プロパティをオーバーライドします。</msg>
  <msg name="WinJS.UI.MenuCommand">メニューの MenuCommands プロバイド ボタン、トグル ボタン、フライアウト ボタン、または区切り記号の機能。</msg>
  <msg name="WinJS.UI.MenuCommand_name">MenuCommand コントロール自体。</msg>
  <msg name="WinJS.UI.MenuCommand.constructor">MenuCommand コントロールを作成します。</msg>
  <msg name="WinJS.UI.MenuCommand.constructor_p:element">MenuCommand コントロールに関連付けられる DOM 要素。MenuCommand は null の場合に 1 を作成します。</msg>
  <msg name="WinJS.UI.MenuCommand.constructor_p:options">MenuCommand コントロールに初期状態で適用されるオプションのセット。</msg>
  <msg name="WinJS.UI.MenuCommand.constructor_returnValue">MenuCommand コントロール。</msg>
  <msg name="WinJS.UI.MenuCommand.id">MenuCommand の ID。</msg>
  <msg name="WinJS.UI.MenuCommand.type">MenuCommand の種類、有効な値は &quot;button&quot;、&quot;toggle&quot;、&quot;flyout&quot;、または &quot;separator&quot;</msg>
  <msg name="WinJS.UI.MenuCommand.label">MenuCommand のラベル</msg>
  <msg name="WinJS.UI.MenuCommand.onclick">MenuCommand が呼び出されたときに呼び出すクリック イベント</msg>
  <msg name="WinJS.UI.MenuCommand.flyout">フライアウト型の MenuCommand では、このコマンドが呼び出した WinJS.UI.Flyout の戻り値を取得します。設定は、呼び出そうとしているフライアウトの文字列 ID、フライアウトの DOM オブジェクト、またはフライアウトのオブジェクト自体を使用する場合があります。</msg>
  <msg name="WinJS.UI.MenuCommand.element">MenuCommand が関連付けられた DOM 要素。</msg>
  <msg name="WinJS.UI.SettingsFlyout">SettingsFlyout は設定ペインの情報へのアクセスを提供します。</msg>
  <msg name="WinJS.UI.SettingsFlyout_name">設定のフライアウト</msg>
  <msg name="WinJS.UI.SettingsFlyout_e:beforeshow">SettingsFlyout を表示する直前に発生します。</msg>
  <msg name="WinJS.UI.SettingsFlyout_e:aftershow">SettingsFlyout が完全に表示された直後に発生します。</msg>
  <msg name="WinJS.UI.SettingsFlyout_e:beforehide">SettingsFlyout を非表示にする直前に発生します。</msg>
  <msg name="WinJS.UI.SettingsFlyout_e:afterhide">SettingsFlyout が完全に非表示にされた直後に発生します。</msg>
  <msg name="WinJS.UI.SettingsFlyout_part:settings">SettingsFlyout コントロール自体。</msg>
  <msg name="WinJS.UI.SettingsFlyout.constructor">SettingsFlyout コントロールを作成します。</msg>
  <msg name="WinJS.UI.SettingsFlyout.constructor_p:element">SettingsFlyout コントロールに関連付けられる DOM 要素。</msg>
  <msg name="WinJS.UI.SettingsFlyout.constructor_p:options">SettingsFlyout コントロールに初期状態で適用されるオプションのセット。</msg>
  <msg name="WinJS.UI.SettingsFlyout.constructor_returnValue">作成された SettingsFlyout コントロール。</msg>
  <msg name="WinJS.UI.SettingsFlyout.width">SettingsFlyout の幅、&quot;narrow&quot; または &quot;wide&quot;。</msg>
  <msg name="WinJS.UI.SettingsFlyout.settingsCommandId">SettingsFlyout コントロールの設定コマンド ID を定義します。</msg>
  <msg name="WinJS.UI.SettingsFlyout.show">非表示の場合に、SettingsFlyout を表示します。</msg>
  <msg name="WinJS.UI.SettingsFlyout.hide">他の状態にかかわらず、表示されている場合、SettingsFlyout を非表示にします。</msg>
  <msg name="WinJS.UI.Tooltip">画像と書式設定を含むことができるツールヒントを表示します。</msg>
  <msg name="WinJS.UI.Tooltip_e:beforeopen">ツールヒントが表示されようとしているときに発生します。</msg>
  <msg name="WinJS.UI.Tooltip_e:opened">ツールヒントが表示されているときに発生します。</msg>
  <msg name="WinJS.UI.Tooltip_e:beforeclose">ツールヒントが非表示にされようとしているときに発生します。</msg>
  <msg name="WinJS.UI.Tooltip_e:close">ツールヒントが非表示のときに発生します。</msg>
  <msg name="WinJS.UI.Tooltip_e:tooltip">ツールヒント コントロール全体。</msg>
  <msg name="WinJS.UI.Tooltip.constructor">新しいツール ヒントを作成します。</msg>
  <msg name="WinJS.UI.Tooltip.constructor_p:element">ツール ヒントをホストする DOM 要素。</msg>
  <msg name="WinJS.UI.Tooltip.constructor_p:options">新しいコントロールに適用するプロパティと値のペアを 1 つ以上含むオブジェクト。オプションのオブジェクトの各プロパティは、コントロールのプロパティまたはイベントの 1 つに対応します。イベント名は &quot;on&quot; で始めてください。たとえば、opened イベントのハンドラーを作成するには、&quot;onopened&quot; という名前のプロパティをオプションのオブジェクトに追加し、イベント ハンドラーに値を設定します。このパラメーターは省略できます。</msg>
  <msg name="WinJS.UI.Tooltip.constructor_returnValue">新しいツールヒント。</msg>
  <msg name="WinJS.UI.Tooltip.innerHTML">ツール ヒントの HTML コンテンツを取得または設定します。</msg>
  <msg name="WinJS.UI.Tooltip.element">ツール ヒントをホストする DOM 要素を取得または設定します。</msg>
  <msg name="WinJS.UI.Tooltip.contentElement">ツール ヒントのコンテンツとなる DOM 要素を取得または設定します。</msg>
  <msg name="WinJS.UI.Tooltip.placement">ターゲット要素に対するツールヒントの位置を、上、下、左、右から取得または設定します。</msg>
  <msg name="WinJS.UI.Tooltip.infotip">ツール ヒントがヒントかどうか、ツール ヒントに多くの情報が含まれており、一般的なツールヒントより長く表示する必要があるかを指定する値を取得または設定します。既定値は false です。</msg>
  <msg name="WinJS.UI.Tooltip.extraClass">ツール ヒント コントロール ホスト要素に適用する、追加の CSS クラスを取得または設定します。</msg>
  <msg name="WinJS.UI.Tooltip.open">ツール ヒントを表示します。</msg>
  <msg name="WinJS.UI.Tooltip.open_p:type">表示するツール ヒントの型。&quot;touch&quot;、&quot;mouseover&quot;、&quot;mousedown&quot; または &quot;keyboard&quot;。既定値は &quot;mousedown&quot; です。</msg>
  <msg name="WinJS.UI.Tooltip.close">ツールヒントを非表示にします。</msg>
  <msg name="WinJS.UI.ViewBox">1 つの子要素をスケーリングし、サイズを変更しないで空き領域を埋めるようにします。このコントロールは、コンテナーのサイズ変更や子要素のサイズ変更に反応します。たとえば、メディアのクエリは、縦横比の変更につながる場合があります。</msg>
  <msg name="WinJS.UI.ViewBox_name">表示ボックス</msg>
  <msg name="WinJS.UI.ViewBox.constructor">ViewBox コントロールの新しいインスタンスを初期化します。</msg>
  <msg name="WinJS.UI.ViewBox.constructor_p:element">スケーリング ボックスとして機能する DOM 要素。この要素は、割り当てられた幅と高さを 100% 塗りつぶします。</msg>
  <msg name="WinJS.UI.ViewBox.constructor_p:options">ViewBox コントロールに初期状態で適用されるオプションのセット。</msg>
  <msg name="WinJS.UI.ViewBox.constructor_returnValue">作成された ViewBox コントロール。</msg>
  <msg name="WinJS.UI.ViewBox.element">スケーリング ボックスとして機能する DOM 要素を取得します。</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation">展開アニメーションを作成します。ExpandAnimation オブジェクトを作成した後、要素を新しい位置に移動するためにドキュメントを修正し、ExpandAnimation のオブジェクトの実行メソッドを呼び出します。</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation_p:revealed">表示された単一の要素または要素のコレクション。</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation_p:affected">展開によって位置に影響がある単一の要素または要素のコレクション。</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation_returnValue">アニメーションが終了すると完了する約束を実行メソッドが戻す ExpandAnimation のオブジェクト。</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation">折りたたみのアニメーションを作成します。CollapseAnimation オブジェクトを作成した後、要素を新しい位置に移動するためにドキュメントを修正し、CollapseAnimation のオブジェクトの実行メソッドを呼び出します。</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation_p:hidden">ビューから削除される単一の要素または要素のコレクション。アニメーションが完了すると、アプリケーションは要素を非表示にするか、ドキュメントから削除する必要があります。</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation_p:affected">折りたたみによって位置に影響がある単一の要素または要素のコレクション。</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation_returnValue">アニメーションが終了すると完了する約束を実行メソッドが戻す CollapseAnimation のオブジェクト。</msg>
  <msg name="WinJS.UI.Animation.createRepositionAnimation">位置変更のアニメーションを作成します。RepositionAnimation オブジェクトを作成した後、要素を新しい位置に移動するためにドキュメントを修正し、RepositionAnimation のオブジェクトの実行メソッドを呼び出します。</msg>
  <msg name="WinJS.UI.Animation.createRepositionAnimation_p:element">位置が変更された単一の要素または要素のコレクション。</msg>
  <msg name="WinJS.UI.Animation.createRepositionAnimation_returnValue">アニメーションが終了すると完了する約束を実行メソッドが戻す RepositionAnimation のオブジェクト。</msg>
  <msg name="WinJS.UI.Animation.fadeIn">フェード イン アニメーションを実行します。</msg>
  <msg name="WinJS.UI.Animation.fadeIn_p:element">フェード インする単一の要素または要素のコレクション。アニメーションの終了時は、要素の不透明度は 1 です。</msg>
  <msg name="WinJS.UI.Animation.fadeIn_returnValue">アニメーションが終了すると完了する約束のオブジェクト。</msg>
  <msg name="WinJS.UI.Animation.fadeOut">フェード アウト アニメーションを実行します。</msg>
  <msg name="WinJS.UI.Animation.fadeOut_p:element">フェード アウトする単一の要素または要素のコレクション。アニメーションの終了時は、要素の不透明度は 0 です。</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation">リストに追加するアニメーションを作成します。AddToListAnimation オブジェクトを作成した後、要素を新しい位置に移動するためにドキュメントを修正し、AddToListAnimation のオブジェクトの実行メソッドを呼び出します。</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation_p:added">追加された単一の要素または要素のコレクション。</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation_p:affected">追加によって位置に影響がある単一の要素または要素のコレクション。</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation_returnValue">アニメーションが終了すると完了する約束を実行メソッドが戻す AddToListAnimation のオブジェクト。</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation">リストから削除するアニメーションを作成します。DeleteFromListAnimation オブジェクトを作成した後、削除を反映するためにドキュメントを修正し、DeleteFromListAnimation のオブジェクトの実行メソッドを呼び出します。</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation_p:deleted">削除される単一の要素または要素のコレクション。アニメーションが完了すると、アプリケーションは要素を非表示にするか、ドキュメントから削除する必要があります。</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation_p:remaining">削除によって位置に影響がある単一の要素または要素のコレクション。</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation_returnValue">アニメーションが終了すると完了する約束を実行メソッドが戻す DeleteFromListAnimation のオブジェクト。</msg>
  <msg name="WinJS.UI.Animation.createAddToSearchListAnimation">検索結果のリストに追加するアニメーションを作成します。これは AddToListAnimation に似ていますが、より高速です。AddToSearchListAnimation オブジェクトを作成した後、要素を新しい位置に移動するためにドキュメントを修正し、AddToSearchListAnimation のオブジェクトの実行メソッドを呼び出します。</msg>
  <msg name="WinJS.UI.Animation.createAddToSearchListAnimation_returnValue">アニメーションが終了すると完了する約束を実行メソッドが戻す AddToSearchListAnimation のオブジェクト。</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromSearchListAnimation">検索結果のリストから削除するアニメーションを作成します。これは DeleteFromListAnimation に似ていますが、より高速です。DeleteFromSearchListAnimation オブジェクトを作成した後、要素を新しい位置に移動するためにドキュメントを修正し、DeleteFromSearchListAnimation のオブジェクトの実行メソッドを呼び出します。</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromSearchListAnimation_returnValue">アニメーションが終了すると完了する約束を実行メソッドが戻す DeleteFromSearchListAnimation のオブジェクト。</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI">画面の端の位置に要素をスライドします。このアニメーションは appbar のような小さいオブジェクトのために設計されています。</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI_p:element">位置にスライドされる単一の要素または要素のコレクション。関数が呼び出されたとき、要素は最終的な位置にある必要があります。</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI_p:offset">省略可能なオフセットのオブジェクト、またはアニメーションの開始点を示しているオフセット オブジェクトの配列のコレクション。オフセットのオブジェクトの数が要素のパラメーターの長さよりも少ない場合、最後の値が残りのすべての要素に対して繰り返されます。このパラメーターが省略された場合は、既定値が使用されます。</msg>
  <msg name="WinJS.UI.Animation.showPanel">画面の端の位置に要素をスライドします。このアニメーションはキーボードのような大きいオブジェクトのために設計されています。</msg>
  <msg name="WinJS.UI.Animation.showPanel_returnValue">約束のオブジェクト</msg>
  <msg name="WinJS.UI.Animation.hideEdgeUI">ビューの範囲外にある画面の端に要素をスライドします。このアニメーションは appbar のような小さいオブジェクトのために設計されています。</msg>
  <msg name="WinJS.UI.Animation.hideEdgeUI_p:element">スライド アウトされる単一の要素または要素のコレクション。関数が呼び出されたとき、要素は画面上の位置にある必要があります。</msg>
  <msg name="WinJS.UI.Animation.hideEdgeUI_p:offset">省略可能なオフセットのオブジェクト、またはアニメーションの終了点を示しているオフセット オブジェクトの配列のコレクション。オフセットのオブジェクトの数が要素のパラメーターの長さよりも少ない場合、最後の値が残りのすべての要素に対して繰り返されます。このパラメーターが省略された場合は、既定値が使用されます。</msg>
  <msg name="WinJS.UI.Animation.hidePanel">ビューの範囲外にある画面の端に要素をスライドします。このアニメーションはキーボードのような大きいオブジェクトのために設計されています。</msg>
  <msg name="WinJS.UI.Animation.showPopup">ポップアップ形式で要素を表示します。</msg>
  <msg name="WinJS.UI.Animation.showPopup_p:element">ポップアップのように表示される単一の要素または要素のコレクション。</msg>
  <msg name="WinJS.UI.Animation.hidePopup">画面からポップアップを削除します。</msg>
  <msg name="WinJS.UI.Animation.hidePopup_p:element">ポップアップのように隠される単一の要素または要素のコレクション。アニメーションが完了すると、アプリケーションは要素を非表示にするか、ドキュメントから削除する必要があります。</msg>
  <msg name="WinJS.UI.Animation.pointerDown">ポインターダウンのアニメーションを実行します。このアニメーションの効果を反転させるために pointerUp のアニメーションを使用します。</msg>
  <msg name="WinJS.UI.Animation.pointerDown_p:element">ポインターダウンのイベントに応答する単一の要素または要素のコレクション。アニメーションの終了時に、ポインターダウンの状態を反映するように要素のプロパティが変更されました。</msg>
  <msg name="WinJS.UI.Animation.pointerUp">ポインターアップのアニメーションを実行します。これは pointerDown アニメーションの効果を反転します。</msg>
  <msg name="WinJS.UI.Animation.pointerUp_p:element">ポインターアップのイベントに応答する単一の要素または要素のコレクション。アニメーションの終了時に、要素のプロパティは標準に戻されました。</msg>
  <msg name="WinJS.UI.Animation.dragSourceStart">ドラッグ開始のアニメーションを実行します。このアニメーションの効果を反転させるために dragSourceEnd のアニメーションを使用します。</msg>
  <msg name="WinJS.UI.Animation.dragSourceStart_p:dragSource">ドラッグされている単一の要素または要素のコレクション。アニメーションの終了時に、ドラッグの状態を反映するように要素のプロパティが変更されました。</msg>
  <msg name="WinJS.UI.Animation.dragSourceStart_p:affected">ドラッグされていないことを強調する単一の要素または要素のコレクション。アニメーションの終了時に、ドラッグの状態を反映するように要素のプロパティが変更されました。</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd">ドラッグ終了のアニメーションを実行します。これは dragSourceStart アニメーションの効果を反転します。</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd_p:dragSource">ドラッグされていなくなった単一の要素または要素のコレクション。アニメーションの終了時に、要素のプロパティは標準に戻されました。</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd_p:offset">省略可能なオフセットのオブジェクト、またはアニメーションの開始点を示しているオフセット オブジェクトの配列のコレクション。オフセットのオブジェクトの数が dragSource のパラメーターの長さよりも少ない場合、最後の値が残りのすべての要素に対して繰り返されます。このパラメーターが省略された場合は、既定値が使用されます。</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd_p:affected">ドラッグされていないことが強調された単一の要素または要素のコレクション。アニメーションの終了時に、要素のプロパティは標準に戻されました。</msg>
  <msg name="WinJS.UI.Animation.enterContent">コンテンツ開始のアニメーションを実行します。</msg>
  <msg name="WinJS.UI.Animation.enterContent_p:incoming">開始しようとしているコンテンツを表す単一の要素または要素のコレクション。アニメーションの終了時は、要素の不透明度は 1 です。</msg>
  <msg name="WinJS.UI.Animation.enterContent_p:offset">省略可能なオフセットのオブジェクト、またはアニメーションの開始点を示しているオフセット オブジェクトの配列のコレクション。オフセットのオブジェクトの数が開始パラメーターの長さよりも少ない場合、最後の値が残りのすべての要素に対して繰り返されます。このパラメーターが省略された場合は、既定値が使用されます。</msg>
  <msg name="WinJS.UI.Animation.exitContent">コンテンツ終了のアニメーションを実行します。</msg>
  <msg name="WinJS.UI.Animation.exitContent_p:outgoing">終了しようとしているコンテンツを表す単一の要素または要素のコレクション。アニメーションの終了時は、要素の不透明度は 0 です。</msg>
  <msg name="WinJS.UI.Animation.exitContent_p:offset">省略可能なオフセットのオブジェクト、またはアニメーションの終了点を示しているオフセット オブジェクトの配列のコレクション。オフセットのオブジェクトの数が終了パラメーターの長さよりも少ない場合、最後の値が残りのすべての要素に対して繰り返されます。このパラメーターが省略された場合は、既定値が使用されます。</msg>
  <msg name="WinJS.UI.Animation.dragBetweenEnter">ドラッグしたオブジェクトは他の要素の間にドロップできることを示すアニメーションを実行します。このアニメーションの効果を反転させるために dragBetweenLeave のアニメーションを使用します。</msg>
  <msg name="WinJS.UI.Animation.dragBetweenEnter_p:target">その間にドラッグしたオブジェクトをドロップできる単一の要素または要素のコレクション (通常は 2 つ)。アニメーションの終了時に、中間へのドラッグの状態を反映するように要素のプロパティが変更されました。</msg>
  <msg name="WinJS.UI.Animation.dragBetweenLeave">ドラッグしたオブジェクトは他の要素の間にドロップできなくなったことを示すアニメーションを実行します。これは dragBetweenEnter アニメーションの効果を反転します。</msg>
  <msg name="WinJS.UI.Animation.dragBetweenLeave_p:target">その間にドラッグしたオブジェクトをドロップできなくなった単一の要素または要素のコレクション (通常は 2 つ)。アニメーションの終了時に、dragSourceStart の状態を反映するように要素のプロパティが設定されました。</msg>
  <msg name="WinJS.UI.Animation.swipeSelect">ポインターが離れたときにスワイプで選択したオブジェクトをスライドして元の位置に戻し、選択マークを表示します。</msg>
  <msg name="WinJS.UI.Animation.swipeSelect_p:selected">選択されている単一の要素または要素のコレクション。アニメーションの終了時に、要素のプロパティは標準に戻されました。</msg>
  <msg name="WinJS.UI.Animation.swipeSelect_p:selection">選択マークである単一の要素または要素のコレクション。</msg>
  <msg name="WinJS.UI.Animation.swipeDeselect">ポインターが離れたときにスワイプで選択解除したオブジェクトをスライドして元の位置に戻し、選択マークを非表示にします。</msg>
  <msg name="WinJS.UI.Animation.swipeDeselect_p:deselected">選択が解除されている単一の要素または要素のコレクション。アニメーションの終了時に、要素のプロパティは標準に戻されました。</msg>
  <msg name="WinJS.UI.Animation.swipeReveal">スワイプの結果としてオブジェクトを表示するか、表示した後にスワイプで選択したオブジェクトをスライドして元の位置に戻します。</msg>
  <msg name="WinJS.UI.Animation.swipeReveal_p:target">選択されている単一の要素または要素のコレクション。アニメーションの終了時に、指定されたオフセットを反映するように要素のプロパティが変更されました。</msg>
  <msg name="WinJS.UI.Animation.swipeReveal_p:offset">省略可能なオフセットのオブジェクト、またはアニメーションの終了点を示しているオフセット オブジェクトの配列のコレクション。オブジェクトを元の位置に移動した場合、オフセットは { top: &quot;0px&quot;, left: &quot;0px&quot; } である必要があります。オフセットのオブジェクトの数が要素のパラメーターの長さよりも少ない場合、最後の値が残りのすべての要素に対して繰り返されます。このパラメーターが省略された場合は、既定値が使用されます。既定値は表示の動作を示します。</msg>
  <msg name="WinJS.UI.Animation.enterPage">enterPage アニメーションを実行します。</msg>
  <msg name="WinJS.UI.Animation.enterPage_p:element">開始しようとしているページを表す単一の要素または要素のコレクション。アニメーションの終了時は、要素の不透明度は 1 です。</msg>
  <msg name="WinJS.UI.Animation.exitPage">exitPage アニメーションを実行します。</msg>
  <msg name="WinJS.UI.Animation.exitPage_p:outgoing">終了しようとしているページを表す単一の要素または要素のコレクション。アニメーションの終了時は、要素の不透明度は 0 です。</msg>
  <msg name="WinJS.UI.Animation.crossFade">crossFade アニメーションを実行します。</msg>
  <msg name="WinJS.UI.Animation.crossFade_p:incoming">開始しようとしている単一の要素または要素のコレクション。アニメーションの終了時は、要素の不透明度は 1 です。</msg>
  <msg name="WinJS.UI.Animation.crossFade_p:outgoing">終了しようとしている単一の要素または要素のコレクション。アニメーションの終了時は、要素の不透明度は 0 です。</msg>
  <msg name="WinJS.UI.Animation.createPeekAnimation">ピークのアニメーションを作成します。PeekAnimation オブジェクトを作成した後、要素を新しい位置に移動するためにドキュメントを修正し、PeekAnimation のオブジェクトの実行メソッドを呼び出します。</msg>
  <msg name="WinJS.UI.Animation.createPeekAnimation_p:element">ピークのために位置が変更される単一の要素または要素のコレクション。</msg>
  <msg name="WinJS.UI.Animation.createPeekAnimation_returnValue">アニメーションが終了すると完了する約束を実行メソッドが戻す PeekAnimation のオブジェクト。</msg>
  <msg name="WinJS.UI.Animation.updateBadge">updateBadge アニメーションを実行します。</msg>
  <msg name="WinJS.UI.Animation.updateBadge_p:incoming">開始しようとしているバッジを表す単一の要素または要素のコレクション。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource._baseDataSourceConstructor">カスタム データ ソースの VirtualizedDataSource の基本クラスを初期化します。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource._baseDataSourceConstructor_p:itemIndex">IListDataAdapter を実装し、VirtualizedDataSource へデータを提供するオブジェクト。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource._baseDataSourceConstructor_p:options">VirtualizedDataSource に追加オプションを指定するプロパティを含むオブジェクト。cacheSize: 要求された場合にキャッシュする、要求されていない項目の最小数を指定する数字。オプションのパラメーターは省略できます。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler">IListDataAdapter.setNotificationHandler のメソッドに渡される IListDataNotificationHandler の実装。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.invalidateAll">データが変更されたことを、どのデータか指定しないで VirtualizedDataSource に通知します。一部またはすべての変更においてこのメソッドを呼び出すことは、一部のデータ ソースには実用的でない場合があります。この呼び出しは省略できます。ただし、与えられたデータ アダプターがこれを呼び出すことがない場合、アプリケーションは定期的に VirtualizedDataSource の invalidateAll を呼び出してデータを更新する必要があります。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.invalidateAll_returnValue">データが完全に更新され、すべての変更通知が送られたときに完了する約束。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.reload">リスト データが大幅に変更されたので最初から読み込み直すほうが良いことを、リスト データ ソースに通知します。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.beginNotifications">通知のバッチの開始を示します。VirtualizedDataSource のクライアントに送信される countChanged および indexChanged 通知の数を最小限にするために、他の一連の通知の呼び出しより先に呼び出します。endNotifications の呼び出しと組み合わせて使用する必要があります。ペアを入れ子にすることはできません。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted">項目が挿入されたという通知を出します。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:newItem">挿入された項目。これにはキーとデータ プロパティが必要です (IItem インターフェイスを実装する必要があります)。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:previousKey">挿入位置の前にある項目のキー、または項目がリストの先頭に挿入された場合は null。nextKey を指定した場合は null になる可能性があります。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:nextKey">挿入位置の後にある項目のキー、または項目がリストの末尾に挿入された場合は null。previousKey を指定した場合は null になる可能性があります。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:index">挿入された項目のインデックス。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.changed">項目が変更されたという通知を出します。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.changed_p:item">変更された項目を表す IItem。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved">項目が移動されたという通知を出します。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:item">移動された項目。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:previousKey">挿入位置の前にある項目のキー、または項目がリストの先頭に移動された場合は null。nextKey を指定した場合は null になる可能性があります。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:nextKey">挿入位置の後にある項目のキー、または項目がリストの末尾に移動された場合は null。previousKey を指定した場合は null になる可能性があります。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:oldIndex">移動前の項目のインデックス。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:newIndex">移動後の項目のインデックス。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.removed">項目が削除されたという通知を出します。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.removed_p:key">削除された項目のキー。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.removed_p:index">移動された項目のインデックス。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.endNotifications">beginNotifications の呼び出しで始まった一連の通知を完了します。</msg>
  <msg name="WinJS.UI.IListDataSource.createListBinding">クライアントがリストから読み込めるようにする IListBinding のオブジェクトを作成し、クライアントが既に読み込んだリストの一部に影響する変更通知を受け取ります。</msg>
  <msg name="WinJS.UI.IListDataSource.createListBinding_p:notificationHandler">IListNotificationHandler インターフェイスを実装するオブジェクト。このパラメーターを省略すると、変更通知は受け取れません。</msg>
  <msg name="WinJS.UI.IListDataSource.createListBinding_returnValue">IListBinding インターフェイスを実装するオブジェクト。</msg>
  <msg name="WinJS.UI.IListBinding">クライアントがリストから読み込めるようにし、クライアントが既に読み込んだリストの一部に影響する変更通知を受け取るインターフェイス。IListBinding は変更されうるリストをいつでも列挙することもできます。</msg>
  <msg name="WinJS.UI.IListBinding.jumpToItem">指定した項目を現在の項目にします。</msg>
  <msg name="WinJS.UI.IListBinding.jumpToItem_p:item">現在の項目にする IItem または IItemPromise。</msg>
  <msg name="WinJS.UI.IListBinding.jumpToItem_returnValue">IItemPromise のインターフェイスを実装し、指定された項目の約束として使用されるオブジェクト。指定された項目がリストにない場合は、約束は null 値になって完了します。</msg>
  <msg name="WinJS.UI.IListBinding.current">現在の項目を取得します。</msg>
  <msg name="WinJS.UI.IListBinding.current_returnValue">IItemPromise のインターフェイスを実装し、現在の項目の約束として使用されるオブジェクト。カーソルがリストの先頭または末尾を超えて移動した場合、約束は null 値になって完了します。現在の項目が削除か移動された場合、約束はエラーを返します。</msg>
  <msg name="WinJS.UI.IListBinding.previous">現在の項目の前にある項目を取得し、それを現在の項目にします。</msg>
  <msg name="WinJS.UI.IListBinding.previous_returnValue">IItemPromise のインターフェイスを実装し、前の項目の約束として使用されるオブジェクト。カーソルがリストの先頭を超えて移動する場合、約束は null 値になって完了します。</msg>
  <msg name="WinJS.UI.IListBinding.next">現在の項目の後にある項目を取得し、それを現在の項目にします。</msg>
  <msg name="WinJS.UI.IListBinding.next_returnValue">IItemPromise のインターフェイスを実装し、次の項目の約束として使用されるオブジェクト。カーソルがリストの末尾を超えて移動する場合、約束は null 値になって完了します。</msg>
  <msg name="WinJS.UI.IListBinding.releaseItem">指定された項目の変更通知を停止する要求を作成します。解放呼び出しの数と IItemPromise.retain 呼び出しの数が一致したときのみ、その項目は解放されます。解放呼び出しの数が保持呼び出しの数を超えることはできません。このメソッドは、この IListBinding が作成されたときに IListDataSource.createListBinding に IListNotificationHandler を渡した場合のみ存在します。</msg>
  <msg name="WinJS.UI.IListBinding.releaseItem_p:item">解放する IItem か IItemPromise。</msg>
  <msg name="WinJS.UI.IListBinding.release">リソースを解放し、通知を停止し、この IListBinding が戻したすべての追跡されている項目の、未処理の約束をキャンセルします。</msg>
  <msg name="WinJS.UI.IListBinding.first">リストの最初の項目を取得し、それを現在の項目にします。</msg>
  <msg name="WinJS.UI.IListBinding.first_returnValue">要求された項目の約束として使用される IItemPromise。リストが空の場合、約束は null 値になって完了します。</msg>
  <msg name="WinJS.UI.IListBinding.last">リストの最後の項目を取得し、それを現在の項目にします。</msg>
  <msg name="WinJS.UI.IListBinding.fromKey">指定されたキーを持つ項目を取得し、それを現在の項目にします。</msg>
  <msg name="WinJS.UI.IListBinding.fromKey_p:key">要求された項目のキー。それは空でない文字列である必要があります。</msg>
  <msg name="WinJS.UI.IListBinding.fromKey_p:hints">取得時間を短縮するための、項目の位置に関する IListDataAdapter へのドメイン固有のヒント。</msg>
  <msg name="WinJS.UI.IListBinding.fromKey_returnValue">要求された項目の約束として使用される IItemPromise。指定されたキーを持つ項目をリストが含まない場合は、約束は null 値になって完了します。</msg>
  <msg name="WinJS.UI.IListBinding.fromIndex">指定されたインデックスを持つ項目を取得し、それを現在の項目にします。</msg>
  <msg name="WinJS.UI.IListBinding.fromIndex_p:index">取得する項目のインデックスである、0 以上の数値。</msg>
  <msg name="WinJS.UI.IListBinding.fromIndex_returnValue">要求された項目の約束として使用される IItemPromise。指定されたインデックスを持つ項目をリストが含まない場合は、IItemPromise は null 値になって完了します。</msg>
  <msg name="WinJS.UI.IListBinding.fromDescription">指定された説明を持つ項目を取得し、それを現在の項目にします。</msg>
  <msg name="WinJS.UI.IListDataSource.fromDescription_p:description">リスト データ アダプターによって解釈される、要求された項目のドメイン固有の説明。</msg>
  <msg name="WinJS.UI.IListDataSource.fromDescription_returnValue">要求された項目の約束。指定された説明を持つ項目をリストが含まない場合は、IItemPromise は null 値になって完了します。</msg>
  <msg name="WinJS.UI.IListDataSource.invalidateAll">データ アダプターから再要求することによって、データ ソースにキャッシュ済みの項目を更新させます。データが変更された場合、データ ソースは通知を生成します。</msg>
  <msg name="WinJS.UI.IListDataSource.invalidateAll_returnValue">データが完全に更新され、すべての変更通知が送られたときに完了する約束。</msg>
  <msg name="WinJS.UI.IListDataSource.getCount">データ ソース内の項目の数を取得します。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromKey">指定したキーを持つ項目を取得します。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromKey_p:hints">取得時間を短縮するための、項目の位置に関する IListDataAdapter へのドメイン固有のヒント。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromKey_returnValue">要求された項目の約束。指定されたキーを持つ項目をリストが含まない場合は、約束は null 値になって完了します。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromIndex">指定したインデックス位置にある項目を取得します。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromIndex_p:index">要求された項目のインデックスである、0 以上の数値。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromIndex_returnValue">要求された項目の約束。指定されたインデックスを持つ項目をリストが含まない場合は、約束は null 値になって完了します。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromDescription">指定した説明を持つ項目を取得します。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromDescription_p:description">IListDataAdapter によって解釈される、取得する項目を示すドメイン固有の情報</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromDescription_returnValue">要求された項目の約束。指定された説明を持つ項目をリストが含まない場合は、約束は null 値になって完了します。</msg>
  <msg name="WinJS.UI.IListDataSource.beginEdits">一連の編集を開始しようとしていることを、データ ソースに通知します。データ ソースは一連の編集において一度、IListNotificationHandler.beginNotifications と endNotifications をそれぞれ呼び出します。</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart">項目をデータ ソースの最初に追加します。</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart_p:key">わかる場合は挿入する項目のキー、それ以外の場合は null。</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart_p:data">追加する項目のデータ。</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart_returnValue">追加された IItem を、またはエラーが発生した場合は EditError を含む約束。</msg>
  <msg name="WinJS.UI.IListDataSource.insertBefore">別の項目の前に項目を挿入します。</msg>
  <msg name="WinJS.UI.IListDataSource.insertBefore_p:data">挿入する項目のデータ。</msg>
  <msg name="WinJS.UI.IListDataSource.insertBefore_p:nextKey">データ ソースの項目のキー。新しいデータはこの項目の前に挿入されます。</msg>
  <msg name="WinJS.UI.IListDataSource.insertAfter">別の項目の後に項目を挿入します。</msg>
  <msg name="WinJS.UI.IListDataSource.insertAfter_p:previousKey">データ ソースの項目のためのキー。新しい項目はこのアイテムの後に追加されます。</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtEnd">項目をデータ ソースの最後に追加します。</msg>
  <msg name="WinJS.UI.IListDataSource.change">指定された項目のデータを上書きします。</msg>
  <msg name="WinJS.UI.IListDataSource.change_p:key">置換する項目のキー。</msg>
  <msg name="WinJS.UI.IListDataSource.change_p:newData">項目の新しいデータです。</msg>
  <msg name="WinJS.UI.IListDataSource.change_returnValue">更新された IItem を、またはエラーが発生した場合は EditError を含む約束。</msg>
  <msg name="WinJS.UI.IListDataSource.moveToStart">指定された項目をデータ ソースの最初に移動します。</msg>
  <msg name="WinJS.UI.IListDataSource.moveToStart_p:key">移動する項目のキー。</msg>
  <msg name="WinJS.UI.IListDataSource.moveToStart_returnValue">移動された IItem またはエラーが発生した場合は EditError を含む約束。</msg>
  <msg name="WinJS.UI.IListDataSource.moveBefore">別の項目の前に指定された項目を移動します。</msg>
  <msg name="WinJS.UI.IListDataSource.moveBefore_p:nextKey">データ ソースの別の項目のキー。キー パラメーターで指定された項目がこの項目の直前の位置に移動されます。</msg>
  <msg name="WinJS.UI.IListDataSource.moveAfter">別の項目の後に項目を移動します。</msg>
  <msg name="WinJS.UI.IListDataSource.moveAfter_p:previousKey">データ ソースの別の項目のキー。キー パラメーターで指定された項目がこの項目の直後の位置に移動されます。</msg>
  <msg name="WinJS.UI.IListDataSource.moveToEnd">項目をデータ ソースの最後に移動します。</msg>
  <msg name="WinJS.UI.IListDataSource.remove">データ ソースから項目を削除します。</msg>
  <msg name="WinJS.UI.IListDataSource.remove_p:key">削除する項目のキー。</msg>
  <msg name="WinJS.UI.IListDataSource.remove_returnValue">操作が成功した場合は何も含まず、エラーが発生した場合は EditError を含む約束。</msg>
  <msg name="WinJS.UI.IListDataSource.endEdits">一連の編集が終了したことをデータ ソースに通知します。データ ソースは IListNotificationHandler.beginNotifications と endNotifications を、一連の編集に対してそれぞれ一度呼び出します。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource">カスタム データ ソースを定義したときは、基本クラスとして使用します。直接インスタンス化しないでください。</msg>
  <msg name="WinJS.UI.computeDataSourceGroups">別のデータ ソース内の項目にグループ情報を追加するデータ ソースを返します。このデータ ソースの &quot;groups&quot; プロパティは、グループ自体を列挙する他のデータ ソースを評価します。</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:listDataSource">グループの各項目のデータ ソース。</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:groupKey">引数としてリストの項目を受け取るコールバック関数。リストの項目ごとに関数は呼び出され、文字列として項目のグループ キーを返します。</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:groupData">引数として IListDataSource の項目を受け取るコールバック関数。各グループ 1 項目ずつに対して関数は呼び出され、そのグループのヘッダーを表すオブジェクトを返します。</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:options">追加のオプションを指定するプロパティを含むことができるオブジェクト。groupCountEstimate: グループ数の最初の見積もりである数値。-1 を指定すると、実際のグループ数が決定されるまでこの関数は何も返しません。batchSize: グループを検索するときに、各プロセッシング パスの間にフェッチする項目数を指定する、0 より大きい数字。★SegError★(指定された数に加え、前回のバッチから 1 項目は常に含まれています。)</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_returnValue">元のデータ ソースの項目を含み、&quot;groups&quot; プロパティに追加のグループ情報を提供する IListDataSource。&quot;groups&quot; プロパティはリストの異なるグループを列挙する別の IListDataSource を返します。</msg>
  <msg name="WinJS.UI.StorageDataSource.loadThumbnail">提供された項目の完全な品質のサムネイルがイメージ要素に描画されたときに完了する、イメージ要素の約束を返します。</msg>
  <msg name="WinJS.UI.StorageDataSource.loadThumbnail_p:item">サムネイルを取得する対象の項目。</msg>
  <msg name="WinJS.UI.StorageDataSource.loadThumbnail_p:image">使用するイメージ要素。提供されない場合は、新しいイメージ要素が作成されます。</msg>
  <msg name="WinJS.UI.BrowseMode.selectionchanging.setPromise">非同期処理が行われていること、および約束が完了するまでこのイベント ハンドラーは完了と見なされないことを、ListView に通知するために使用します。</msg>
  <msg name="WinJS.UI.BrowseMode.selectionchanging.setPromise_p:promise">待機する約束。</msg>
  <msg name="WinJS.UI.Layout.constructor">新しいレイアウト オブジェクトを作成します。</msg>
  <msg name="WinJS.UI.Layout.constructor_p:options">新しいレイアウト オブジェクトに初期状態で適用されるオプションのセット。</msg>
  <msg name="WinJS.UI.Layout.constructor_returnValue">新しいレイアウト オブジェクト。</msg>
  <msg name="WinJS.UI.ListView.SelectionMode">ListView の選択モードを指定します。</msg>
  <msg name="WinJS.UI.ListView.SelectionMode.none">項目は選択できません。</msg>
  <msg name="WinJS.UI.ListView.SelectionMode.single">1 つの項目を選択している可能性があります。</msg>
  <msg name="WinJS.UI.ListView.SelectionMode.multi">複数の項目を選択している可能性があります。</msg>
  <msg name="WinJS.UI.ListView.TapBehavior">ListView の項目がタップ操作にどのように応答するかを指定します。</msg>
  <msg name="WinJS.UI.ListView.TapBehavior.directSelect">項目をタップすることで、項目が呼び出され選択されます。キーボードによる項目への移動が選択を変更したため、フォーカスがある項目だけが選択されています。</msg>
  <msg name="WinJS.UI.ListView.TapBehavior.toggleSelect">項目をタップすると項目が呼び出されます。項目が選択されている場合は、それをタップすると選択を解除します。項目が選択されていない場合は、それをタップすると選択します。キーボードによる項目への移動は、項目を選択したり呼び出したりしません。</msg>
  <msg name="WinJS.UI.ListView.TapBehavior.invokeOnly">項目をタップすると項目が呼び出されます。キーボードによる項目への移動は、項目を選択したり呼び出したりしません。</msg>
  <msg name="WinJS.UI.ListView.TapBehavior.none">何も起こりません。</msg>
  <msg name="WinJS.UI.ListView.SwipeBehavior">ユーザーがスワイプ操作を実行するときに、項目が選択されているかどうかを指定します。</msg>
  <msg name="WinJS.UI.ListView.SwipeBehavior.select">スワイプ操作によって、スワイプで触れた項目を選択します。</msg>
  <msg name="WinJS.UI.ListView.SwipeBehavior.none">選択されている項目はスワイプ操作によって変更されません。</msg>
  <msg name="WinJS.UI.ListView.ListViewAnimationType">ListView のアニメーションが、開始のアニメーションか遷移のアニメーションかを指定します。</msg>
  <msg name="WinJS.UI.ListView.ListViewAnimationType.entrance">アニメーションは ListView が最初に表示されるときに再生されます。</msg>
  <msg name="WinJS.UI.ListView.ListViewAnimationType.contentTransition">アニメーションは ListView がコンテンツを変更しているときに再生されます。</msg>
  <msg name="WinJS.UI._Selection.prototype.selectAll">ListView のすべての項目を選択に追加します。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.count">選択している項目数を返します。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.count_returnValue">選択している項目数。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getIndices">選択している項目のインデックスのリストを返します。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getIndices_returnValue">数のオブジェクトの配列としての、選択している項目のインデックスのリスト。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getItems">選択している項目を含む配列を返します。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getItems_returnValue">要求された IItem オブジェクトの配列を含む約束。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getRanges">選択された項目のインデックス範囲の配列を取得します。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getRanges_returnValue">選択している各インデックス範囲の ISelectionRange オブジェクトを含む配列。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.isEverything">データ ソースのすべての項目を含む選択かどうかを示す値を返します。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.isEverything_returnValue">選択にデータ ソースのすべてのアイテムが含まれている場合は True、それ以外の場合は False。</msg>
  <msg name="WinJS.UI.AppBarIcon">AppBarIcon の列挙は AppBarCommand アイコンのプロパティと共に使用する一連のグラフィックスを提供します。</msg>
  <msg name="WinJS.UI.SettingsFlyout.show_static">設定チャーム ウィンドウをアクティブにします。</msg>
  <msg name="WinJS.UI.SettingsFlyout.populateSettings">設定チャーム ウィンドウに表示される設定コマンドを作成します。</msg>
  <msg name="WinJS.UI.SettingsFlyout.showSettings_p:e">設定チャーム ウィンドウに表示される設定コマンド配列を保持するイベント オブジェクト。</msg>
  <msg name="WinJS.UI.SettingsFlyout.showSettings">設定要素と設定要素 ID を含むページのパスを使用して SettingsFlyout を表示します。</msg>
</messagebundle>