<?xml version="1.0" encoding="utf-8"?>
<messagebundle>
  <msg name="WinJS.UI.StorageDataSource">创建枚举 IStorageQueryResultBase 的数据源。</msg>
  <msg name="WinJS.UI.StorageDataSource_p:query">要枚举的对象。它必须支持 IStorageQueryResultBase。</msg>
  <msg name="WinJS.UI.StorageDataSource_p:options">一个对象，指定数据源的选项。此参数是可选的。它可以包含以下属性：模式：Windows.Storage.FileProperties.ThumbnailMode -指定是否请求缩略图和要请求的缩略图类型的值。requestedThumbnailSize：指定缩略图大小的数字。thumbnailOptions：为缩略图指定其他选项的 Windows.Storage.FileProperties.ThumbnailOptions 值。waitForFileLoad：如果将此为 true，则数据源将仅在加载其属性和缩略图之后返回项。</msg>
  <msg name="WinJS.UI.FlipView">显示集合，如一组图片，每次显示一个项。</msg>
  <msg name="WinJS.UI.FlipView_e:datasourcecountchanged">在 itemDataSource 中的项数更改时引发。</msg>
  <msg name="WinJS.UI.FlipView_e:pagevisibilitychanged">在 FlipView 页变为可见或不可见时引发。</msg>
  <msg name="WinJS.UI.FlipView_e:pageselected">在 FlipView 翻转到页面上时引发。</msg>
  <msg name="WinJS.UI.FlipView_e:pagecompleted">在 FlipView 翻转到页面上及其呈现功能完成时引发。</msg>
  <msg name="WinJS.UI.FlipView_part:flipView">整个 FlipView 控件。</msg>
  <msg name="WinJS.UI.FlipView_part:navigationButton">所有 FlipView 导航按钮的泛型类。</msg>
  <msg name="WinJS.UI.FlipView_part:leftNavigationButton">左导航按钮。</msg>
  <msg name="WinJS.UI.FlipView_part:rightNavigationButton">右导航按钮。</msg>
  <msg name="WinJS.UI.FlipView_part:topNavigationButton">上导航按钮。</msg>
  <msg name="WinJS.UI.FlipView_part:bottomNavigationButton">下导航按钮。</msg>
  <msg name="WinJS.UI.FlipView.constructor">创建新 FlipView。</msg>
  <msg name="WinJS.UI.FlipView.constructor_p:element">承载该控件的 DOM 元素。</msg>
  <msg name="WinJS.UI.FlipView.constructor_p:options">一个对象，包含一个或多个适用于新控件的属性/值对。选项对象的每个属性分别对应于控件的一个属性或事件。事件名称必须以“on”开头。例如，要为 pageselected 事件提供处理程序，请将添加一个名为“onpageselected”的属性添加到选项对象并将其值设置为事件处理程序。此参数是可选的。</msg>
  <msg name="WinJS.UI.FlipView.constructor_returnValue">新的 FlipView 控件。</msg>
  <msg name="WinJS.UI.FlipView.next">定位到下一个项。</msg>
  <msg name="WinJS.UI.FlipView.next_returnValue">如果 FlipView 开始导航到下一页，则为 true；如果 FlipView 在最后一页或位于另一导航动画中间，则为 false。</msg>
  <msg name="WinJS.UI.FlipView.previous">导航至上一个项。</msg>
  <msg name="WinJS.UI.FlipView.previous_returnValue">如果 FlipView 开始导航到上一页，则为 true；如果 FlipView 已在第一页上或位于另一导航动画中间，则为 false。</msg>
  <msg name="WinJS.UI.FlipView.element">承载 FlipView 控件的 DOM 元素。</msg>
  <msg name="WinJS.UI.FlipView.currentPage">获取或设置当前显示页的索引。最小值为 0，最大值小于数据源返回的总项数。</msg>
  <msg name="WinJS.UI.FlipView.orientation">获取或设置 FlipView 的布局方向：水平或垂直。</msg>
  <msg name="WinJS.UI.FlipView.itemDataSource">获取或设置为 FlipView 提供要显示的项的数据源。FlipView 一次在页面上显示一个项。</msg>
  <msg name="WinJS.UI.FlipView.itemTemplate">获取或设置 WinJS.Binding.Template 或为每个项的页定义 HTML 的功能。</msg>
  <msg name="WinJS.UI.FlipView.itemSpacing">获取或设置项之间的间距（以像素为单位）。</msg>
  <msg name="WinJS.UI.FlipView.count">返回 FlipView 对象的 itemDataSource 中项的个数。</msg>
  <msg name="WinJS.UI.FlipView.count_returnValue">Promise 包含列表中项的个数，或者如果计数不可用，则为 WinJS.UI.CountResult.unknown。</msg>
  <msg name="WinJS.UI.FlipView.setCustomAnimations">为 FlipView 设置自定义动画，以便在页之间导航时使用。</msg>
  <msg name="WinJS.UI.FlipView.setCustomAnimations_p:animations">一个对象，包含最多三个字段，用于每个导航操作；下一个，上一个和跳转，每个字段必须为具有此签名的函数：function (outgoingPage, incomingPage)。此函数返回在动画完成时即完成的 WinJS.Promise 对象。如果字段为 null 或未定义，则 FlipView 将还原到其该操作的默认动画。</msg>
  <msg name="WinJS.UI.FlipView.forceLayout">强制 FlipView 更新其布局。当在将其 style.display 属性设置为“none”之后使 FlipView 再次可见时使用此功能。</msg>
  <msg name="WinJS.UI._LayoutCommon.init">此方法支持 Windows Library for JavaScript 基础结构，但不会直接在代码中使用。</msg>
  <msg name="WinJS.UI._LayoutCommon.setSite_p:layoutSite"></msg>
  <msg name="WinJS.UI._LayoutCommon.disableBackdrop">获取或设置一个值，指示布局是否应禁用背景功能，这可以避免在虚拟化列表中平移时的空白区域。</msg>
  <msg name="WinJS.UI._LayoutCommon.backdropColor">获取或设置用于背景的默认模式的填充颜色。默认值是“rgba(155,155,155,0.23)”。</msg>
  <msg name="WinJS.UI._LayoutCommon.itemInfo">确定项的大小以及是否应在新列中放置该项。</msg>
  <msg name="WinJS.UI._LayoutCommon.groupInfo">指示组是否有大小可变的项。</msg>
  <msg name="WinJS.UI.GridLayout">创建新的 GridLayout。</msg>
  <msg name="WinJS.UI.GridLayout_p:options">一组属性和值，适用于新的 GridLayout。</msg>
  <msg name="WinJS.UI.GridLayout_returnValue">新的 GridLayout。</msg>
  <msg name="WinJS.UI.GridLayout.horizontal">获取一个值，该值指示项是否为水平布局。此属性始终为 GridLayout 返回 true。</msg>
  <msg name="WinJS.UI.GridLayout.groupHeaderPosition">获取或设置组标头相对于项的位置。默认值为“top”。</msg>
  <msg name="WinJS.UI.GridLayout.maxRows">ListView 显示的最大行数。</msg>
  <msg name="WinJS.UI.ListLayout">创建新的 ListLayout 对象。</msg>
  <msg name="WinJS.UI.ListLayout_p:options">一组属性和值，适用于新的 ListLayout。</msg>
  <msg name="WinJS.UI.ListLayout_returnValue">新的 ListLayout 对象。</msg>
  <msg name="WinJS.UI.ListLayout.horizontal">获取一个值，该值指示项是否为水平布局。此属性始终为 ListLayout 返回 false。</msg>
  <msg name="WinJS.UI.ListLayout.getKeyboardNavigatedItem">此 API 支持 Windows Library for JavaScript 基础结构，但不会直接在代码中使用。</msg>
  <msg name="WinJS.UI.ListView">按可自定义的列表或网格显示项。</msg>
  <msg name="WinJS.UI.ListView_e:contentanimating">在 ListView 即将播放入口或转换动画时引发。</msg>
  <msg name="WinJS.UI.ListView_e:iteminvoked">在用户单击项时引发。</msg>
  <msg name="WinJS.UI.ListView_e:selectionchanging">在选择或取消选择项之前引发。</msg>
  <msg name="WinJS.UI.ListView_e:selectionchanged">在选择或取消选择项之后引发。</msg>
  <msg name="WinJS.UI.ListView_e:loadingstatechanged">在加载状态更改时引发。</msg>
  <msg name="WinJS.UI.ListView_e:keyboardnavigating">在聚焦项更改时引发。</msg>
  <msg name="WinJS.UI.ListView_part:listView">整个 ListView 控件。</msg>
  <msg name="WinJS.UI.ListView_part:viewport">ListView 的视区。</msg>
  <msg name="WinJS.UI.ListView_part:surface">ListView 的可滚动区域。</msg>
  <msg name="WinJS.UI.ListView_part:item">ListView 中的项。</msg>
  <msg name="WinJS.UI.ListView_part:selectionbackground">选择复选标记的背景。</msg>
  <msg name="WinJS.UI.ListView_part:selectioncheckmark">选择复选标记。</msg>
  <msg name="WinJS.UI.ListView_part:groupHeader">组的标头。</msg>
  <msg name="WinJS.UI.ListView_part:progressbar">ListView 的进度指示器。</msg>
  <msg name="WinJS.UI.ListView.constructor">创建新的 ListView。</msg>
  <msg name="WinJS.UI.ListView.constructor_p:element">承载 ListView 控件的 DOM 元素。</msg>
  <msg name="WinJS.UI.ListView.constructor_p:options">一个对象，包含一个或多个适用于新控件的属性/值对。选项对象的每个属性分别对应于控件的一个属性或事件。事件名称必须以“on”开头。例如，要为 selectionchanged 事件提供处理程序，请将添加一个名为“onselectionchanged”的属性添加到选项对象并将其值设置为事件处理程序。</msg>
  <msg name="WinJS.UI.ListView.constructor_returnValue">新的 ListView。</msg>
  <msg name="WinJS.UI.ListView.element">获取承载 ListView 的 DOM 元素。</msg>
  <msg name="WinJS.UI.ListView.layout">获取或设置控制 ListView 布局的对象。</msg>
  <msg name="WinJS.UI.ListView.pagesToLoad">获取或设置当用户滚动在 pagesToLoadThreshold 属性指定的阈值之外（如果 loadingBehavior property 设置为增量）时将加载的页数。</msg>
  <msg name="WinJS.UI.ListView.pagesToLoadThreshold">获取或设置启动增量负载的阈值（以页为单位）。当最后一个可见项位于从列表的加载部分末尾之前的指定页数，并且如果 automaticallyLoadPages 为 true，loadingBehavior 设置为“增量”，则 ListView 将启动增量负载。</msg>
  <msg name="WinJS.UI.ListView.groupDataSource">获取或设置数据源，该数据源包含 itemDataSource 中的项组。</msg>
  <msg name="WinJS.UI.ListView.automaticallyLoadPages">获取或设置一个值，该值指示是否在用户滚动到 pagesToLoadThreshold 属性指定的页数之外自动加载下一组页。</msg>
  <msg name="WinJS.UI.ListView.loadingBehavior">获取或设置一个值，该值确定在 DOM 中加载了多少个数据项。</msg>
  <msg name="WinJS.UI.ListView.selectionMode">获取或设置一个值，该值指定用户可以选择多少个 ListView 项：“无”、“单个”或“多个”。</msg>
  <msg name="WinJS.UI.ListView.tapBehavior">获取或设置当用户单击项时 ListView 如何响应。单击可以调用该项目，选择并调用它或不起作用。</msg>
  <msg name="WinJS.UI.ListView.swipeBehavior">获取或设置 ListView 如何响应重击交互。重击笔势可以选择将重击项，或者可能对当前选择不起作用。</msg>
  <msg name="WinJS.UI.ListView.itemDataSource">获取或设置数据源，该数据源为 ListView 填充项。</msg>
  <msg name="WinJS.UI.ListView.itemTemplate">获取或设置模版化功能，该功能为 itemDataSource 中的每个项创建 DOM 元素。每个项可以包含多个 DOM 元素，但是，建议它只有一个根元素。</msg>
  <msg name="WinJS.UI.ListView.resetItem">获取或设置函数，该函数在 ListView 回收项的元素表示时调用。</msg>
  <msg name="WinJS.UI.ListView.groupHeaderTemplate">获取或设置模版化功能，该功能为 groupDataSource 中的每个组标头创建 DOM 元素。每个组标头可以包含多个元素，但是，必须只有一个根元素。</msg>
  <msg name="WinJS.UI.ListView.resetGroupHeader">获取或设置函数，该函数在 ListView 回收组标头的 DOM 元素表示时调用。</msg>
  <msg name="WinJS.UI.ListView.loadingState">获取一个值，该值指示 ListView 是否仍然正在加载或者加载是否已完成。此属性可返回以下值之一：“itemsLoading”、“viewPortLoaded”、“itemsLoaded”或“complete”。</msg>
  <msg name="WinJS.UI.ListView.selection">获取一个 ISelection 对象，该对象包含当前选定的项。</msg>
  <msg name="WinJS.UI.ListView.indexOfFirstVisible">获取或设置第一个可见项。设置此属性时，ListView 会滚动，以便具有指定索引的项位于列表的顶部。</msg>
  <msg name="WinJS.UI.ListView.indexOfLastVisible">获取最后一个可见项的索引。</msg>
  <msg name="WinJS.UI.ListView.currentItem">获取或设置一个对象，该对象指示哪个项应获得键盘焦点及其焦点状态。该对象具有以下属性：索引：itemDataSource 中项的索引。键：itemDataSource 中项的键。hasFocus：获取此属性时，如果项已有焦点，则此值为 true；否则，为 false。设置此属性时，如果项应立即获得焦点，请将此值为 true；如果项将最终获得焦点，则将其设置为 false。showFocus：如果项显示焦点矩形，则为 true；否则为 true。</msg>
  <msg name="WinJS.UI.ListView.zoomableView">获取 ZoomableView。此 API 支持 SemanticZoom 基础结构，但不应在代码中直接使用。</msg>
  <msg name="WinJS.UI.ListView.elementFromIndex">返回 DOM 元素，该元素表示指定索引处的项。</msg>
  <msg name="WinJS.UI.ListView.elementFromIndex_p:itemIndex">项的索引。</msg>
  <msg name="WinJS.UI.ListView.elementFromIndex_returnValue">表示指定项的 DOM 元素。</msg>
  <msg name="WinJS.UI.ListView.indexOfElement">返回指定 DOM 元素显示的项的索引。</msg>
  <msg name="WinJS.UI.ListView.indexOfElement_p:element">显示指定项的 DOM 元素。</msg>
  <msg name="WinJS.UI.ListView.indexOfElement_returnValue">指定 DOM 元素显示的项的索引。</msg>
  <msg name="WinJS.UI.ListView.ensureVisible">使指定项目可见。ListView 滚动到该项（如果需要）。</msg>
  <msg name="WinJS.UI.ListView.ensureVisible_p:itemIndex">要显示在视图中的项的索引。</msg>
  <msg name="WinJS.UI.ListView.loadMorePages">如果 ListView 对象的 loadingBehavior 设置为增量，则加载下一组页。</msg>
  <msg name="WinJS.UI.ListView.recalculateItemPosition">重新定位 ListView 中的所有可见项，已根据大小更改的项进行调整。大多数应用程序都不需要调用此方法。</msg>
  <msg name="WinJS.UI.ListView.forceLayout">强制 ListView 更新其布局。当在将其 style.display 属性设置为“none”之后使 ListView 再次可见时使用此功能。</msg>
  <msg name="WinJS.UI.ListView.scrollPosition">获取或设置 ListView 滚动条的位置。</msg>
  <msg name="WinJS.UI.ListView.triggerDispose">手动触发 ListView 处理服务。在正常操作中，这在 ListView 实例化时触发。但是，在某些情况下可能需要手动运行处置服务。</msg>
  <msg name="WinJS.UI._Selection.prototype.clear">清除选择。</msg>
  <msg name="WinJS.UI._Selection.prototype.clear_returnValue">完成清除操作时满足的 Promise。</msg>
  <msg name="WinJS.UI._Selection.prototype.set">清除当前选择并将其替换为指定项。</msg>
  <msg name="WinJS.UI._Selection.prototype.set_items">构成选择的项的索引或键。可以为项参数提供不同类型的对象：可以指定索引、键或索引的范围。它也可以是包含一个或多个对象的数组。</msg>
  <msg name="WinJS.UI._Selection.prototype.set_returnValue">在完成操作时满足的 Promise。</msg>
  <msg name="WinJS.UI._Selection.prototype.add">对选择添加一个或多个项。</msg>
  <msg name="WinJS.UI._Selection.prototype.add_items">要添加的项的索引或键。可以为项参数提供不同类型的对象：可以指定索引、键或索引的范围。它也可以是包含一个或多个对象的数组。</msg>
  <msg name="WinJS.UI._Selection.prototype.remove">从选择中移除指定的项。</msg>
  <msg name="WinJS.UI._Selection.prototype.remove_items">要移除的项的索引或键。可以为项参数提供不同类型的对象：可以指定索引、键或索引的范围。它也可以是包含一个或多个对象的数组。</msg>
  <msg name="WinJS.UI.DatePicker">允许用户选择日期值。</msg>
  <msg name="WinJS.UI.DatePicker_name">日期选择器</msg>
  <msg name="WinJS.UI.DatePicker_e:change">当前日期更改时发生。</msg>
  <msg name="WinJS.UI.DatePicker.constructor">初始化 DatePicker 控件的新实例</msg>
  <msg name="WinJS.UI.DatePicker.constructor_p:element">与 DatePicker 控件关联的 DOM 元素。</msg>
  <msg name="WinJS.UI.DatePicker.constructor_p:options">最初应用于 DatePicker 控件的选项的集。</msg>
  <msg name="WinJS.UI.DatePicker.constructor_returnValue">构造 DatePicker 控件。</msg>
  <msg name="WinJS.UI.DatePicker.calendar">获取或设置要使用的日历。</msg>
  <msg name="WinJS.UI.DatePicker.current">获取或设置 DatePicker 的当前日期。</msg>
  <msg name="WinJS.UI.DatePicker.disabled">指定是否禁用 DatePicker。</msg>
  <msg name="WinJS.UI.DatePicker.datePattern">获取或设置日期的显示模式。</msg>
  <msg name="WinJS.UI.DatePicker.element">获取 DatePicker 的 DOM 元素。</msg>
  <msg name="WinJS.UI.DatePicker.minYear">获取或设置可供选择的最小公历年。</msg>
  <msg name="WinJS.UI.DatePicker.maxYear">获取或设置可供选择的最大公历年。</msg>
  <msg name="WinJS.UI.DatePicker.monthPattern">获取或设置月份的显示模式。</msg>
  <msg name="WinJS.UI.DatePicker.yearPattern">获取或设置年份的显示模式。</msg>
  <msg name="WinJS.UI.TimePicker">允许用户选择时间值。</msg>
  <msg name="WinJS.UI.TimePicker_name">时间选取器</msg>
  <msg name="WinJS.UI.TimePicker_e:change">事件更改时发生。</msg>
  <msg name="WinJS.UI.TimePicker.constructor">初始化 TimePicker 控件的新实例</msg>
  <msg name="WinJS.UI.TimePicker.constructor_p:element">与 TimePicker 控件关联的 DOM 元素。</msg>
  <msg name="WinJS.UI.TimePicker.constructor_p:options">最初应用于 TimePicker 控件的选项的集。</msg>
  <msg name="WinJS.UI.TimePicker.constructor_returnValue">构造 TimePicker 控件。</msg>
  <msg name="WinJS.UI.TimePicker.clock">获取或设置要显示的时钟类型（12HourClock 或 24HourClock）。默认为用户设置。</msg>
  <msg name="WinJS.UI.TimePicker.current">获取或设置 TimePicker 当前日期（和时间）。</msg>
  <msg name="WinJS.UI.TimePicker.disabled">指定是否禁用 TimePicker。</msg>
  <msg name="WinJS.UI.TimePicker.element">获取 TimePicker 的 DOM 元素。</msg>
  <msg name="WinJS.UI.TimePicker.hourPattern">获取或设置小时的显示模式。</msg>
  <msg name="WinJS.UI.TimePicker.minuteIncrement">获取或设置分钟增量。例如，“15”指定 TimePicker 分钟控件应仅显示以下选择：00、15、30、45。</msg>
  <msg name="WinJS.UI.TimePicker.minutePattern">获取或设置分钟的显示模式。</msg>
  <msg name="WinJS.UI.TimePicker.periodPattern">获取或设置期间的显示模式。</msg>
  <msg name="WinJS.UI.Rating">分级控件允许用户给定从 1 到 maxRating（默认为 5）的范围数字。</msg>
  <msg name="WinJS.UI.Rating_e:previewchange">在用户选择新探索分级但尚未提交更改时引发。</msg>
  <msg name="WinJS.UI.Rating_e:cancel">在用户完成与分级控件的交互但未提交探索分级引发。</msg>
  <msg name="WinJS.UI.Rating_e:change">在用户向 userRating 提交更改时引发。</msg>
  <msg name="WinJS.UI.Rating_part:rating">整个分级控件。</msg>
  <msg name="WinJS.UI.Rating_part:average-empty">分级控件显示平均分级时的空星号。</msg>
  <msg name="WinJS.UI.Rating_part:average-full">分级控件显示平均分级时的实心星号。</msg>
  <msg name="WinJS.UI.Rating_part:user-empty">分级控件显示用户分级时的空星号。</msg>
  <msg name="WinJS.UI.Rating_part:user-full">分级控件显示用户分级时的实心星号。</msg>
  <msg name="WinJS.UI.Rating_part:tentative-empty">分级控件显示探索分级时的空星号。</msg>
  <msg name="WinJS.UI.Rating_part:tentative-full">分级控件显示探索分级时的实心星号。</msg>
  <msg name="WinJS.UI.Rating_part:disabled-empty">控件处于禁用状态时的空星号。</msg>
  <msg name="WinJS.UI.Rating_part:disabled-full">控件处于禁用状态时的实心星号。</msg>
  <msg name="WinJS.UI.Rating.constructor">创建新的分级。</msg>
  <msg name="WinJS.UI.Rating.constructor_p:element">承载新分级的 DOM 元素。</msg>
  <msg name="WinJS.UI.Rating.constructor_p:options">一个对象，包含一个或多个适用于新控件的属性/值对。选项对象的每个属性分别对应于控件的一个属性或事件。事件名称必须以“on”开头。例如，要为取消事件提供处理程序，请将添加一个名为“oncancel”的属性添加到选项对象并将其值设置为事件处理程序。此参数是可选的。</msg>
  <msg name="WinJS.UI.Rating.constructor_returnValue">新分级。</msg>
  <msg name="WinJS.UI.Rating.maxRating">获取或设置可能的最大分级值。默认值为 5。</msg>
  <msg name="WinJS.UI.Rating.userRating">获取或设置用户分级。此值必须在大于等于 0 且小于等于 maxRating 之间。</msg>
  <msg name="WinJS.UI.Rating.averageRating">获取或设置为浮点值的平均分级。此值必须[等于零]或者[大于或等于 1 且小于或等于 maxRating]。</msg>
  <msg name="WinJS.UI.Rating.disabled">获取或设置一个值，该值指定是否禁用控件。当控件处于禁用状态时，用户无法指定新的分级或修改现有分级。</msg>
  <msg name="WinJS.UI.Rating.enableClear">获取或设置控件是否让用户清除分级。</msg>
  <msg name="WinJS.UI.Rating.tooltipStrings">获取或设置一组说明，该说明针对工具提示中的分级值显示。数组必须包含每个可用评级值的字符串，并且，对于清除分级选项，它可以包含可选字符串（在数组结尾处）。</msg>
  <msg name="WinJS.UI.Rating.element">获取承载分级的 DOM 元素。</msg>
  <msg name="WinJS.UI.Rating.addEventListener">为指定事件注册事件处理程序。</msg>
  <msg name="WinJS.UI.Rating.addEventListener_p:eventName">事件的名称。</msg>
  <msg name="WinJS.UI.Rating.addEventListener_p:eventCallback">将与此事件关联的事件处理程序功能。</msg>
  <msg name="WinJS.UI.Rating.addEventListener_p:capture">设置为 True来为捕获阶段注册事件处理程序；设置为 False 为冒泡阶段注册。</msg>
  <msg name="WinJS.UI.Rating.removeEventListener">为指定事件取消注册事件处理程序。</msg>
  <msg name="WinJS.UI.Rating.removeEventListener_p:eventCallback">要移除的事件处理程序功能。</msg>
  <msg name="WinJS.UI.Rating.removeEventListener_p:capture">设置为 True，以为捕获阶段取消注册事件处理程序；设置为 False 为冒泡阶段取消注册事件处理程序。</msg>
  <msg name="WinJS.UI.ToggleSwitch">允许用户启用或禁用该选项的控件。</msg>
  <msg name="WinJS.UI.ToggleSwitch_e:change">在开关翻转到打开（检查设置为 true）或关闭时引发（检查设置为 false）。</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:toggle">整个 ToggleSwitch 控件。</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:switch">允许用户切换 ToggleSwitch 的状态的滑块。</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:title">ToggleSwitch 控件的主文本。</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:label-on">开关开启时的文本。</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:label-off:">开关关闭时的文本。</msg>
  <msg name="WinJS.UI.ToggleSwitch.constructor">创建新的 ToggleSwitch。</msg>
  <msg name="WinJS.UI.ToggleSwitch.constructor_p:element">承载 ToggleSwitch 的 DOM 元素。</msg>
  <msg name="WinJS.UI.ToggleSwitch.constructor_p:options">一个对象，包含一个或多个适用于新控件的属性/值对。选项对象的每个属性分别对应于控件的一个属性或事件。事件名称必须以“on”开头。例如，要为更改事件提供处理程序，请将添加一个名为“onchange”的属性添加到选项对象并将其值设置为事件处理程序。此参数是可选的。</msg>
  <msg name="WinJS.UI.ToggleSwitch.constructor_returnValue">新的 ToggleSwitch。</msg>
  <msg name="WinJS.UI.ToggleSwitch.checked">获取或设置控件是打开的（检查设置为 true）还是关闭的（检查设置为 false）。</msg>
  <msg name="WinJS.UI.ToggleSwitch.disabled">获取或设置一个值，该值指定是否禁用控件。</msg>
  <msg name="WinJS.UI.ToggleSwitch.element">承载 ToggleSwitch 控件的 DOM 元素。</msg>
  <msg name="WinJS.UI.ToggleSwitch.labelOn">获取或设置在控件处于打开状态时显示的文本（检查设置为 true）。默认值为“On”。</msg>
  <msg name="WinJS.UI.ToggleSwitch.labelOff">获取或设置在控件处于关闭状态时显示的文本（检查设置为 false）。默认值为“Off”。</msg>
  <msg name="WinJS.UI.ToggleSwitch.title">获取或设置 ToggleSwitch 控件的主文本。始终显示此文本，而无论控件是否切换到打开或关闭状态。</msg>
  <msg name="WinJS.UI.SemanticZoom">允许用户在两个子控件提供的两个不同视图之间进行缩放。一个子控件提供了缩小的视图，另一个提供放大的视图。</msg>
  <msg name="WinJS.UI.SemanticZoom_part:semanticZoom">整个 SemanticZoom 控件。</msg>
  <msg name="WinJS.UI.SemanticZoom.constructor">创建新的 SemanticZoom。</msg>
  <msg name="WinJS.UI.SemanticZoom.constructor_p:element">承载 SemanticZoom 的 DOM 元素。</msg>
  <msg name="WinJS.UI.SemanticZoom.constructor_p:options">一个对象，包含一个或多个适用于新控件的属性/值对。选项对象的每个属性分别对应于控件的一个属性或事件。此参数是可选的。</msg>
  <msg name="WinJS.UI.SemanticZoom.constructor_returnValue">新的 SemanticZoom 控件。</msg>
  <msg name="WinJS.UI.SemanticZoom.element">承载 SemanticZoom 控件的 DOM 元素。</msg>
  <msg name="WinJS.UI.SemanticZoom.enableButton">获取或设置一个值，该值指定是否应显示语义缩放按钮。</msg>
  <msg name="WinJS.UI.SemanticZoom.zoomedOut">获取或设置一个值，该值指定当前是否缩小的视图。</msg>
  <msg name="WinJS.UI.SemanticZoom.zoomFactor">获取或设置一个值，该值介于 0.2 与 0.85 之间，指定缩小视图的范围。默认值为 0.65。</msg>
  <msg name="WinJS.UI.SemanticZoom.locked">获取或设置一个值，该值指示是否锁定 SemanticZoom 以及是否禁用视图间的缩放。</msg>
  <msg name="WinJS.UI.SemanticZoom.forceLayout">强制 SemanticZoom 更新其布局。当在将其 style.display 属性设置为“none”之后使 SemanticZoom 再次可见时使用此功能。</msg>
  <msg name="WinJS.UI._Overlay">构造 Overlay 控件并使其与基础 DOM 元素关联。</msg>
  <msg name="WinJS.UI._Overlay_p:element">要与 Overlay 控件关联的 DOM 元素。</msg>
  <msg name="WinJS.UI._Overlay_p:options">最初应用于 Overlay 控件的选项的集。</msg>
  <msg name="WinJS.UI._Overlay_returnValue">完全构造的 Overlay 控件。</msg>
  <msg name="WinJS.UI._Overlay.element">Overlay 附加到 DOM 元素。</msg>
  <msg name="WinJS.UI._Overlay.disabled">禁用 Overlay，获取或设置 HTML 禁用的属性。禁用后，Overlay 将不再显示为 show()，如果当前可见，将隐藏。</msg>
  <msg name="WinJS.UI._Overlay.show">显示 Overlay，如果隐藏，而不管其他状态</msg>
  <msg name="WinJS.UI._Overlay.hide">隐藏 Overlay，如果可见，而不管其他状态</msg>
  <msg name="WinJS.UI._Overlay.hidden">只读，如果 overlay 当前不可见，则为 true。</msg>
  <msg name="WinJS.UI._Overlay.addEventListener">向此 Overlay 的 DOM 元素添加一个事件侦听器</msg>
  <msg name="WinJS.UI._Overlay.addEventListener_p:type">必需。要添加的事件类型：“beforehide”、“afterhide”、“beforeshow”或“aftershow”</msg>
  <msg name="WinJS.UI._Overlay.addEventListener_p:listener">必需。将与此事件关联的事件处理程序功能。</msg>
  <msg name="WinJS.UI._Overlay.addEventListener_p:useCapture">可选。True，为事件捕获阶段注册。False，为事件冒泡阶段注册。</msg>
  <msg name="WinJS.UI._Overlay.removeEventListener">移除此 Overlay DOM 元素的事件侦听器</msg>
  <msg name="WinJS.UI._Overlay.removeEventListener_p:type">必需。要移除的事件类型：“beforehide”、“afterhide”、“beforeshow”或“aftershow”</msg>
  <msg name="WinJS.UI.AppBarCommand">AppBarCommands 为应用程序栏提供按钮、切换按钮、弹出按钮或分离器功能。</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommand">AppBarCommand 控件自身。</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandIcon">AppBarCommand 的图标框</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandImage">AppBarCommand 的图标图像格式</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandRing">AppBarCommand 的图标环</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandLabel">AppBarCommand 的标签</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor">构造 AppBarCommand 控件。</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor_p:element">要与 AppBarCommand 控件关联的 DOM 元素。如果为 null，则 AppBarCommand 将创建一个。</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor_p:options">最初应用于 AppBarCommand 控件的选项的集。</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor_returnValue">AppBarCommand 控件。</msg>
  <msg name="WinJS.UI.AppBarCommand.id">AppBarCommand 的 ID。</msg>
  <msg name="WinJS.UI.AppBarCommand.type">AppBarCommand 的类型，可能的值为“按钮”、“切换”、“弹出”或“分离器”</msg>
  <msg name="WinJS.UI.AppBarCommand.label">AppBarCommand 的标签</msg>
  <msg name="WinJS.UI.AppBarCommand.icon">AppBarCommand 的图标</msg>
  <msg name="WinJS.UI.AppBarCommand.onclick">调用 AppBarCommand 时调用的单击事件</msg>
  <msg name="WinJS.UI.AppBarCommand.flyout">对于弹出类型的 AppBarCommands，则会返回此命令调用的 WinJS.UI.Flyout。设置还可以使用要调用的弹出的字符串 ID、弹出的 DOM 对象，或弹出对象本身</msg>
  <msg name="WinJS.UI.AppBarCommand.section">设置或获取要在其中放置按钮的部分：“全局”或“选择”</msg>
  <msg name="WinJS.UI.AppBarCommand.tooltip">AppBarCommand 的工具提示文本</msg>
  <msg name="WinJS.UI.AppBarCommand.selected">设置或获取切换按钮的选定状态</msg>
  <msg name="WinJS.UI.AppBarCommand.element">AppBarCommad 附加到 DOM 元素。</msg>
  <msg name="WinJS.UI.AppBarCommand.disabled">禁用命令它将获取或设置 HTML 禁用的属性。</msg>
  <msg name="WinJS.UI.AppBarCommand.hidden">确定当前是否隐藏命令。</msg>
  <msg name="WinJS.UI.AppBarCommand.addEventListener">向此命令的 DOM 元素添加一个事件侦听器</msg>
  <msg name="WinJS.UI.AppBarCommand.addEventListener_p:type">必需。要添加的事件类型。</msg>
  <msg name="WinJS.UI.AppBarCommand.removeEventListener">移除此命令 DOM 元素的事件侦听器</msg>
  <msg name="WinJS.UI.AppBarCommand.removeEventListener_p:type">必需。要移除的事件类型。</msg>
  <msg name="WinJS.UI.AppBarCommand.extraClass">在构造时添加额外的 CSS 类。</msg>
  <msg name="WinJS.UI.AppBar">AppBar 空间为 AppBarCommand 提供了图面或者用户可以显示或隐藏的其他信息。</msg>
  <msg name="WinJS.UI.AppBar_e:beforeshow">在显示 AppBar 前一刻引发。</msg>
  <msg name="WinJS.UI.AppBar_e:aftershow">在完全显示 AppBar 后立即引发。</msg>
  <msg name="WinJS.UI.AppBar_e:beforehide">在隐藏 AppBar 前一刻引发。</msg>
  <msg name="WinJS.UI.AppBar_e:afterhide">在完全隐藏 AppBar 后立即引发。</msg>
  <msg name="WinJS.UI.AppBar_part:appbar">AppBar 控件自身</msg>
  <msg name="WinJS.UI.AppBar_part:appBarCustom">自定义布局应用程序懒的样式</msg>
  <msg name="WinJS.UI.AppBar.constructor">构造 AppBar 控件</msg>
  <msg name="WinJS.UI.AppBar.constructor_p:element">要与 AppBar 控件关联的 DOM 元素。</msg>
  <msg name="WinJS.UI.AppBar.constructor_p:options">最初应用于 AppBar 控件的选项的集。</msg>
  <msg name="WinJS.UI.AppBar.constructor_returnValue">构造的 AppBar 控件。</msg>
  <msg name="WinJS.UI.AppBar.placement">AppBar 在显示屏中的位置。值为“顶部”或“底部”。</msg>
  <msg name="WinJS.UI.AppBar.layout">AppBar 内容的布局：“命令”或“自定义”。</msg>
  <msg name="WinJS.UI.AppBar.sticky">AppBar 是否为便笺。</msg>
  <msg name="WinJS.UI.AppBar.commands">AppBar 的命令，包含 AppBarCommand 选项数组。</msg>
  <msg name="WinJS.UI.AppBar.getCommandById">检索此 AppBar 中具有指定 ID 的命令。如果找到多个命令，则全部返回。</msg>
  <msg name="WinJS.UI.AppBar.getCommandById_p:id">要返回的命令的 ID。</msg>
  <msg name="WinJS.UI.AppBar.getCommandById_returnValue">发现的命令，如果多个命令具有相同的 ID，则返回命令组合，如果找到的命令不具有该 ID，则返回 null。</msg>
  <msg name="WinJS.UI.AppBar.showCommands">显示此 AppBar 中的命令</msg>
  <msg name="WinJS.UI.AppBar.showCommands_p:commands">必需。要显示的一个或多个命令，字符串、DOM 元素或 WinJS 对象。</msg>
  <msg name="WinJS.UI.AppBar.hideCommands">隐藏此 AppBar 中的命令</msg>
  <msg name="WinJS.UI.AppBar.hideCommands_p:commands">必需。要隐藏的一个或多个命令，字符串、DOM 元素或 WinJS 对象。</msg>
  <msg name="WinJS.UI.AppBar.showOnlyCommands">显示指定的命令，隐藏 AppBar 中的所有其他命令。</msg>
  <msg name="WinJS.UI.AppBar.show">显示 AppBar，如果隐藏，而不管其他状态</msg>
  <msg name="WinJS.UI.AppBar.hide">隐藏 AppBar，如果可见，而不管其他状态</msg>
  <msg name="WinJS.UI.Flyout">弹出控件为少量内容提供临时图面。</msg>
  <msg name="WinJS.UI.Flyout_name">弹出</msg>
  <msg name="WinJS.UI.Flyout_e:beforeshow">在显示弹出前一刻引发。</msg>
  <msg name="WinJS.UI.Flyout_e:aftershow">在完全显示弹出后立即引发。</msg>
  <msg name="WinJS.UI.Flyout_e:beforehide">在隐藏弹出前一刻引发。</msg>
  <msg name="WinJS.UI.Flyout_e:afterhide">在完全隐藏弹出后立即引发。</msg>
  <msg name="WinJS.UI.Flyout_part:flyout">Flyout 控件自身</msg>
  <msg name="WinJS.UI.Flyout.constructor">构造 Flyout 控件并使其与基础 DOM 元素关联。</msg>
  <msg name="WinJS.UI.Flyout.constructor_p:element">要与 Flyout 控件关联的 DOM 元素。</msg>
  <msg name="WinJS.UI.Flyout.constructor_p:options">最初应用于 Flyout 控件的选项的集。</msg>
  <msg name="WinJS.UI.Flyout.constructor_returnValue">完全构造的 Flyout 控件。</msg>
  <msg name="WinJS.UI.Flyout.anchor">定位点元素是 HTML 元素，弹出源自该元素且位置相对。可以使用传入 show() 方法的定位点进行重写。</msg>
  <msg name="WinJS.UI.Flyout.placement">要用于此弹出的默认位置，由传入 show() 的位置重写。</msg>
  <msg name="WinJS.UI.Flyout.alignment">要用于此弹出的默认对齐方式，由传入 show() 的对齐方式重写。</msg>
  <msg name="WinJS.UI.Flyout.show">显示 Flyout，如果隐藏，而不管其他状态</msg>
  <msg name="WinJS.UI.Flyout.show_p:anchor">DOM 元素，或定位点 Flyout 的 DOM 元素的 ID，只重写此时间的定位点属性。</msg>
  <msg name="WinJS.UI.Flyout.show_p:placement">定位点的 Flyout 的位置：“自动”（默认）、“顶部”、“顶部”、“左侧”或“右侧”。此参数只重写此显示的位置属性。</msg>
  <msg name="WinJS.UI.Flyout.show:alignment">对于“顶部”或“底部”位置，定位点边缘的 Flyout 的对齐方式为：“居中”（默认）、“左对齐”或“右对齐”。此参数只重写此显示的对齐方式属性。</msg>
  <msg name="WinJS.UI.Flyout.hide">隐藏 Flyout，如果可见，而不管其他状态</msg>
  <msg name="WinJS.UI.Menu">菜单控件提供 MenuCommands 给用户。</msg>
  <msg name="WinJS.UI.Menu_name">Menu</msg>
  <msg name="WinJS.UI.Menu_e:beforeshow">在显示菜单前一刻引发。</msg>
  <msg name="WinJS.UI.Menu_e:aftershow">在完全显示菜单后立即引发。</msg>
  <msg name="WinJS.UI.Menu_e:beforehide">在隐藏菜单前一刻引发。</msg>
  <msg name="WinJS.UI.Menu_e:afterhide">在完全隐藏菜单后立即引发。</msg>
  <msg name="WinJS.UI.Menu_part:menu">Menu 控件自身</msg>
  <msg name="WinJS.UI.Menu.constructor">构造 Menu 控件并使其与基础 DOM 元素关联。</msg>
  <msg name="WinJS.UI.Menu.constructor_p:element">要与 Menu 控件关联的 DOM 元素。</msg>
  <msg name="WinJS.UI.Menu.constructor_p:options">最初应用于 Menu 控件的选项的集。</msg>
  <msg name="WinJS.UI.Menu.constructor_returnValue">完全构造的 Menu 控件。</msg>
  <msg name="WinJS.UI.Menu.commands">Menu 的命令，包含 MenuCommand 选项数组。</msg>
  <msg name="WinJS.UI.Menu.getCommandById">检索此 Menu 中具有指定 ID 的命令。如果找到多个命令，则全部返回。</msg>
  <msg name="WinJS.UI.Menu.showCommands">显示此 AppBar 中的命令</msg>
  <msg name="WinJS.UI.Menu.hideCommands">隐藏此 AppBar 中的命令</msg>
  <msg name="WinJS.UI.Menu.showOnlyCommands">显示指定的命令，隐藏 Menu 中的所有其他命令。</msg>
  <msg name="WinJS.UI.Menu.show">显示 Menu，如果隐藏，而不管其他状态</msg>
  <msg name="WinJS.UI.Menu.show_p:anchor">DOM 元素，或定位点 Menu 的 DOM 元素的 ID，只重写此时间的定位点属性。</msg>
  <msg name="WinJS.UI.Menu.show_p:placement">定位点的 Menu 的位置：“自动”（默认）、“顶部”、“顶部”、“左侧”或“右侧”。此参数只重写此显示的位置属性。</msg>
  <msg name="WinJS.UI.Menu.show_p:alignment">对于“顶部”或“底部”位置，定位点边缘的 Menu 的对齐方式为：“居中”（默认）、“左对齐”或“右对齐”。此参数只重写此显示的对齐方式属性。</msg>
  <msg name="WinJS.UI.MenuCommand">MenuCommands 为 Menus 提供按钮、切换按钮、弹出按钮或分离器功能。</msg>
  <msg name="WinJS.UI.MenuCommand_name">MenuCommand 控件自身</msg>
  <msg name="WinJS.UI.MenuCommand.constructor">构造 MenuCommand 控件</msg>
  <msg name="WinJS.UI.MenuCommand.constructor_p:element">要与 MenuCommand 控件关联的 DOM 元素。如果为 null，则 MenuCommand 将创建一个。</msg>
  <msg name="WinJS.UI.MenuCommand.constructor_p:options">最初应用于 MenuCommand 控件的选项的集。</msg>
  <msg name="WinJS.UI.MenuCommand.constructor_returnValue">MenuCommand 控件。</msg>
  <msg name="WinJS.UI.MenuCommand.id">MenuCommand 的 ID。</msg>
  <msg name="WinJS.UI.MenuCommand.type">MenuCommand 的类型，可能的值为“按钮”、“切换”、“弹出”或“分离器”</msg>
  <msg name="WinJS.UI.MenuCommand.label">MenuCommand 的标签</msg>
  <msg name="WinJS.UI.MenuCommand.onclick">调用 MenuCommand 时调用的单击事件</msg>
  <msg name="WinJS.UI.MenuCommand.flyout">对于弹出类型的 MenuCommand，则会返回此命令调用的 WinJS.UI.Flyout。设置还可以使用要调用的弹出的字符串 ID、弹出的 DOM 对象，或弹出对象本身</msg>
  <msg name="WinJS.UI.MenuCommand.element">MenuCommand 附加到 DOM 元素。</msg>
  <msg name="WinJS.UI.SettingsFlyout">SettingsFlyout 提供对“设置”窗格中信息的访问。</msg>
  <msg name="WinJS.UI.SettingsFlyout_name">设置弹出</msg>
  <msg name="WinJS.UI.SettingsFlyout_e:beforeshow">在显示 SettingsFlyout 前一刻引发。</msg>
  <msg name="WinJS.UI.SettingsFlyout_e:aftershow">在完全显示 SettingsFlyout 后立即引发。</msg>
  <msg name="WinJS.UI.SettingsFlyout_e:beforehide">在隐藏 SettingsFlyout 前一刻引发。</msg>
  <msg name="WinJS.UI.SettingsFlyout_e:afterhide">在完全隐藏 SettingsFlyout 后立即引发。</msg>
  <msg name="WinJS.UI.SettingsFlyout_part:settings">SettingsFlyout 控件自身。</msg>
  <msg name="WinJS.UI.SettingsFlyout.constructor">构造 SettingsFlyout 控件。</msg>
  <msg name="WinJS.UI.SettingsFlyout.constructor_p:element">要与 SettingsFlyout 控件关联的 DOM 元素。</msg>
  <msg name="WinJS.UI.SettingsFlyout.constructor_p:options">最初应用于 SettingsFlyout 控件的选项的集。</msg>
  <msg name="WinJS.UI.SettingsFlyout.constructor_returnValue">构造的 SettingsFlyout 控件。</msg>
  <msg name="WinJS.UI.SettingsFlyout.width">SettingsFlyout 的宽度：“窄”或“宽”。</msg>
  <msg name="WinJS.UI.SettingsFlyout.settingsCommandId">定义 SettingsFlyout 控件的设置命令 ID。</msg>
  <msg name="WinJS.UI.SettingsFlyout.show">如果隐藏，则会显示 SettingsFlyout。</msg>
  <msg name="WinJS.UI.SettingsFlyout.hide">隐藏 SettingsFlyout，如果可见，而不管其他状态。</msg>
  <msg name="WinJS.UI.Tooltip">显示可以包含图像和格式化的工具提示。</msg>
  <msg name="WinJS.UI.Tooltip_e:beforeopen">在即将出现工具提示时引发。</msg>
  <msg name="WinJS.UI.Tooltip_e:opened">在显示工具提示时引发。</msg>
  <msg name="WinJS.UI.Tooltip_e:beforeclose">在即将隐藏工具提示时引发。</msg>
  <msg name="WinJS.UI.Tooltip_e:close">在隐藏工具提示时引发。</msg>
  <msg name="WinJS.UI.Tooltip_e:tooltip">整个 Tooltip 控件。</msg>
  <msg name="WinJS.UI.Tooltip.constructor">创建新的 Tooltip。</msg>
  <msg name="WinJS.UI.Tooltip.constructor_p:element">承载 Tooltip 的 DOM 元素。</msg>
  <msg name="WinJS.UI.Tooltip.constructor_p:options">一个对象，包含一个或多个适用于新控件的属性/值对。选项对象的每个属性分别对应于控件的一个属性或事件。事件名称必须以“on”开头。例如，要为开放事件提供处理程序，请将添加一个名为“onopened”的属性添加到选项对象并将其值设置为事件处理程序。此参数是可选的。</msg>
  <msg name="WinJS.UI.Tooltip.constructor_returnValue">新的 Tooltip。</msg>
  <msg name="WinJS.UI.Tooltip.innerHTML">获取或设置 Tooltip 的 HTML 内容。</msg>
  <msg name="WinJS.UI.Tooltip.element">获取或设置承载 Tooltip 的 DOM 元素。</msg>
  <msg name="WinJS.UI.Tooltip.contentElement">获取或设置属于 ToolTip 的内容的 DOM 元素。</msg>
  <msg name="WinJS.UI.Tooltip.placement">获取或设置 Tooltip 相对于其目标元素的位置：顶部、底部、左侧或右侧。</msg>
  <msg name="WinJS.UI.Tooltip.infotip">获取或设置一个值，该值指定 Tooltip 是否为信息提示 - 包含大量信息且显示时间长于典型 Tooltip 的工具提示。默认值为 false。</msg>
  <msg name="WinJS.UI.Tooltip.extraClass">获取或设置适用于 Tooltip 空间宿主元素的其他 CSS 类。</msg>
  <msg name="WinJS.UI.Tooltip.open">显示 Tooltip。</msg>
  <msg name="WinJS.UI.Tooltip.open_p:type">要显示的工具提示的类型：“触控”、“鼠标悬停”、“鼠标按下”或“键盘”。默认值为“鼠标按下”。</msg>
  <msg name="WinJS.UI.Tooltip.close">隐藏 Tooltip。</msg>
  <msg name="WinJS.UI.ViewBox">扩展单个子元素，以填充可用空间，而无需调整其大小。此控件对容器大小的变化以及子元素大小的变化作出响应。例如，媒体查询可能会导致长宽比变化。</msg>
  <msg name="WinJS.UI.ViewBox_name">视图框</msg>
  <msg name="WinJS.UI.ViewBox.constructor">初始化 ViewBox 控件的新实例</msg>
  <msg name="WinJS.UI.ViewBox.constructor_p:element">用作缩放框的 DOM 元素。此元素填充给它的全部宽度和高度。</msg>
  <msg name="WinJS.UI.ViewBox.constructor_p:options">最初应用于 ViewBox 控件的选项的集。</msg>
  <msg name="WinJS.UI.ViewBox.constructor_returnValue">构造的 ViewBox 控件。</msg>
  <msg name="WinJS.UI.ViewBox.element">获取用作缩放框的 DOM 元素。</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation">创建展开动画。在创建 ExpandAnimation 对象之后，修改文档以将元素移到其新位置，然后调用 ExpandAnimation 对象上的执行方法。</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation_p:revealed">显示的单个元素或元素集合。</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation_p:affected">其位置受扩展影响的单个元素或元素集合。</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation_returnValue">其执行方法在动画完成时返回完成的 Promise 的 ExpandAnimation 对象。</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation">创建折叠动画。在创建 CollapseAnimation 对象之后，修改文档以将元素移到其新位置，然后调用 CollapseAnimation 对象上的执行方法。</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation_p:hidden">将从视图中移除的单个元素或元素集合。动画完成时，应用程序应隐藏元素或将其从文档中移除。</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation_p:affected">其位置受折叠影响的单个元素或元素集合。</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation_returnValue">其执行方法在动画完成时返回完成的 Promise 的 CollapseAnimation 对象。</msg>
  <msg name="WinJS.UI.Animation.createRepositionAnimation">创建重新定位动画。在创建 RepositionAnimation 对象之后，修改文档以将元素移到其新位置，然后调用 RepositionAnimation 对象上的执行方法。</msg>
  <msg name="WinJS.UI.Animation.createRepositionAnimation_p:element">重新定位的单个元素或元素集合。</msg>
  <msg name="WinJS.UI.Animation.createRepositionAnimation_returnValue">其执行方法在动画完成时返回完成的 Promise 的 RepositionAnimation 对象。</msg>
  <msg name="WinJS.UI.Animation.fadeIn">执行淡入动画。</msg>
  <msg name="WinJS.UI.Animation.fadeIn_p:element">要淡入的单个元素或元素集合。在动画结束时，元素的不透明度为 1。</msg>
  <msg name="WinJS.UI.Animation.fadeIn_returnValue">动画完成时完成的 Promise 对象。</msg>
  <msg name="WinJS.UI.Animation.fadeOut">执行淡出动画。</msg>
  <msg name="WinJS.UI.Animation.fadeOut_p:element">要淡出的单个元素或元素集合。动画结束时，元素的不透明度为 0。</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation">创建动画，以添加到列表。在创建 AddToListAnimation 对象之后，修改文档以将元素移到其新位置，然后调用 AddToListAnimation 对象上的执行方法。</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation_p:added">添加的单个元素或元素集合。</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation_p:affected">其位置受添加影响的单个元素或元素集合。</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation_returnValue">其执行方法在动画完成时返回完成的 Promise 的 AddToListAnimation 对象。</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation">创建动画，以从列表中删除。在创建 DeleteFromListAnimation 对象之后，修改文档以反映删除，然后调用 DeleteFromListAnimation 对象上的执行方法。</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation_p:deleted">将删除的单个元素或元素集合。动画完成时，应用程序应隐藏元素或将其从文档中移除。</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation_p:remaining">其位置受删除影响的单个元素或元素集合。</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation_returnValue">其执行方法在动画完成时返回完成的 Promise 的 DeleteFromListAnimation 对象。</msg>
  <msg name="WinJS.UI.Animation.createAddToSearchListAnimation">创建动画，以添加到搜索结果列表。这类似于 AddToListAnimation，但速度更快。在创建 AddToSearchListAnimation 对象之后，修改文档以将元素移到其新位置，然后调用 AddToSearchListAnimation 对象上的执行方法。</msg>
  <msg name="WinJS.UI.Animation.createAddToSearchListAnimation_returnValue">其执行方法在动画完成时返回完成的 Promise 的 AddToSearchListAnimation 对象。</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromSearchListAnimation">创建动画，以从搜索结果列表中删除。这类似于 DeleteFromListAnimation，但速度更快。在创建 DeleteFromSearchListAnimation 对象之后，修改文档以将元素移到其新位置，然后调用 DeleteFromSearchListAnimation 对象上的执行方法。</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromSearchListAnimation_returnValue">其执行方法在动画完成时返回完成的 Promise 的 DeleteFromSearchListAnimation 对象。</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI">将一个或多个元素滑入屏幕边缘的位置。此动画设计用于应用程序栏等小对象。</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI_p:element">要滑入位置的单个元素或元素集合。调用功能时元素应位于其最终位置。</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI_p:offset">描述动画起始点的可选偏移量对象或偏移量对象数组集合。如果偏移量对象数小于元素参数的长度，则所有剩余元素的最后一个值都重复。如果省略此参数，则使用默认值。</msg>
  <msg name="WinJS.UI.Animation.showPanel">将一个或多个元素滑入屏幕边缘的位置。此动画设计用于诸如键盘的大对象。</msg>
  <msg name="WinJS.UI.Animation.showPanel_returnValue">promise 对象</msg>
  <msg name="WinJS.UI.Animation.hideEdgeUI">将一个或多个元素视图屏幕的边缘。此动画设计用于应用程序栏等小对象。</msg>
  <msg name="WinJS.UI.Animation.hideEdgeUI_p:element">要滑出的单个元素或元素集合。调用功能时元素应位于其屏幕上的位置。</msg>
  <msg name="WinJS.UI.Animation.hideEdgeUI_p:offset">描述动画结束点的可选偏移量对象或偏移量对象数组集合。如果偏移量对象数小于元素参数的长度，则所有剩余元素的最后一个值都重复。如果省略此参数，则使用默认值。</msg>
  <msg name="WinJS.UI.Animation.hidePanel">将一个或多个元素视图屏幕的边缘。此动画设计用于诸如键盘的大对象。</msg>
  <msg name="WinJS.UI.Animation.showPopup">以弹出样式显示一个或多个元素。</msg>
  <msg name="WinJS.UI.Animation.showPopup_p:element">要像弹出一样显示的单个元素或元素集合。</msg>
  <msg name="WinJS.UI.Animation.hidePopup">从屏幕中移除弹出。</msg>
  <msg name="WinJS.UI.Animation.hidePopup_p:element">要像弹出一样隐藏的单个元素或元素集合。动画完成时，应用程序应隐藏元素或将其从文档中移除。</msg>
  <msg name="WinJS.UI.Animation.pointerDown">执行指针按下动画。使用 pointerUp 动画反转此动画的效果。</msg>
  <msg name="WinJS.UI.Animation.pointerDown_p:element">响应指针按下事件的一个元素或元素集合。动画结束时，修改元素的属性，以反映指针按下状态。</msg>
  <msg name="WinJS.UI.Animation.pointerUp">执行指针弹起动画。反转 pointerDown 动画的效果。</msg>
  <msg name="WinJS.UI.Animation.pointerUp_p:element">响应指针弹起事件的一个元素或元素集合。动画结束时，元素的属性返回到常规。</msg>
  <msg name="WinJS.UI.Animation.dragSourceStart">执行拖动启动动画。使用 dragSourceEnd 动画反转此动画的效果。</msg>
  <msg name="WinJS.UI.Animation.dragSourceStart_p:dragSource">要拖动的单个元素或元素集合。动画结束时，修改元素的属性，以反映拖动状态。</msg>
  <msg name="WinJS.UI.Animation.dragSourceStart_p:affected">要突出显示而不拖动的单个元素或元素集合。动画结束时，修改元素的属性，以反映拖动状态。</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd">执行拖动结束动画。反转 dragSourceStart 动画的效果。</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd_p:dragSource">不再拖动的单个元素或元素集合。动画结束时，元素的属性返回到常规。</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd_p:offset">描述动画起始点的可选偏移量对象或偏移量对象数组集合。如果偏移量对象数小于 dragSource 参数的长度，则所有剩余元素的最后一个值都重复。如果省略此参数，则使用默认值。</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd_p:affected">突出显示而不拖动的单个元素或元素集合。动画结束时，元素的属性返回到常规。</msg>
  <msg name="WinJS.UI.Animation.enterContent">执行进入内容动画。</msg>
  <msg name="WinJS.UI.Animation.enterContent_p:incoming">单个表示传入内容的单个元素或元素集合。动画结束时，元素的不透明度为 1。</msg>
  <msg name="WinJS.UI.Animation.enterContent_p:offset">描述动画起始点的可选偏移量对象或偏移量对象数组集合。如果偏移量对象数小于传入参数的长度，则所有剩余元素的最后一个值都重复。如果省略此参数，则使用默认值。</msg>
  <msg name="WinJS.UI.Animation.exitContent">执行退出内容动画。</msg>
  <msg name="WinJS.UI.Animation.exitContent_p:outgoing">单个表示传出内容的单个元素或元素集合。动画结束时，元素的不透明度为 0。</msg>
  <msg name="WinJS.UI.Animation.exitContent_p:offset">描述动画结束点的可选偏移量对象或偏移量对象数组集合。如果偏移量对象数小于传出参数的长度，则所有剩余元素的最后一个值都重复。如果省略此参数，则使用默认值。</msg>
  <msg name="WinJS.UI.Animation.dragBetweenEnter">执行指示可将拖动的对象放置到其他元素之间的动画。使用 dragBetweenLeave 动画反转此动画的效果。</msg>
  <msg name="WinJS.UI.Animation.dragBetweenEnter_p:target">可以在其之间放置拖动对象的单个元素或元素集合（通常为两个）。动画结束时，修改元素的属性，以反映拖动间的状态。</msg>
  <msg name="WinJS.UI.Animation.dragBetweenLeave">执行指示不再将拖动的对象放置到其他元素之间的动画。反转 dragBetweenEnter 动画的效果。</msg>
  <msg name="WinJS.UI.Animation.dragBetweenLeave_p:target">将不再在其之间放置拖动对象的单个元素或元素集合（通常为两个）。动画结束时，已2将元素的属性设置为 dragSourceStart 状态。</msg>
  <msg name="WinJS.UI.Animation.swipeSelect">将重击选定的对象滑回释放指针时的位置，并显示选择内容标记。</msg>
  <msg name="WinJS.UI.Animation.swipeSelect_p:selected">要选择的单个元素或元素集合。动画结束时，元素的属性返回到常规。</msg>
  <msg name="WinJS.UI.Animation.swipeSelect_p:selection">属于选择标记的单个元素或元素集合。</msg>
  <msg name="WinJS.UI.Animation.swipeDeselect">将重击取消选定的对象滑回释放指针时的位置，并隐藏选择内容标记。</msg>
  <msg name="WinJS.UI.Animation.swipeDeselect_p:deselected">要取消选择的单个元素或元素集合。动画结束时，元素的属性返回到常规。</msg>
  <msg name="WinJS.UI.Animation.swipeReveal">重击时显示对象，或者将重击选择的对象滑回显示后的位置。</msg>
  <msg name="WinJS.UI.Animation.swipeReveal_p:target">要选择的单个元素或元素集合。动画结束时，修改元素的属性，以反映指定的偏移量。</msg>
  <msg name="WinJS.UI.Animation.swipeReveal_p:offset">描述动画结束点的可选偏移量对象或偏移量对象数组集合。将对象移回位置时，偏移量应为 { 顶部：“0px”，左侧：“0px”}。如果偏移量对象数小于元素参数的长度，则所有剩余元素的最后一个值都重复。如果省略此参数，则使用默认值。说明显示运动的默认值。</msg>
  <msg name="WinJS.UI.Animation.enterPage">执行 enterPage 动画。</msg>
  <msg name="WinJS.UI.Animation.enterPage_p:element">表示传入页的单个元素或元素集合。动画结束时，元素的不透明度为 1。</msg>
  <msg name="WinJS.UI.Animation.exitPage">执行 exitPage 动画。</msg>
  <msg name="WinJS.UI.Animation.exitPage_p:outgoing">表示传出页的单个元素或元素集合。动画结束时，元素的不透明度为 0。</msg>
  <msg name="WinJS.UI.Animation.crossFade">执行 crossFade 动画。</msg>
  <msg name="WinJS.UI.Animation.crossFade_p:incoming">单个传入元素或传入元素集合。动画结束时，元素的不透明度为 1。</msg>
  <msg name="WinJS.UI.Animation.crossFade_p:outgoing">单个传出元素或传出元素集合。动画结束时，元素的不透明度为 0。</msg>
  <msg name="WinJS.UI.Animation.createPeekAnimation">创建查看动画。在创建 PeekAnimation 对象之后，修改文档以将元素移到其新位置，然后调用 PeekAnimation 对象上的执行方法。</msg>
  <msg name="WinJS.UI.Animation.createPeekAnimation_p:element">要重新定位以进行查看的单个元素或元素集合。</msg>
  <msg name="WinJS.UI.Animation.createPeekAnimation_returnValue">其执行方法在动画完成时返回完成的 Promise 的 PeekAnimation 对象。</msg>
  <msg name="WinJS.UI.Animation.updateBadge">执行 updateBadge 动画。</msg>
  <msg name="WinJS.UI.Animation.updateBadge_p:incoming">表示传入徽章的单个元素或元素集合。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource._baseDataSourceConstructor">初始化自定义数据源的 VirtualizedDataSource 基类。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource._baseDataSourceConstructor_p:itemIndex">实现 IListDataAdapter 并向 VirtualizedDataSource 提供数据的对象。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource._baseDataSourceConstructor_p:options">包含为 VirtualizedDataSource 指定附加选项的属性的对象：cacheSize，指定要在请求时缓存的最小未请求项数的数字。选项参数是可选的。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler">传递给 IListDataAdapter.setNotificationHandler 方法的 IListDataNotificationHandler 的实现。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.invalidateAll">请注意某些数据已更改的 VirtualizedDataSource，无需指定哪些数据。对于某些数据源而言，针对任何或所有更改调用此方法可能是不可行的，因此，此调用是可选的。但是，如果给定数据适配器从不调用它，则应用程序应定期调用 VirtualizedDataSource 上的 invalidateAll 以便刷新数据。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.invalidateAll_returnValue">数据刷新完成时且所有更改通知均已发出时完成的 Promise。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.reload">通知列表数据源列表数据已更改，以便更好地从头开始重载数据。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.beginNotifications">指示通知批处理的开头。在调用其他通知序列之前调用，以便最小化发送给 VirtualizedDataSource 客户端的 countChanged 和 indexChanged 通知数。必须将其与对 endNotifications 的调用配对，且不能嵌套配对。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted">引发已插入项时的通知。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:newItem">插入的项。它必须具有键和数据属性（它必须实现 IItem 接口）。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:previousKey">插入点之前项的键，如果在列表开头插入项，则为 null。如果指定了 nextKey，则可以为 null。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:nextKey">插入点之后项的键，如果在列表末尾插入项，则为 null。如果指定了 previousKey，则可以为 null。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:index">插入项的索引。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.changed">引发项已发生更改的通知。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.changed_p:item">表示项已发生更改的 IItem。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved">引发已移动项的通知。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:item">已移动的项。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:previousKey">插入点之前项的键，如果将项移至列表开头，则为 null。如果指定了 nextKey，则可以为 null。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:nextKey">插入点之后项的键，如果将项移至列表末尾，则为 null。如果指定了 previousKey，则可以为 null。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:oldIndex">移动项前项的索引。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:newIndex">移动项后项的索引。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.removed">引发已移除项的通知。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.removed_p:key">已移除的项的键。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.removed_p:index">已移除的项的索引。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.endNotifications">得出通知序列，从 beginNotifications 的调用开始。</msg>
  <msg name="WinJS.UI.IListDataSource.createListBinding">创建 IListBinding 对象，允许客户端从列表读取和接收影响客户端已读取列表部分的更改的通知。</msg>
  <msg name="WinJS.UI.IListDataSource.createListBinding_p:notificationHandler">实现 IListNotificationHandler 接口的对象。如果省略此参数，则更改通知将不可用。</msg>
  <msg name="WinJS.UI.IListDataSource.createListBinding_returnValue">实现 IListBinding 接口的对象。</msg>
  <msg name="WinJS.UI.IListBinding">一个接口，允许客户端从列表读取和接收影响客户端已读取列表部分的更改的通知。IListBinding 还可以通过任何时候均可更改的别表进行枚举。</msg>
  <msg name="WinJS.UI.IListBinding.jumpToItem">使指定的项成为当前项。</msg>
  <msg name="WinJS.UI.IListBinding.jumpToItem_p:item">要使之成为当前项的 IItem 或 IItemPromise。</msg>
  <msg name="WinJS.UI.IListBinding.jumpToItem_returnValue">一个对象，实现 IItemPromise 接口，并作为指定项的 promise。如果指定的项不在列表中，则 promise 完成时的值为 null。</msg>
  <msg name="WinJS.UI.IListBinding.current">检索当前项。</msg>
  <msg name="WinJS.UI.IListBinding.current_returnValue">一个对象，实现 IItemPromise 接口，并作为当前项的 promise。如果光标移到列表的开头或结尾，则 promise 完成时的值为 null。如果当前项已删除或移动，则 promise 返回错误。</msg>
  <msg name="WinJS.UI.IListBinding.previous">检索当前项之前的项并使其成为当前项。</msg>
  <msg name="WinJS.UI.IListBinding.previous_returnValue">一个对象，实现 IItemPromise 接口，并作为前一个项的 promise。如果光标移到列表的开头，则 promise 完成时的值为 null。</msg>
  <msg name="WinJS.UI.IListBinding.next">检索当前项之后的项并使其成为当前项。</msg>
  <msg name="WinJS.UI.IListBinding.next_returnValue">一个对象，实现 IItemPromise 接口，并作为下一个项的 promise。如果光标移到列表的或结尾，则 promise 完成时的值为 null。</msg>
  <msg name="WinJS.UI.IListBinding.releaseItem">创建请求，以停止指定项目的更改通知。该项仅在释放调用数与 IItemPromise.retain 调用数匹配时释放。释放调用数不能超过保留调用数。仅当在创建此 IListBinding 时将 IListNotificationHandler 传递到 IListDataSource.createListBinding 时，才提供此方法。</msg>
  <msg name="WinJS.UI.IListBinding.releaseItem_p:item">要释放的 IItem 或 IItemPromise。</msg>
  <msg name="WinJS.UI.IListBinding.release">释放资源，停止通知，并取消此 IListBinding 返回的所有跟踪项的未满足 promise。</msg>
  <msg name="WinJS.UI.IListBinding.first">检索列表中的第一项并使其成为当前项。</msg>
  <msg name="WinJS.UI.IListBinding.first_returnValue">作为所请求项的 promise 的 IItemPromise。如果列表为空，则 Promise 完成的值为 null。</msg>
  <msg name="WinJS.UI.IListBinding.last">检索列表中的最后一项并使其成为当前项。</msg>
  <msg name="WinJS.UI.IListBinding.fromKey">检索具有指定键的项并使其成为当前项。</msg>
  <msg name="WinJS.UI.IListBinding.fromKey_p:key">所请求项的键。必须为非空字符串。</msg>
  <msg name="WinJS.UI.IListBinding.fromKey_p:hints">IListDataAdapter 关于要增加检索时间的项的位置的域特定提示。</msg>
  <msg name="WinJS.UI.IListBinding.fromKey_returnValue">作为所请求项的 promise 的 IItemPromise。如果列表不包含具有指定键的项，则 Promise 完成时的值为 null。</msg>
  <msg name="WinJS.UI.IListBinding.fromIndex">检索具有指定索引的项并使其成为当前项。</msg>
  <msg name="WinJS.UI.IListBinding.fromIndex_p:index">属于要检索的项的索引的值大于或等于 0。</msg>
  <msg name="WinJS.UI.IListBinding.fromIndex_returnValue">作为所请求项的 promise 的 IItemPromise。如果列表不包含具有指定索引的项，则 IItemPromise 完成时的值为 null。</msg>
  <msg name="WinJS.UI.IListBinding.fromDescription">检索具有指定说明的项并使其成为当前项。</msg>
  <msg name="WinJS.UI.IListDataSource.fromDescription_p:description">将由列表数据适配器解释的请求项目的域特定说明。</msg>
  <msg name="WinJS.UI.IListDataSource.fromDescription_returnValue">所请求项的 Promise。如果列表不包含具有指定说明的项，则 IItemPromise 完成时的值为 null。</msg>
  <msg name="WinJS.UI.IListDataSource.invalidateAll">通过在数据适配器中重新请求缓存项，使数据源进行刷新。如果数据已更改，则数据源将生成通知。</msg>
  <msg name="WinJS.UI.IListDataSource.invalidateAll_returnValue">数据刷新完成时且所有更改通知均已发出时完成的 Promise。</msg>
  <msg name="WinJS.UI.IListDataSource.getCount">检索数据源中的项数。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromKey">检索具有指定键的项。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromKey_p:hints">IListDataAdapter 关于要增加检索时间的项的位置的域特定提示。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromKey_returnValue">所请求项的 Promise。如果列表不包含具有指定键的项，则 Promise 完成时的值为 null。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromIndex">检索指定索引处的项。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromIndex_p:index">属于所请求项的索引的值大于或等于零。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromIndex_returnValue">所请求项的 Promise。如果列表不包含具有指定索引的项，则 Promise 完成时的值为 null。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromDescription">检索具有指定说明的项。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromDescription_p:description">说明要检索且将由 IListDataAdapter 解释的项的域特定信息。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromDescription_returnValue">所请求项的 Promise。如果列表不包含具有指定说明的项，则 Promise 完成时的值为 null。</msg>
  <msg name="WinJS.UI.IListDataSource.beginEdits">通知数据源编辑序列即将开始。对于编辑序列，数据源每次均调用 IListNotificationHandler.beginNotifications 和 endNotifications。</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart">将项添加到数据源的开头。</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart_p:key">如果知道，则为要插入项的键；否则，为 null。</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart_p:data">要添加的项的数据。</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart_returnValue">包含已添加的 IItem 的 Promise，或者如果出错，则为 EditError。</msg>
  <msg name="WinJS.UI.IListDataSource.insertBefore">将项插入另一个项之前。</msg>
  <msg name="WinJS.UI.IListDataSource.insertBefore_p:data">要插入的项的数据。</msg>
  <msg name="WinJS.UI.IListDataSource.insertBefore_p:nextKey">数据源中项的键。新数据插入此项之前。</msg>
  <msg name="WinJS.UI.IListDataSource.insertAfter">将项插入另一个项之后。</msg>
  <msg name="WinJS.UI.IListDataSource.insertAfter_p:previousKey">数据源中项的键。新项添加到此项之后。</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtEnd">将项添加到数据源的末尾。</msg>
  <msg name="WinJS.UI.IListDataSource.change">重写指定项的数据。</msg>
  <msg name="WinJS.UI.IListDataSource.change_p:key">要替换的项的键。</msg>
  <msg name="WinJS.UI.IListDataSource.change_p:newData">项的新数据。</msg>
  <msg name="WinJS.UI.IListDataSource.change_returnValue">包含已更新的 IItem 的 Promise，或者如果出错，则为 EditError。</msg>
  <msg name="WinJS.UI.IListDataSource.moveToStart">将指定项移至数据源的开头。</msg>
  <msg name="WinJS.UI.IListDataSource.moveToStart_p:key">要移动的项的键。</msg>
  <msg name="WinJS.UI.IListDataSource.moveToStart_returnValue">包含已移动的 IItem 的 Promise，或者如果出错，则为 EditError。</msg>
  <msg name="WinJS.UI.IListDataSource.moveBefore">将指定项一直另一个项之前。</msg>
  <msg name="WinJS.UI.IListDataSource.moveBefore_p:nextKey">数据源中另一个项的键。由键参数指定的项将移至此项之前的位置。</msg>
  <msg name="WinJS.UI.IListDataSource.moveAfter">将项移至另一个项之后。</msg>
  <msg name="WinJS.UI.IListDataSource.moveAfter_p:previousKey">数据源中另一个项的键。由键参数指定的项将移至此项之后的位置。</msg>
  <msg name="WinJS.UI.IListDataSource.moveToEnd">将项移至数据源的末尾。</msg>
  <msg name="WinJS.UI.IListDataSource.remove">从数据源移除一个项。</msg>
  <msg name="WinJS.UI.IListDataSource.remove_p:key">要移除的项的键。</msg>
  <msg name="WinJS.UI.IListDataSource.remove_returnValue">如果操作成功则不包含内容，或者如果出错，则包含 EditError 的 Promise。</msg>
  <msg name="WinJS.UI.IListDataSource.endEdits">通知数据源编辑序列已结束。对于编辑序列，数据源每次均调用 IListNotificationHandler.beginNotifications 和 endNotifications。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource">定义自定义数据源时用作基类。不要直接实例化。</msg>
  <msg name="WinJS.UI.computeDataSourceGroups">返回将组信息添加到另一个数据源的项的数据源。此数据源的“组”属性评估为枚举组自身的另一个数据源。</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:listDataSource">要分组的单个项的数据源。</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:groupKey">将列表中的项作为参数的回调函数。针对列表中的每个项调用函数并为作为字符串的项返回组键。</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:groupData">将 IListDataSource 中的项作为参数的回调函数。在每个组中的一个项上调用函数并返回表示组标头的对象。</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:options">可以包含指定附加选项的属性的对象：groupCountEstimate：组数的初始估计值。如果指定 -1，则此函数不返回结果，直到确定了组的实际数目。batchSize：值大于零的一个数字，用以指定要在搜索组时各处理过程中提取的项的数目。（除了指定的数字外，还将始终包含前一批中的一个项。）</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_returnValue">IListDataSource，包含原始数据源中的项并在“组”属性中提供附加组信息。“组”属性返回枚举列表不同组的其他 IListDataSource。</msg>
  <msg name="WinJS.UI.StorageDataSource.loadThumbnail">为图像原始返回 promise，该 promise 在将所提供完整数量的缩略图绘制到图像元素。</msg>
  <msg name="WinJS.UI.StorageDataSource.loadThumbnail_p:item">要检索其缩略图的项。</msg>
  <msg name="WinJS.UI.StorageDataSource.loadThumbnail_p:image">与使用的图像元素。如果未提供，则创建新的图像元素。</msg>
  <msg name="WinJS.UI.BrowseMode.selectionchanging.setPromise">用于通知 ListView 正在执行异步工作以及此事件处理程序不应该被视为完成直到完成了该承诺。</msg>
  <msg name="WinJS.UI.BrowseMode.selectionchanging.setPromise_p:promise">等待的承诺。</msg>
  <msg name="WinJS.UI.Layout.constructor">创建新的布局对象。</msg>
  <msg name="WinJS.UI.Layout.constructor_p:options">最初应用于新布局对象的选项的集。</msg>
  <msg name="WinJS.UI.Layout.constructor_returnValue">新的 Layout 对象。</msg>
  <msg name="WinJS.UI.ListView.SelectionMode">为 ListView 指定选择模式。</msg>
  <msg name="WinJS.UI.ListView.SelectionMode.none">无法选择项。</msg>
  <msg name="WinJS.UI.ListView.SelectionMode.single">可以选择单个项。</msg>
  <msg name="WinJS.UI.ListView.SelectionMode.multi">可以选择多个项。</msg>
  <msg name="WinJS.UI.ListView.TapBehavior">指定 ListView 中的项对重击交互的响应方式。</msg>
  <msg name="WinJS.UI.ListView.TapBehavior.directSelect">重击项进行调用并选择。导航到具有键盘的项将更改选定内容，以便焦点项仅为选定的项。</msg>
  <msg name="WinJS.UI.ListView.TapBehavior.toggleSelect">重击项进行调用。如果选择了该项，则重击清除选择内容。如果未选择该项，则重击该项选择它。导航到具有键盘的项不会选择或调用它。</msg>
  <msg name="WinJS.UI.ListView.TapBehavior.invokeOnly">重击项进行调用。导航到具有键盘的项不会选择或调用它。</msg>
  <msg name="WinJS.UI.ListView.TapBehavior.none">不发生任何事件。</msg>
  <msg name="WinJS.UI.ListView.SwipeBehavior">指定是否在用户执行重击交互时选择项。</msg>
  <msg name="WinJS.UI.ListView.SwipeBehavior.select">重击交互选择该重击触摸的项。</msg>
  <msg name="WinJS.UI.ListView.SwipeBehavior.none">重击交互不更改选中的项。</msg>
  <msg name="WinJS.UI.ListView.ListViewAnimationType">指定 ListView 动画是否为入口动画或转换动画。</msg>
  <msg name="WinJS.UI.ListView.ListViewAnimationType.entrance">首次显示 ListView 时，播放动画。</msg>
  <msg name="WinJS.UI.ListView.ListViewAnimationType.contentTransition">ListView 更改其内容时，播放动画。</msg>
  <msg name="WinJS.UI._Selection.prototype.selectAll">将 ListView 中的所有项添加到选定内容。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.count">返回选定内容中的项数。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.count_returnValue">选定内容中的项数。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getIndices">返回选定内容中项索引的列表。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getIndices_returnValue">选定内容中项索引的列表用作 Number 对象。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getItems">返回包含选定内容中项的数组。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getItems_returnValue">包含所请求 IItem 对象的数组的 Promise。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getRanges">获取选定项的索引范围的数组。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getRanges_returnValue">包含选定内容中各索引范围的 ISelectionRange 对象的数组。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.isEverything">返回一个值，该值指示选定内容是否包含数据源中的每个项。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.isEverything_returnValue">如果选定内容包含数据源中的每个项，则为 true；否则为 false。</msg>
  <msg name="WinJS.UI.AppBarIcon">AppBarIcon 枚举提供用于 AppBarCommand 图标属性的标志符号集。</msg>
  <msg name="WinJS.UI.SettingsFlyout.show_static">激活设置魅力窗口。</msg>
  <msg name="WinJS.UI.SettingsFlyout.populateSettings">填充要显示在设置魅力窗口中的设置命令。</msg>
  <msg name="WinJS.UI.SettingsFlyout.showSettings_p:e">保存要显示在设置魅力窗口中的设置命令的事件对象。</msg>
  <msg name="WinJS.UI.SettingsFlyout.showSettings">使用页的路径显示 SettingsFlyout，包含设置元素和设置元素 ID。</msg>
</messagebundle>